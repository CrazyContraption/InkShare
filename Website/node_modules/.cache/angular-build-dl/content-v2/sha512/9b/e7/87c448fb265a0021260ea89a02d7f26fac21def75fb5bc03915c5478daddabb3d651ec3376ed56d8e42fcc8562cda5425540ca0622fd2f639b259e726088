{"version":3,"sources":["$_lazy_route_resource lazy namespace object","src/app/about/about.component.html","src/app/account-register/account-register.component.html","src/app/app.component.html","src/app/canvas/canvas-settings.dialog.html","src/app/canvas/canvas.component.html","src/app/forgot-password/forgot-password.component.html","src/app/header/header.component.html","src/app/home/home.component.html","src/app/invite/invite.component.html","src/app/library/add-friend.dialog.html","src/app/library/add-participant.dialog.html","src/app/library/create-canvas.dialog.html","src/app/library/delete-canvas.dialog.html","src/app/library/library.component.html","src/app/login/login.component.html","src/app/reset/reset.component.html","src/app/user-settings/account-delete.dialog.html","src/app/user-settings/account-password.dialog.html","src/app/user-settings/user-settings.component.html","node_modules/tslib/tslib.es6.js","src/app/about/about.component.css","src/app/about/about.component.ts","src/app/account-register/account-register.component.css","src/app/account-register/account-register.component.ts","src/app/angular-materials.ts","src/app/animations.ts","src/app/app-routing.module.ts","src/app/app.component.css","src/app/app.component.ts","src/app/app.module.ts","src/app/canvas/canvas.component.css","src/app/canvas/canvas.component.ts","src/app/data-model-classes.ts","src/app/data-model-manager.service.ts","src/app/forgot-password/forgot-password.component.css","src/app/forgot-password/forgot-password.component.ts","src/app/guard-auth.service.ts","src/app/header/header.component.css","src/app/header/header.component.ts","src/app/home/home.component.css","src/app/home/home.component.ts","src/app/intercept-token.service.ts","src/app/invite/invite.component.css","src/app/invite/invite.component.ts","src/app/library/library.component.css","src/app/library/library.component.ts","src/app/login/login.component.css","src/app/login/login.component.ts","src/app/reset/reset.component.css","src/app/reset/reset.component.ts","src/app/user-settings/user-settings.component.css","src/app/user-settings/user-settings.component.ts","src/app/web-socket.service.ts","src/environments/environment.ts","src/main.ts","ws (ignored)"],"names":[],"mappings":"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","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<div class=\\\"row\\\">\\r\\n    <div class='col-md-8 col-sm-12'>\\r\\n        <mat-card id=\\\"info\\\" class=\\\"mat-elevation-z8\\\">\\r\\n            <h2>BTS 630 - Capstone Major Project</h2>\\r\\n        </mat-card>\\r\\n        <br>\\r\\n        <mat-card id=\\\"border\\\" class=\\\"mat-elevation-z8\\\">\\r\\n            <h3>InkShare</h3>\\r\\n            <p>Welcome, and thank you for participating in using InkShare!</p>\\r\\n            <p>InkShare allows users to collaborate on drawing projects from anywhere via Socket.io and P5 integrations\\r\\n                with Angular.</p>\\r\\n            <p>InkShare uses five fundamental but seperate parts divided over three servers to operate.</p>\\r\\n            <p>Below you can find the three fundamental parts and how they losely operate.</p>\\r\\n        </mat-card>\\r\\n        <br>\\r\\n        <mat-card id=\\\"border\\\" class=\\\"mat-elevation-z8\\\">\\r\\n            Fundamental Parts\\r\\n            <ol>\\r\\n                <li>Website - Frontend user UI provided via Angular/cli encased in a Node.js wrapper.</li>\\r\\n                <li>Webservers - Connects canvases together in real time via Socket.io</li>\\r\\n                <li>Canvas App - Implemented via P5 and minor JavaScript black magic.</li>\\r\\n                <li>Webservice - Security bridge to the database using get and put requests.</li>\\r\\n                <li>Database - Backend data storage provided via a MongoDB service.</li>\\r\\n            </ol>\\r\\n            &nbsp;\\r\\n            Servers\\r\\n            <ol>\\r\\n                <li>Website - Heroku Server 1\\r\\n                    <ul>\\r\\n                        <li>Contains the frontend that the user sees and operates with.</li>\\r\\n                        <li>Uses Angular routing, forum validation to communicate with our webservice. This includes:\\r\\n                            <ul>\\r\\n                                <li>Creating accounts</li>\\r\\n                                <li>Logging in</li>\\r\\n                                <li>Canvas handoffs</li>\\r\\n                            </ul>\\r\\n                        </li>\\r\\n                        <li>Uses Socket.io and as js node wrapper to display a dynamic P5 canvas.</li>\\r\\n                        <li>Features authentication and privacy components.</li>\\r\\n                        <li>Dynamically generates additional Socket.io servers for every new canvas, hosted locally on\\r\\n                            the same server.</li>\\r\\n                    </ul>\\r\\n                </li>\\r\\n                <li>Webservice - Heroku Server 2\\r\\n                    <ul>\\r\\n                        <li>Uses get and put requests from the Website to securely communicate with the database for the\\r\\n                            Website.</li>\\r\\n                        <li>Handles the security of the database by not allowing clients to directly interact with the\\r\\n                            data.</li>\\r\\n                    </ul>\\r\\n                </li>\\r\\n                <li>Database - MongoDB Server\\r\\n                    <ul>\\r\\n                        <li>Hosts user accounts</li>\\r\\n                        <li>Hosts canvases</li>\\r\\n                        <li>Communicates with the webservice via a backend schema.</li>\\r\\n                    </ul>\\r\\n                </li>\\r\\n            </ol>\\r\\n        </mat-card>\\r\\n        <br>\\r\\n        <mat-card id=\\\"border\\\" class=\\\"mat-elevation-z8\\\">\\r\\n            <h3>Basic User Information</h3>\\r\\n            <dl *ngIf=\\\"account\\\" class=\\\"dl-horizontal\\\">\\r\\n                <dt>Encoded payload</dt>\\r\\n                <dd>{{ accountToken }}</dd>\\r\\n                <dt>&nbsp;</dt>\\r\\n                <dd>&nbsp;</dd>\\r\\n                <dt>Decoded Account</dt>\\r\\n                <dd>{{ account | json }}</dd>\\r\\n                <dt>&nbsp;</dt>\\r\\n                <dd>&nbsp;</dd>\\r\\n                <dt>Decoded Canvas</dt>\\r\\n                <dd>{{ canvas | json }}</dd>\\r\\n                <dt>&nbsp;</dt>\\r\\n                <dd>&nbsp;</dd>\\r\\n                <dt>Username</dt>\\r\\n                <dd>{{ account.userName }}</dd>\\r\\n                <dt>Email</dt>\\r\\n                <dd>{{ account.email }}</dd>\\r\\n                <dt>ID</dt>\\r\\n                <dd>{{ account._id }}</dd>\\r\\n                <dt>Theme</dt>\\r\\n                <dd>{{ account.theme }}</dd>\\r\\n                <dt>Admin Status</dt>\\r\\n                <dd>{{ account.isAdmin }}</dd>\\r\\n                <dt>&nbsp;</dt>\\r\\n                <dd>&nbsp;</dd>\\r\\n                <dt>Canvases</dt>\\r\\n                <dd>{{ account.canvases.length }}</dd>\\r\\n                <dt>Friends</dt>\\r\\n                <dd>{{ account.friends.length }}</dd>\\r\\n                <dt>&nbsp;</dt>\\r\\n                <dd>&nbsp;</dd>\\r\\n                <dt>Issued date-and-time</dt>\\r\\n                <dd>{{ accountTokenIssuedTimestamp }}</dd>\\r\\n            </dl>\\r\\n            <strong *ngIf=\\\"!account\\\">\\r\\n                No data to view, you're not logged in!\\r\\n            </strong>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n</div>\"","export default \"<div class=\\\"row\\\">\\r\\n    <div class='col-md-12'>\\r\\n        <mat-card id=\\\"info\\\" class=\\\"mat-elevation-z8\\\">\\r\\n            <h3>Want to join InkShare?</h3>\\r\\n        </mat-card>\\r\\n        <br>\\r\\n        <mat-card id=\\\"border\\\" class=\\\"mat-elevation-z8\\\">\\r\\n            <h4>Here's what you'll need:</h4>\\r\\n            <form [formGroup]=\\\"formGroup\\\">\\r\\n                <mat-horizontal-stepper formArrayName=\\\"formArray\\\" [linear]=\\\"true\\\" #stepper>\\r\\n                    <mat-step formGroupName=\\\"0\\\" [stepControl]=\\\"formArray.get([0])\\\">\\r\\n                        <ng-template matStepLabel>\\r\\n                            <div>Email</div>\\r\\n                        </ng-template>\\r\\n                        <mat-form-field>\\r\\n                            <mat-label>What's your email?</mat-label>\\r\\n                            <input matInput type=\\\"email\\\" formControlName=\\\"emailFormCtrl\\\">\\r\\n                            <mat-error>You'll need a valid email to log in with.</mat-error>\\r\\n                        </mat-form-field>\\r\\n                        <div>\\r\\n                            <button mat-raised-button color=\\\"warn\\\" matStepperPrevious disabled>Back</button>\\r\\n                            &nbsp;&nbsp;\\r\\n                            <button\\r\\n                                *ngIf=\\\"regTest('^[A-z0-9._%+-]+@[A-z0-9.-]+\\\\.[A-z]{2,}$',formArray.value[0].emailFormCtrl) && !existTest(formArray.value[0].emailFormCtrl)\\\"\\r\\n                                mat-raised-button color=\\\"primary\\\" matStepperNext>Next</button>\\r\\n                            <button\\r\\n                                *ngIf=\\\"!regTest('^[A-z0-9._%+-]+@[A-z0-9.-]+\\\\.[A-z]{2,}$',formArray.value[0].emailFormCtrl) || existTest(formArray.value[0].emailFormCtrl)\\\"\\r\\n                                mat-raised-button color=\\\"primary\\\" matStepperNext disabled>Next</button>\\r\\n                            &nbsp;&nbsp;\\r\\n                            <strong *ngIf=\\\"formArray.value[0].emailFormCtrl.length < 1\\\" class=\\\"text-danger\\\">\\r\\n                                You'll need a unique email to register</strong>\\r\\n                            <strong *ngIf=\\\"!regTest('^[A-z0-9._%+-]+@[A-z0-9.-]+\\\\.[A-z]{2,}$',formArray.value[0].emailFormCtrl) && formArray.value[0].emailFormCtrl.length > 0\\\"\\r\\n                                class=\\\"text-danger\\\">\\r\\n                                That doesn't appear to be a vaild email</strong>\\r\\n                            <strong *ngIf=\\\"existTest(formArray.value[0].emailFormCtrl)\\\" class=\\\"text-danger\\\">\\r\\n                                That email seems to already exists&nbsp;&nbsp;<a (click)='reset()'>Reset password?</a></strong>\\r\\n                            <span *ngIf=\\\"regTest('^[A-z0-9._%+-]+@[A-z0-9.-]+\\\\.[A-z]{2,}$',formArray.value[0].emailFormCtrl) && !existTest(formArray.value[0].emailFormCtrl)\\\">\\r\\n                                Email looks good!</span>\\r\\n                        </div>\\r\\n                    </mat-step>\\r\\n\\r\\n                    <mat-step formGroupName=\\\"1\\\" [stepControl]=\\\"formArray.get([1])\\\">\\r\\n                        <ng-template matStepLabel>Username</ng-template>\\r\\n                        <mat-form-field>\\r\\n                            <mat-label>What should we call you?</mat-label>\\r\\n                            <input matInput formControlName=\\\"userNameFormCtrl\\\" required>\\r\\n                            <mat-error>You'll need a valid username for others to see.</mat-error>\\r\\n                        </mat-form-field>\\r\\n                        <div>\\r\\n                            <button mat-raised-button color=\\\"warn\\\" matStepperPrevious>Back</button>\\r\\n                            &nbsp;&nbsp;\\r\\n                            <button *ngIf=\\\"formArray.value[1].userNameFormCtrl.length > 0\\\" mat-raised-button\\r\\n                                color=\\\"primary\\\" matStepperNext>Next</button>\\r\\n                            <button *ngIf=\\\"formArray.value[1].userNameFormCtrl.length < 1\\\" mat-raised-button\\r\\n                                color=\\\"primary\\\" matStepperNext disabled>Next</button>\\r\\n                            &nbsp;&nbsp;\\r\\n                            <strong *ngIf=\\\"formArray.value[1].userNameFormCtrl.length < 1\\\" class=\\\"text-danger\\\">\\r\\n                                Your username needs to contain at least 1 character</strong>\\r\\n                            <strong *ngIf=\\\"formArray.value[1].userNameFormCtrl.length > 50\\\" class=\\\"text-danger\\\">\\r\\n                                Woah chill out, try to keep your username under 50 characters</strong>\\r\\n                            <span *ngIf=\\\"formArray.value[1].userNameFormCtrl.length > 0 && formArray.value[1].userNameFormCtrl.length < 51\\\">\\r\\n                                Username is valid!</span>\\r\\n                        </div>\\r\\n                    </mat-step>\\r\\n\\r\\n                    <mat-step formGroupName=\\\"2\\\" [stepControl]=\\\"formArray?.get([2])\\\">\\r\\n                        <ng-template matStepLabel>Password</ng-template>\\r\\n                        <mat-form-field>\\r\\n                            <mat-label>What will your password be?</mat-label>\\r\\n                            <input matInput type=\\\"password\\\" formControlName=\\\"passwordFormCtrl\\\" required>\\r\\n                            <mat-error>You'll need a password to log in with.</mat-error>\\r\\n                        </mat-form-field>\\r\\n                        <mat-form-field>\\r\\n                            <mat-label>Can you confirm it once more?</mat-label>\\r\\n                            <input matInput type=\\\"password\\\" formControlName=\\\"passwordConfirmFormCtrl\\\" required>\\r\\n                            <mat-error>Please enter your above password again.</mat-error>\\r\\n                        </mat-form-field>\\r\\n                        <div>\\r\\n                            <button mat-raised-button color=\\\"warn\\\" matStepperPrevious>Back</button>\\r\\n                            &nbsp;&nbsp;\\r\\n                            <button\\r\\n                                *ngIf=\\\"formArray.value[2].passwordFormCtrl.length > 5 && formArray.value[2].passwordFormCtrl.length < 51 && formArray.value[2].passwordFormCtrl == formArray.value[2].passwordConfirmFormCtrl\\\"\\r\\n                                mat-raised-button color=\\\"primary\\\" matStepperNext>Next</button>\\r\\n                            <button\\r\\n                                *ngIf=\\\"formArray.value[2].passwordFormCtrl.length < 6 || formArray.value[2].passwordFormCtrl.length > 50 || formArray.value[2].passwordFormCtrl != formArray.value[2].passwordConfirmFormCtrl\\\"\\r\\n                                mat-raised-button color=\\\"primary\\\" matStepperNext disabled>Next</button>\\r\\n                            &nbsp;&nbsp;\\r\\n                            <strong *ngIf=\\\"formArray.value[2].passwordFormCtrl.length < 6\\\" class=\\\"text-danger\\\">Passwords\\r\\n                                can't be less than 6 characters.</strong>\\r\\n                            <strong *ngIf=\\\"formArray.value[2].passwordFormCtrl.length > 50\\\" class=\\\"text-danger\\\">Passwords\\r\\n                                can't be more than 50 characters.</strong>\\r\\n                            <strong\\r\\n                                *ngIf=\\\"formArray.value[2].passwordFormCtrl != formArray.value[2].passwordConfirmFormCtrl\\\"\\r\\n                                class=\\\"text-danger\\\">Your passwords must match!</strong>\\r\\n                            <span\\r\\n                                *ngIf=\\\"formArray.value[2].passwordFormCtrl.length > 5 && formArray.value[2].passwordFormCtrl.length < 51 && formArray.value[2].passwordFormCtrl == formArray.value[2].passwordConfirmFormCtrl\\\">\\r\\n                                Passwords match</span>\\r\\n                        </div>\\r\\n                    </mat-step>\\r\\n\\r\\n                    <mat-step>\\r\\n                        <ng-template matStepLabel>Confirm your information</ng-template>\\r\\n                        <p>Your email will be: <strong>{{formArray.value[0].emailFormCtrl}}</strong></p>\\r\\n                        <p>You will be seen as: <strong>{{formArray.value[1].userNameFormCtrl}}</strong></p>\\r\\n                        <p *ngIf=\\\"formArray.value[2].passwordFormCtrl != formArray.value[2].passwordConfirmFormCtrl\\\">\\r\\n                            Please ensure your passwords match!</p>\\r\\n                        <p *ngIf=\\\"formArray.value[2].passwordFormCtrl == formArray.value[2].passwordConfirmFormCtrl\\\">\\r\\n                            Passwords match!</p>\\r\\n                        <br>\\r\\n                        <p>Once you're sure everything is set, click to register below.</p>\\r\\n                        <div>\\r\\n                            <button mat-raised-button color=\\\"warn\\\" matStepperPrevious>Back</button>\\r\\n                            &nbsp;&nbsp;\\r\\n                            <button\\r\\n                                *ngIf=\\\"regTest('^[A-z0-9._%+-]+@[A-z0-9.-]+\\\\.[A-z]{2,}$',formArray.value[0].emailFormCtrl) && formArray.value[1].userNameFormCtrl.length > 0 && formArray.value[2].passwordFormCtrl.length > 5 && formArray.value[2].passwordFormCtrl.length < 51 && formArray.value[2].passwordFormCtrl == formArray.value[2].passwordConfirmFormCtrl\\\"\\r\\n                                mat-raised-button color=\\\"primary\\\" (click)=\\\"onSubmit()\\\">Register</button>\\r\\n                            <button\\r\\n                                *ngIf=\\\"!regTest('^[A-z0-9._%+-]+@[A-z0-9.-]+\\\\.[A-z]{2,}$',formArray.value[0].emailFormCtrl) || formArray.value[1].userNameFormCtrl.length < 1 || formArray.value[2].passwordFormCtrl.length < 6 || formArray.value[2].passwordFormCtrl.length > 50 || formArray.value[2].passwordFormCtrl != formArray.value[2].passwordConfirmFormCtrl\\\"\\r\\n                                mat-raised-button color=\\\"primary\\\" (click)=\\\"onSubmit()\\\" disabled>Register</button>\\r\\n                        </div>\\r\\n                    </mat-step>\\r\\n                </mat-horizontal-stepper>\\r\\n            </form>\\r\\n            <br>\\r\\n            &nbsp;&nbsp;\\r\\n            <button mat-stroked-button class=\\\"btn btn-default\\\" (click)=\\\"router.navigate(['home']);\\\">Back to home</button>\\r\\n            &nbsp;&nbsp;\\r\\n            <span *ngIf='creationError?.length>0' class=\\\"text-danger\\\">{{ creationError }}&nbsp;&nbsp;<a\\r\\n                    (click)='reset()'>Reset password?</a></span>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n</div>\"","export default \"<app-header></app-header>\\r\\n<br>\\r\\n<div id=\\\"routeBody\\\" [@routeAnimation]=\\\"getAnimationData(routerOutlet)\\\">\\r\\n  <router-outlet #routerOutlet=\\\"outlet\\\"></router-outlet>\\r\\n  <footer>\\r\\n    <br>\\r\\n    <mat-card class=\\\"mat-elevation-z8\\\">\\r\\n      <p>2020 - BTS 630 - <a href=\\\"https://github.com/SenecaCollegeBTSProjects/Group_10\\\" target=\\\"parent\\\">Group 10</a>\\r\\n      </p>\\r\\n    </mat-card>\\r\\n    <br>\\r\\n    <br>\\r\\n  </footer>\\r\\n</div>\"","export default \"<div class=\\\"row\\\">\\r\\n    <div class='col-sm-12'>\\r\\n        <h2 mat-dialog-title>Canvas Settings</h2>\\r\\n        <br>\\r\\n        <mat-form-field style=\\\"display: inline;\\\">\\r\\n            <mat-hint align=\\\"start\\\"><strong>Canvas name</strong></mat-hint>\\r\\n            <input\\r\\n                matInput\\r\\n                id=\\\"name\\\"\\r\\n                name=\\\"name\\\"\\r\\n                [(ngModel)]=\\\"data.canvas.name\\\"\\r\\n                #name=\\\"ngModel\\\"\\r\\n                required\\r\\n                minlength=\\\"1\\\"\\r\\n                maxlength=\\\"50\\\"\\r\\n                value=\\\"data.canvas.name\\\"\\r\\n                placeholder=\\\"Canvas Name\\\">\\r\\n            <mat-error *ngIf='name.errors?.required'>Please enter a name for your new canvas</mat-error>\\r\\n            <mat-error *ngIf='name.errors?.minlength'>Your canvas name can't be less than 1 character</mat-error>\\r\\n            <mat-error *ngIf='name.errors?.maxlength'>Your canvas name can't be more than 50 characters</mat-error>\\r\\n        </mat-form-field>\\r\\n        <br>\\r\\n        <mat-form-field>\\r\\n            <mat-label>Canvas Type</mat-label>\\r\\n            <mat-select [(value)]=\\\"data.type\\\">\\r\\n                <mat-option reqired *ngFor=\\\"let type of data.types\\\" [value]=\\\"type.value\\\">\\r\\n                    {{type.value}}\\r\\n                </mat-option>\\r\\n            </mat-select>\\r\\n        </mat-form-field>\\r\\n        <br>\\r\\n        <mat-form-field style=\\\"display: inline;\\\">\\r\\n            <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Find a participant...\\\">\\r\\n        </mat-form-field>\\r\\n        \\r\\n        <table mat-table [dataSource]=\\\"data.dataSource\\\" style=\\\"overflow: auto;\\\">\\r\\n            <ng-container matColumnDef=\\\"name\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef>&nbsp;&nbsp;Name&nbsp;&nbsp;</th>\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\">&nbsp;&nbsp;{{element.userName}}&nbsp;&nbsp;</td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"email\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef>&nbsp;&nbsp;Email&nbsp;&nbsp;</th>\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\">&nbsp;&nbsp;{{element.email}}&nbsp;&nbsp;</td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"permissions\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef>&nbsp;&nbsp;Permissions&nbsp;&nbsp;</th>\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\">&nbsp;&nbsp;{{element.permissions}}&nbsp;&nbsp;</td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"options\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef>&nbsp;&nbsp;Options&nbsp;&nbsp;</th>\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                    <button mat-button [disabled]=\\\"element._id == data.canvas.owner\\\" color=\\\"primary\\\" (click)=\\\"promoteParticipant(element)\\\">Promote</button>&nbsp;\\r\\n                    <button mat-button [disabled]=\\\"element._id == data.canvas.owner\\\" color=\\\"accent\\\" (click)=\\\"demoteParticipant(element)\\\">Demote</button>&nbsp;\\r\\n                    <button mat-button [disabled]=\\\"element._id == data.canvas.owner\\\" color=\\\"warn\\\" (click)=\\\"removeParticipant(element)\\\">Remove</button>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n        \\r\\n            <tr mat-header-row *matHeaderRowDef=\\\"data.displayedColumns\\\"></tr>\\r\\n            <tr mat-row *matRowDef=\\\"let row; columns: data.displayedColumns;\\\"></tr>\\r\\n        </table>\\r\\n        <div mat-dialog-actions>\\r\\n            <button mat-raised-button color=\\\"primary\\\" [mat-dialog-close]=\\\"data\\\" cdkFocusInitial>Save</button>\\r\\n            <button mat-stroked-button (click)=\\\"onNoClick()\\\">Cancel</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"<!--Everything is handled by the TS and JS-->\\r\\n<div class=\\\"row\\\">\\r\\n    <div class='col-sm-12'>\\r\\n        <div id='canvas-header' *ngIf='account && canvas'>\\r\\n            <mat-card id=\\\"info\\\" class=\\\"mat-elevation-z8\\\">\\r\\n                <h2>Welcome to <strong>\\\"{{canvas.name}}\\\"</strong>, {{account.userName}}</h2>\\r\\n            </mat-card>\\r\\n            <br>\\r\\n            <mat-card id=\\\"border\\\" class=\\\"mat-elevation-z8\\\">\\r\\n                <h3 *ngIf=\\\"permissions == 'Visitor'\\\">You're currently a visitor, ask for permission to edit!</h3>\\r\\n                <mat-card id=\\\"secondary\\\" class=\\\"mat-elevation-z8\\\" *ngIf=\\\"(asyncTabs | async) == null\\\">\\r\\n                    <mat-card-title align=\\\"center\\\" style=\\\"margin: auto;\\\">Loading toolkit...</mat-card-title>\\r\\n                    <mat-spinner align=\\\"center\\\" style=\\\"margin: auto;\\\"></mat-spinner>\\r\\n                </mat-card>\\r\\n                <mat-tab-group *ngIf=\\\"permissions != 'Visitor'\\\">\\r\\n                    <mat-tab *ngFor=\\\"let tab of asyncTabs | async\\\">\\r\\n                        <ng-template mat-tab-label>{{tab}}</ng-template>\\r\\n                        <br>\\r\\n                        <div *ngIf=\\\"tab=='File'\\\">\\r\\n                            <button class=\\\"btn btn-danger\\\" (click)=\\\"refreshBtnOnClick()\\\">Refresh Canvas\\r\\n                                (Global)</button> &nbsp;\\r\\n                            <button *ngIf=\\\"(+canvas.dimensions.height) + (+canvas.dimensions.width) <= 350 && disableDrawing != true\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveCanvas()\\\">Save Canvas (Global)</button>\\r\\n                            <button *ngIf=\\\"disableDrawing == true\\\" class=\\\"btn btn-primary\\\" disabled title=\\\"Canvas is busy at this time\\\">Save Canvas (Global)</button>\\r\\n                            <button *ngIf=\\\"(+canvas.dimensions.height) + (+canvas.dimensions.width) > 350\\\" class=\\\"btn btn-primary\\\" disabled title=\\\"Canvas is too large to save\\\">Save Canvas (Global)</button>\\r\\n                            &nbsp;\\r\\n                            <button class=\\\"btn btn-info\\\" (click)=\\\"shareCanvas()\\\">Share Canvas (Global)</button> &nbsp;\\r\\n                            <br>\\r\\n                            <br>\\r\\n                            <label for=\\\"canvas.dimensions.width\\\">Canvas Width: </label>&nbsp;\\r\\n                            <input type=\\\"number\\\" class=\\\"canvas.dimensions.width\\\" [value]=\\\"canvas.dimensions.width\\\"\\r\\n                                (input)='canvasWidthChange($event.target.value)' max='2000' min='1'/> &nbsp;\\r\\n                            <br>\\r\\n                            <label for=\\\"canvas.dimensions.height\\\">Canvas Height: </label>&nbsp;\\r\\n                            <input type=\\\"number\\\" class=\\\"canvasHeight\\\" [value]=\\\"canvas.dimensions.height\\\"\\r\\n                                (input)='canvasHeightChange($event.target.value)' max='2000' min='1'/> &nbsp;\\r\\n                            <br>\\r\\n                            <label for=\\\"backgroundColor\\\">Background Colour (refresh to change): </label> &nbsp;\\r\\n                            <input [value]=\\\"'rgb(' + backgroundR + ', ' + backgroundG + ', '+ backgroundB + ')'\\\" [colorPicker]=\\\"'rgb(' + backgroundR + ', ' + backgroundG + ', '+ backgroundB + ')'\\\" [cpAlphaChannel]=\\\"'disabled'\\\"\\r\\n                                [cpOutputFormat]=\\\"'rgba'\\\" [style.background]=\\\"color2\\\"\\r\\n                                (colorPickerChange)=\\\"color2=$event;\\\" (cpSliderDragEnd)=\\\"backgroundChange($event)\\\"\\r\\n                                (cpInputChange)=\\\"backgroundChange($event)\\\" class=\\\"backgroundColor\\\"/> &nbsp;\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"tab=='Tools'\\\">\\r\\n                            <label for=\\\"fillColor\\\">Fill Colour: </label> &nbsp;\\r\\n                            <input [value]=\\\"'rgb(' + selectedRed + ', ' + selectedGreen + ', '+ selectedBlue + ')'\\\" [colorPicker]=\\\"'rgb(' + selectedRed + ', ' + selectedGreen + ', '+ selectedBlue + ')'\\\" [cpAlphaChannel]=\\\"'disabled'\\\"\\r\\n                                [cpOutputFormat]=\\\"'rgba'\\\" [style.background]=\\\"color\\\" (colorPickerChange)=\\\"color=$event;\\\"\\r\\n                                (cpSliderDragEnd)=\\\"colorChange($event)\\\" (cpInputChange)=\\\"colorChange($event)\\\"\\r\\n                                [cpToggle]=\\\"true\\\" class=\\\"fillColor\\\" /> &nbsp;\\r\\n\\r\\n                            <button class=\\\"btn btn-primary\\\" (click)=\\\"brushChangebtn('rectangle')\\\">Square</button> &nbsp;\\r\\n                            <button class=\\\"btn btn-primary\\\" (click)=\\\"brushChangebtn('ellipse')\\\">Circle</button> &nbsp;\\r\\n                            <button class=\\\"btn btn-primary\\\" (click)=\\\"brushChangebtn('triangle')\\\">Triangle</button>\\r\\n                            &nbsp;\\r\\n                            <button class=\\\"btn btn-primary\\\" (click)=\\\"brushChangebtn('diamond')\\\">Diamond</button> &nbsp;\\r\\n                            <br>\\r\\n                            <label for=\\\"size\\\">Brush Size: </label>\\r\\n                            <mat-slider thumbLabel class=\\\"size\\\" min=\\\"1\\\" max=\\\"100\\\" step=\\\"1\\\" value=\\\"36\\\"\\r\\n                                [(ngModel)]='selectedSize'>\\r\\n                            </mat-slider>\\r\\n                            &nbsp;\\r\\n\\r\\n                            <label for=\\\"outlineColor\\\">Outline Colour: </label> &nbsp;\\r\\n                            <input [value]=\\\"'rgb(' + outlineRed + ', ' + outlineGreen + ', '+ outlineBlue + ')'\\\" [colorPicker]=\\\"'rgb(' + outlineRed + ', ' + outlineGreen + ', '+ outlineBlue + ')'\\\" [cpAlphaChannel]=\\\"'disabled'\\\"\\r\\n                                [cpOutputFormat]=\\\"'rgba'\\\" [style.background]=\\\"color1\\\"\\r\\n                                (colorPickerChange)=\\\"color1=$event;\\\" (cpSliderDragEnd)=\\\"outlineChange($event)\\\"\\r\\n                                (cpInputChange)=\\\"outlineChange($event)\\\" class=\\\"outlineColor\\\" /> &nbsp;\\r\\n                            <br>\\r\\n                            <label for=\\\"outWidth\\\">Outline Width: </label> &nbsp;\\r\\n                            <mat-slider thumbLabel class=\\\"outWidth\\\" min=\\\"1\\\" max=\\\"20\\\" step=\\\"1\\\" value=\\\"1\\\"\\r\\n                                [(ngModel)]='outlineWidth'>\\r\\n                            </mat-slider>\\r\\n                            &nbsp;\\r\\n                            <mat-slide-toggle [checked]=\\\"true\\\" [(ngModel)]='fillShape'>Fill</mat-slide-toggle> &nbsp;\\r\\n                            <mat-slide-toggle [(ngModel)]='showOutline'>Outline</mat-slide-toggle> &nbsp;\\r\\n                            <mat-slide-toggle [(ngModel)]='erase'>Erase</mat-slide-toggle>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"tab=='Insert'\\\">\\r\\n                            Copy + Paste + Export features will go here!\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"tab=='Canvas'\\\">\\r\\n                            <script type=\\\"text/javascript\\\">console.log(\\\"canvas\\\");</script>\\r\\n                            TODO: Make this auto-open\\r\\n                            <button class=\\\"btn btn-info\\\" (click)=\\\"canvasSettings(canvas)\\\">Settings</button>\\r\\n                        </div>\\r\\n                    </mat-tab>\\r\\n                </mat-tab-group>\\r\\n            </mat-card>\\r\\n        </div>\\r\\n        <hr>\\r\\n    </div>\\r\\n    <div class='col-sm-12' align=\\\"center\\\" style=\\\"margin: auto;\\\">\\r\\n        <div id=\\\"canvas-div\\\" class=\\\"mat-elevation-z24\\\"></div>\\r\\n        <div *ngIf='!canvas.image'>\\r\\n            <mat-card id=\\\"secondary\\\" class=\\\"mat-elevation-z8\\\">\\r\\n                <mat-card-title align=\\\"center\\\" style=\\\"margin: auto;\\\">Authenticating...</mat-card-title>\\r\\n                <mat-spinner align=\\\"center\\\" style=\\\"margin: auto;\\\"></mat-spinner>\\r\\n            </mat-card>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class='col-sm-12' *ngIf='canvas.image && !p'>\\r\\n        <mat-card id=\\\"secondary\\\" class=\\\"mat-elevation-z8\\\">\\r\\n            <mat-card-title align=\\\"center\\\" style=\\\"margin: auto;\\\">Loading canvas data...</mat-card-title>\\r\\n            <mat-spinner align=\\\"center\\\" style=\\\"margin: auto;\\\"></mat-spinner>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n</div>\"","export default \"<div class=\\\"row\\\">\\r\\n    <div class='col-md-8 col-sm-12'>\\r\\n        <h4>Password Request</h4>\\r\\n        <form (ngSubmit)='onSubmit()' #f='ngForm'>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"control-label\\\" for=\\\"email\\\">Email:</label>\\r\\n                <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"credentials.email\\\"\\r\\n                    #email=\\\"ngModel\\\" required minlength=\\\"6\\\" pattern=\\\"^[A-z0-9._%+-]+@[A-z0-9.-]+\\\\.[A-z]{2,}$\\\" value='{{email}}'autofocus>\\r\\n                <div *ngIf='email.invalid && (email.dirty || email.touched)' class='alert alert-danger'>\\r\\n                    <div *ngIf='email.errors?.required'>You'll need the email from the account can't log into</div>\\r\\n                    <div *ngIf='email.errors?.pattern'>That doesn't appear to be an email</div>\\r\\n                    <div *ngIf='email.errors?.minlength'>Your email can't possibly be less than 6 characters</div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <button\\r\\n            *ngIf='!email.invalid'\\r\\n            class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Request New Password</button>\\r\\n            <button class=\\\"btn btn-default\\\" routerLink=\\\"/home\\\">Back to home</button>&nbsp;&nbsp;\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","export default \"<header>\\r\\n    <h1>InkShare <span class=\\\"glyphicon glyphicon-blackboard\\\"></span></h1>\\r\\n</header>\\r\\n\\r\\n<mat-toolbar color=\\\"primary\\\" class=\\\"navbar mat-elevation-z8\\\">\\r\\n    <span>\\r\\n        <button mat-raised-button routerLink=\\\"/home\\\" routerLinkActive=\\\"active\\\">\\r\\n            <mat-icon>home</mat-icon>\\r\\n            Home&nbsp;\\r\\n        </button>&nbsp;\\r\\n        <button mat-raised-button routerLink=\\\"/library\\\" routerLinkActive=\\\"active\\\">\\r\\n            <mat-icon>book</mat-icon>\\r\\n            Library&nbsp;\\r\\n        </button>&nbsp;\\r\\n        <button mat-raised-button routerLink=\\\"/about\\\" routerLinkActive=\\\"active\\\">\\r\\n            <mat-icon>information</mat-icon>\\r\\n            About&nbsp;\\r\\n        </button>&nbsp;\\r\\n    </span>\\r\\n    <span class=\\\"fill-remaining-space\\\"></span>\\r\\n    <span *ngIf=\\\"account\\\">\\r\\n        <button mat-raised-button [matMenuTriggerFor]=\\\"notificationsMenu\\\" [disabled]=\\\"!account.notifications\\\">\\r\\n            <mat-icon>notifications</mat-icon>\\r\\n            Notifications&nbsp;\\r\\n        </button>\\r\\n        <mat-menu #notificationsMenu=\\\"matMenu\\\" xPosition=\\\"before\\\">\\r\\n            <div class=\\\"notification\\\" align=\\\"center\\\" *ngIf=\\\"account.notifications.length == 0\\\">\\r\\n                <h5>No new notifications!</h5>\\r\\n                <p>You're up to date~</p>\\r\\n            </div>\\r\\n            <div class=\\\"notification\\\" *ngFor=\\\"let notification of account.notifications\\\">\\r\\n                <mat-card id=\\\"secondary\\\" class=\\\"mat-elevation-z8\\\" *ngIf='!canvases'>\\r\\n                    <mat-card-title>{{notification.title}}</mat-card-title>\\r\\n                    <mat-card-subtitle>{{notification.date}}</mat-card-subtitle>\\r\\n                    <mat-card-content>{{notification.content}}</mat-card-content>\\r\\n                    <mat-card-actions>\\r\\n                        <button *ngIf= \\\"notification.title != 'Friend Request'\\\" mat-raised-button color=\\\"warn\\\" (click)=\\\"dismissNotif(notification)\\\">\\r\\n                            Dismiss\\r\\n                        </button>\\r\\n                        <button *ngIf= \\\"notification.title != 'Friend Request'\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"notification.link.length == 0\\\" (click)=\\\"navigate(notification)\\\">\\r\\n                            View\\r\\n                        </button>\\r\\n                        <button *ngIf= \\\"notification.title == 'Friend Request'\\\" button mat-raised-button color=\\\"warn\\\" (click)=\\\"dismissNotif(notification)\\\">\\r\\n                            Decline\\r\\n                        </button>\\r\\n                        <button *ngIf= \\\"notification.title == 'Friend Request'\\\" button mat-raised-button color=\\\"primary\\\" (click)=\\\"navigate(notification)\\\">\\r\\n                            Accept\\r\\n                        </button>\\r\\n                    </mat-card-actions>\\r\\n                </mat-card>\\r\\n            </div>\\r\\n            <span class=\\\"notification\\\" align=\\\"center\\\" *ngIf=\\\"account.notifications.length > 0\\\">\\r\\n                That's everything for now~\\r\\n                <button mat-button color=\\\"warn\\\" (click)=\\\"dismissNotif('all')\\\">\\r\\n                    Dismiss All Notifications\\r\\n                </button>\\r\\n            </span>\\r\\n        </mat-menu>\\r\\n    </span>\\r\\n    &nbsp;&nbsp;\\r\\n    <span>\\r\\n        <button mat-raised-button [matMenuTriggerFor]=\\\"accountMenu\\\" xPosition=\\\"after\\\">\\r\\n            <mat-icon>settings</mat-icon>\\r\\n            Account&nbsp;\\r\\n        </button>\\r\\n        <mat-menu #accountMenu=\\\"matMenu\\\">\\r\\n            <button *ngIf=\\\"!account\\\" mat-menu-item routerLink=\\\"/register\\\">Sign Up</button>\\r\\n            <button *ngIf=\\\"!account\\\" mat-menu-item routerLink=\\\"/login\\\">Login</button>\\r\\n            <button *ngIf=\\\"account\\\" mat-menu-item routerLink=\\\"/settings\\\">Settings</button>\\r\\n            <button *ngIf=\\\"account\\\" mat-menu-item (click)=\\\"logout()\\\">Logout</button>\\r\\n        </mat-menu>\\r\\n    </span>\\r\\n</mat-toolbar>\"","export default \"<div class=\\\"row\\\">\\r\\n    <div class='col-sm-12'>\\r\\n        <mat-card id=\\\"info\\\" class=\\\"mat-elevation-z8\\\">\\r\\n            <h2>BTS 630 - Capstone Major Project</h2>\\r\\n        </mat-card>\\r\\n        <br>\\r\\n        <mat-card id=\\\"border\\\" class=\\\"mat-elevation-z8\\\">\\r\\n            <img mat-card-image src=\\\"../../assets/home.jpg\\\" alt=canvas.name>\\r\\n            <p>Welcome to, and thank you for participating in the InkShare project with us!</p>\\r\\n            <p>InkShare aims to provide a stable and effortless tooling to let you and your team draw and make notes together in\\r\\n                real time.\\r\\n            </p>\\r\\n            <p>More importantly, we aim to do this for free. Just get started by creating an account, or logging in\\r\\n                below;</p>\\r\\n            <a class=\\\"btn btn-primary\\\" routerLink='/register'>I'm New!</a>&nbsp;&nbsp;\\r\\n            <a class=\\\"btn btn-success\\\" routerLink='/login'>I'm Returning!</a>\\r\\n            <p>&nbsp;</p>\\r\\n            <p>Then you can get started drawing below!</p>\\r\\n            <a class=\\\"btn btn-warning\\\" routerLink='/library'>Let's start drawing!</a>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n</div>\"","export default \"<div class=\\\"row\\\">\\r\\n    <div class='col-md-8 col-sm-12'>\\r\\n        <h4>User Settings</h4>\\r\\n        &nbsp;\\r\\n        <form (ngSubmit)='onSubmit()' #f='ngForm'>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"control-label\\\" for=\\\"email\\\">Email:</label>\\r\\n                <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"invite.email\\\"\\r\\n                    #email=\\\"ngModel\\\" required minlength=\\\"6\\\" pattern=\\\"^[A-z0-9._%+-]+@[A-z0-9.-]+\\\\.[A-z]{2,}$\\\" value='{{email}}'>\\r\\n                <div *ngIf='email.invalid && (email.dirty || email.touched)' class='alert alert-danger'>\\r\\n                    <div *ngIf='email.errors?.required'>You'll need an email to invite</div>\\r\\n                    <div *ngIf='email.errors?.pattern'>That doesn't appear to be an email</div>\\r\\n                    <div *ngIf='email.errors?.minlength'>The email can't possibly be less than 6 characters</div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"control-label\\\" for=\\\"id\\\">Canvas ID:</label>\\r\\n                <select class=\\\"form-control\\\" id=\\\"id\\\" name=\\\"id\\\" [(ngModel)]=\\\"invite.id\\\" #id=\\\"ngModel\\\">\\r\\n                    <option *ngFor=\\\"let canvas of canvases\\\" value = '{{canvas._id}}'>{{canvas._id}}</option>\\r\\n                </select>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\"","export default \"<h2 mat-dialog-title>Add a new Friend</h2>\\r\\n<br>\\r\\n<mat-form-field style=\\\"display: inline;\\\">\\r\\n    <mat-hint align=\\\"start\\\"><strong>Enter your friend's email to add them</strong></mat-hint>\\r\\n    <input\\r\\n        matInput\\r\\n        [formControl]=\\\"data.myControl\\\"\\r\\n        id=\\\"email\\\"\\r\\n        type=\\\"email\\\"\\r\\n        name=\\\"email\\\"\\r\\n        required\\r\\n        minlength=\\\"6\\\"\\r\\n        value=\\\"data.myControl.value\\\"\\r\\n        pattern=\\\"^[A-z0-9._%+-]+@[A-z0-9.-]+\\\\.[A-z]{2,}$\\\"\\r\\n        placeholder=\\\"Friend's Email\\\"\\r\\n        [matAutocomplete]=\\\"auto\\\">\\r\\n    <mat-autocomplete autoActiveFirstOption #auto=\\\"matAutocomplete\\\">\\r\\n        <ng-container *ngFor=\\\"let email of data.filteredOptions | async\\\">\\r\\n            <mat-option *ngIf=\\\"email != data.account.email\\\" [value]=\\\"email\\\">\\r\\n                {{email}}\\r\\n            </mat-option>\\r\\n        </ng-container>\\r\\n    </mat-autocomplete>\\r\\n    <mat-error *ngIf='data.myControl.errors?.required'>No email means no friends to add</mat-error>\\r\\n    <mat-error *ngIf='data.myControl.errors?.pattern'>That doesn't look like an email...</mat-error>\\r\\n    <mat-error *ngIf='data.myControl.errors?.minlength'>Your friend's email needs to be at least 6 characters to be valid</mat-error>\\r\\n</mat-form-field>\\r\\n<div mat-dialog-actions>\\r\\n    <button mat-raised-button color=\\\"primary\\\" [mat-dialog-close]=\\\"data\\\" [disabled]=\\\"data.myControl.errors\\\">Add</button>\\r\\n    <button mat-stroked-button (click)=\\\"onNoClick()\\\">Cancel</button>\\r\\n</div>\"","export default \"<h2 mat-dialog-title>Add a New Participant</h2>\\r\\n<br>\\r\\n<mat-form-field style=\\\"display: inline;\\\">\\r\\n    <mat-hint align=\\\"start\\\"><strong>Enter a user's email to add them to the canvas</strong></mat-hint>\\r\\n    <input\\r\\n        matInput\\r\\n        [formControl]=\\\"data.myControl\\\"\\r\\n        id=\\\"email\\\"\\r\\n        type=\\\"email\\\"\\r\\n        name=\\\"email\\\"\\r\\n        required\\r\\n        minlength=\\\"6\\\"\\r\\n        value=\\\"data.myControl.value\\\"\\r\\n        pattern=\\\"^[A-z0-9._%+-]+@[A-z0-9.-]+\\\\.[A-z]{2,}$\\\"\\r\\n        placeholder=\\\"Participant's Email\\\"\\r\\n        [matAutocomplete]=\\\"auto\\\">\\r\\n    <mat-autocomplete autoActiveFirstOption #auto=\\\"matAutocomplete\\\">\\r\\n        <ng-container *ngFor=\\\"let email of data.filteredOptions | async\\\">\\r\\n            <mat-option *ngIf=\\\"email != data.account.email\\\" [value]=\\\"email\\\">\\r\\n                {{email}}\\r\\n            </mat-option>\\r\\n        </ng-container>\\r\\n    </mat-autocomplete>\\r\\n    <mat-error *ngIf='data.myControl.errors?.required'>No email means nobody to add...</mat-error>\\r\\n    <mat-error *ngIf='data.myControl.errors?.pattern'>That doesn't look like an email...</mat-error>\\r\\n    <mat-error *ngIf='data.myControl.errors?.minlength'>The user's email needs to be at least 6 characters to be valid</mat-error>\\r\\n</mat-form-field>\\r\\n<mat-form-field>\\r\\n    <mat-label>User Permissions</mat-label>\\r\\n    <mat-select>\\r\\n        <mat-option reqired *ngFor=\\\"let permission of data.permissions\\\" [value]=\\\"permission.value\\\">\\r\\n            {{permission.value}}\\r\\n        </mat-option>\\r\\n    </mat-select>\\r\\n</mat-form-field>\\r\\n<div mat-dialog-actions>\\r\\n    <button mat-raised-button color=\\\"primary\\\" [mat-dialog-close]=\\\"data\\\" [disabled]=\\\"data.myControl.errors\\\">Add</button>\\r\\n    <button mat-stroked-button (click)=\\\"onNoClick()\\\">Cancel</button>\\r\\n</div>\"","export default \"<h2 mat-dialog-title>Canvas Setup</h2>\\r\\n<br>\\r\\n<mat-form-field>\\r\\n    <mat-hint align=\\\"start\\\"><strong>Name your new canvas</strong></mat-hint>\\r\\n    <input matInput id=\\\"canvasName\\\" name=\\\"canvasName\\\" [(ngModel)]=\\\"data.canvasName\\\" #canvasName=\\\"ngModel\\\" required\\r\\n        minlength=\\\"1\\\" maxlength=\\\"50\\\" value=\\\"data.canvasName\\\" placeholder=\\\"Canvas Name\\\">\\r\\n    <mat-error *ngIf='canvasName.errors?.required'>Please enter a name for your new canvas</mat-error>\\r\\n    <mat-error *ngIf='canvasName.errors?.minlength'>Your canvas name can't be less than 1 character</mat-error>\\r\\n    <mat-error *ngIf='canvasName.errors?.maxlength'>Your canvas name can't be more than 50 characters</mat-error>\\r\\n</mat-form-field>\\r\\n<mat-form-field>\\r\\n    <mat-label>Canvas Type</mat-label>\\r\\n    <mat-select [(value)]=\\\"data.type\\\">\\r\\n        <mat-option reqired *ngFor=\\\"let type of data.types\\\" [value]=\\\"type.value\\\">\\r\\n            {{type.value}}\\r\\n        </mat-option>\\r\\n    </mat-select>\\r\\n</mat-form-field>\\r\\n<div mat-dialog-actions>\\r\\n    <button mat-raised-button color=\\\"primary\\\" [mat-dialog-close]=\\\"data\\\" cdkFocusInitial>Create</button>\\r\\n    <button mat-stroked-button (click)=\\\"onNoClick()\\\">Cancel</button>\\r\\n</div>\"","export default \"<h2 mat-dialog-title>Delete Canvas?</h2>\\r\\n<br>\\r\\n<strong>This action cannot be undone!</strong>\\r\\n<div mat-dialog-actions>\\r\\n    <button mat-raised-button color=\\\"warn\\\" [mat-dialog-close]=\\\"true\\\" cdkFocusInitial>Delete</button>\\r\\n    <button mat-stroked-button (click)=\\\"onNoClick()\\\">Cancel</button>\\r\\n</div>\"","export default \"<div *ngIf='account' class=\\\"row\\\">\\r\\n    <div class='col-sm-12' *ngIf='router.url == \\\"/accept/\\\"+library'>\\r\\n        <mat-card id=\\\"secondary\\\" class=\\\"mat-elevation-z8\\\" align=\\\"center\\\" style=\\\"margin: auto;\\\">\\r\\n            <mat-card-title align=\\\"center\\\" style=\\\"margin: auto;\\\">Authenticating...</mat-card-title>\\r\\n            <mat-spinner align=\\\"center\\\" style=\\\"margin: auto;\\\"></mat-spinner>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n    <div class='col-sm-9' *ngIf='router.url != \\\"/accept/\\\"+library'>\\r\\n        <mat-card id=\\\"info\\\" class=\\\"mat-elevation-z8\\\">\\r\\n            <h4 *ngIf='account.email'>Logged in as {{account.userName}}.</h4>\\r\\n            <h4 *ngIf='account.email && router.url == \\\"/library/sort/\\\"+library'>Filtering canvases by \\\"{{library}}\\\".</h4>\\r\\n            <h4 *ngIf='account.email && router.url != \\\"/library/sort/\\\"+library'>Welcome back, what are we drawing today?</h4>\\r\\n        </mat-card>\\r\\n        <br>\\r\\n        <mat-card id=\\\"border\\\" class=\\\"mat-elevation-z8\\\" *ngIf=\\\"this.router.url != '/library/sort/'+library\\\">\\r\\n            <h3>Your Canvases</h3>\\r\\n            <br>\\r\\n            <div fxLayout=\\\"row wrap\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutGap=\\\"32px\\\" fxLayoutAlign=\\\"flex-start\\\">\\r\\n                <mat-card id=\\\"secondary\\\" class=\\\"mat-elevation-z8\\\" *ngIf=\\\"!canvases\\\">\\r\\n                    <mat-card-title align=\\\"center\\\" style=\\\"margin: auto;\\\">Loading canvases...</mat-card-title>\\r\\n                    <mat-spinner align=\\\"center\\\" style=\\\"margin: auto;\\\"></mat-spinner>\\r\\n                </mat-card>\\r\\n                <ng-container *ngFor=\\\"let canvas of canvases\\\">\\r\\n                    <mat-card id=\\\"secondary\\\" class=\\\"mat-elevation-z8\\\" *ngIf='account._id == canvas.owner'\\r\\n                        (mouseenter)=\\\"setSelected(canvas)\\\" (mouseleave)=\\\"setSelected(undefined)\\\">\\r\\n                        <mat-card-header>\\r\\n                            <div mat-card-avatar\\r\\n                                style=\\\"background-image: url('../../assets/no-avatar.png'); background-size: cover;\\\">\\r\\n                            </div>\\r\\n                            <mat-card-title>{{canvas.name}}</mat-card-title>\\r\\n                            <mat-card-subtitle>{{library}}</mat-card-subtitle>\\r\\n                        </mat-card-header>\\r\\n                        <img mat-card-image src=\\\"../../assets/no-canvas.jpg\\\" alt=canvas.name>\\r\\n                        <mat-card-content *ngIf='selected!=canvas' style=\\\"font-size: 92%;\\\">Last modified:<br>\\r\\n                            {{canvas.modified}}</mat-card-content>\\r\\n                        <mat-card-actions *ngIf='selected==canvas'>\\r\\n                            <button mat-raised-button color=\\\"primary\\\" title=\\\"Enter Canvas\\\"\\r\\n                                (click)=\\\"editCanvas(selected)\\\"><span class=\\\"glyphicon glyphicon-pencil\\\"></span></button>\\r\\n                            <button mat-raised-button title=\\\"Share Canvas\\\" (click)=\\\"shareCanvas(selected)\\\"><span\\r\\n                                    class=\\\"glyphicon glyphicon-duplicate\\\"></span></button>\\r\\n                            <button mat-raised-button color=\\\"accent\\\" title=\\\"Canvas Settings\\\"\\r\\n                                (click)=\\\"canvasSettings(selected)\\\"><span\\r\\n                                    class=\\\"glyphicon glyphicon-duplicate\\\"></span></button>\\r\\n                            <button mat-raised-button color=\\\"warn\\\" *ngIf='canvas.owner == account._id'\\r\\n                                title=\\\"Delete Canvas\\\" (click)=\\\"deleteCanvas(selected)\\\"><span\\r\\n                                    class=\\\"glyphicon glyphicon-erase\\\"></span></button>\\r\\n                        </mat-card-actions>\\r\\n                    </mat-card>\\r\\n                </ng-container>\\r\\n                <mat-card id=\\\"secondary\\\" class=\\\"mat-elevation-z8\\\" *ngIf='account.email == library && canvases != undefined'\\r\\n                    style=\\\"height: 230px; width: 190px;\\\">\\r\\n                    <mat-card-header>\\r\\n                        <mat-card-title>New Canvas?</mat-card-title>\\r\\n                    </mat-card-header>\\r\\n                    <mat-card-content>\\r\\n                        <a (click)=\\\"newCanvas()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                            <mat-icon style=\\\"font-size: 1160%;\\\" aria-hidden=\\\"false\\\" aria-label=\\\"Create a new canvas\\\">\\r\\n                                add_photo_alternate</mat-icon>\\r\\n                        </a>\\r\\n                    </mat-card-content>\\r\\n                </mat-card>\\r\\n                <hr>\\r\\n            </div>\\r\\n        </mat-card>\\r\\n        <br>\\r\\n        <mat-card id=\\\"border\\\" class=\\\"mat-elevation-z8\\\">\\r\\n            <h3>Canvases shared with you</h3>\\r\\n            <br>\\r\\n            <div *ngIf='canvases && canvases.length < 1'>\\r\\n                No shared canvases!\\r\\n            </div>\\r\\n            <div fxLayout=\\\"row wrap\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutGap=\\\"32px\\\" fxLayoutAlign=\\\"flex-start\\\">\\r\\n                <mat-card id=\\\"secondary\\\" class=\\\"mat-elevation-z8\\\" *ngIf='!canvases'>\\r\\n                    <mat-card-title>Loading...</mat-card-title>\\r\\n                    &nbsp;<mat-spinner align=\\\"center\\\"></mat-spinner>\\r\\n                </mat-card>\\r\\n                <ng-container *ngFor=\\\"let canvas of canvases\\\">\\r\\n                    <mat-card id=\\\"secondary\\\" class=\\\"mat-elevation-z8\\\"\\r\\n                        *ngIf='account._id != canvas.owner && canvas.owner != \\\"\\\"' (mouseenter)=\\\"setSelected(canvas)\\\"\\r\\n                        (mouseleave)=\\\"setSelected(undefined)\\\">\\r\\n                        <mat-card-header>\\r\\n                            <div mat-card-avatar\\r\\n                                style=\\\"background-image: url('../../assets/no-avatar.png'); background-size: cover;\\\">\\r\\n                            </div>\\r\\n                            <mat-card-title>{{canvas.name}}</mat-card-title>\\r\\n                            <mat-card-subtitle>{{library}}</mat-card-subtitle>\\r\\n                        </mat-card-header>\\r\\n                        <img mat-card-image src=\\\"../../assets/no-canvas.jpg\\\" alt=canvas.name>\\r\\n                        <mat-card-content *ngIf='selected!=canvas' style=\\\"font-size: 92%;\\\">Last modified:<br>\\r\\n                            {{canvas.modified}}</mat-card-content>\\r\\n                        <mat-card-actions *ngIf='selected==canvas' align='center'>\\r\\n                            <button mat-raised-button color=\\\"primary\\\" title=\\\"Enter Canvas\\\" (click)=\\\"editCanvas(selected)\\\"><span\\r\\n                                    class=\\\"glyphicon glyphicon-pencil\\\"></span></button>\\r\\n                            <button mat-raised-button title=\\\"Share Canvas\\\" (click)=\\\"shareCanvas(selected)\\\"><span\\r\\n                                    class=\\\"glyphicon glyphicon-duplicate\\\"></span></button>\\r\\n                        </mat-card-actions>\\r\\n                    </mat-card>\\r\\n                </ng-container>\\r\\n                <hr>\\r\\n            </div>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n    <div class='col-sm-3' *ngIf='router.url == \\\"/library/view/\\\"+account.email'>\\r\\n        <mat-card id=\\\"info\\\" class=\\\"mat-elevation-z8\\\">\\r\\n            <h3>Friends</h3>\\r\\n        </mat-card>\\r\\n        <br>\\r\\n        <mat-card class=\\\"mat-elevation-z8\\\">\\r\\n            <div *ngIf='!friends'>\\r\\n                <mat-card-title>Loading friends...</mat-card-title>\\r\\n                &nbsp;<mat-spinner align=\\\"center\\\"></mat-spinner>\\r\\n            </div>\\r\\n            <ng-container *ngFor=\\\"let friend of friends\\\">\\r\\n                <mat-card id=\\\"secondary\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"viewLibrary(friend)\\\">\\r\\n                    <mat-card-title>{{friend.userName}}</mat-card-title>\\r\\n                    <mat-card-subtitle>{{friend.email}}</mat-card-subtitle>\\r\\n                </mat-card>\\r\\n                <br>\\r\\n            </ng-container>\\r\\n            <div *ngIf='friends && friends.length < 1'>\\r\\n                <mat-card id=\\\"secondary\\\">\\r\\n                    Sorry, you don't appear to have any friends...\\r\\n                </mat-card>\\r\\n            </div>\\r\\n            <br>\\r\\n            <div *ngIf='friends'>\\r\\n                <mat-card id=\\\"accent\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"addFriend('')\\\">\\r\\n                    Add a new friend\\r\\n                </mat-card>\\r\\n            </div>\\r\\n        </mat-card>\\r\\n        <br>\\r\\n        <button mat-raised-button color=\\\"primary\\\" title=\\\"TEST\\\" (click)=\\\"test()\\\">TEST</button>\\r\\n    </div>\\r\\n</div>\\r\\n<div *ngIf='!account'>\\r\\n    <mat-spinner></mat-spinner>\\r\\n</div>\"","export default \"<div class=\\\"row\\\">\\r\\n    <div *ngIf='!account' class='col-sm-12'>\\r\\n        <mat-card id=\\\"info\\\" class=\\\"mat-elevation-z8\\\">\\r\\n            <h4>Login - enter information, and click the login button</h4>\\r\\n        </mat-card>\\r\\n        <br>\\r\\n        <mat-card id=\\\"border\\\" class=\\\"mat-elevation-z8\\\">\\r\\n            <form (ngSubmit)='onSubmit()' #f='ngForm'>\\r\\n\\r\\n                <mat-form-field style=\\\"display: inline;\\\">\\r\\n                    <mat-hint align=\\\"start\\\"><strong>Enter your account's email</strong></mat-hint>\\r\\n                    <input\\r\\n                        matInput\\r\\n                        id=\\\"email\\\"\\r\\n                        type=\\\"email\\\"\\r\\n                        name=\\\"email\\\"\\r\\n                        [(ngModel)]=\\\"credentials.email\\\"\\r\\n                        #email=\\\"ngModel\\\"\\r\\n                        required\\r\\n                        minlength=\\\"6\\\"\\r\\n                        pattern=\\\"^[A-z0-9._%+-]+@[A-z0-9.-]+\\\\.[A-z]{2,}$\\\"\\r\\n                        placeholder=\\\"Email\\\">\\r\\n                    <mat-error *ngIf='email.errors?.required'>You'll need an email to log in with</mat-error>\\r\\n                    <mat-error *ngIf='email.errors?.pattern'>That doesn't appear to be an email</mat-error>\\r\\n                    <mat-error *ngIf='email.errors?.minlength'>Your email can't be less than 6 characters</mat-error>\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field style=\\\"display: inline;\\\">\\r\\n                    <mat-hint align=\\\"start\\\"><strong>Enter your account's password</strong></mat-hint>\\r\\n                    <input matInput\\r\\n                        id=\\\"password\\\"\\r\\n                        type=\\\"password\\\"\\r\\n                        name=\\\"password\\\"\\r\\n                        [(ngModel)]=\\\"credentials.password\\\"\\r\\n                        #password=\\\"ngModel\\\"\\r\\n                        required\\r\\n                        minlength=\\\"6\\\"\\r\\n                        maxlength=\\\"50\\\"\\r\\n                        placeholder=\\\"Password\\\">\\r\\n                    <mat-error *ngIf='password.errors?.required'>Password is required</mat-error>\\r\\n                    <mat-error *ngIf='password.errors?.minlength'>Password cannot be less than 6 characters</mat-error>\\r\\n                    <mat-error *ngIf='password.errors?.maxlength'>Password cannot be more than 50 characters</mat-error>\\r\\n                </mat-form-field>\\r\\n                <br>\\r\\n                <button\\r\\n                    mat-raised-button\\r\\n                    color=\\\"primary\\\"\\r\\n                    type=\\\"submit\\\"\\r\\n                    [disabled]=\\\"!f.valid && !authed\\\">\\r\\n                        Login\\r\\n                </button>\\r\\n                &nbsp;&nbsp;\\r\\n                <button class=\\\"btn btn-default\\\"  routerLink=\\\"/home\\\">Back to home</button>\\r\\n                &nbsp;&nbsp;\\r\\n                <span *ngIf='loginError?.length>0' class=\\\"text-danger\\\">{{ loginError }}\\r\\n                    &nbsp;&nbsp;<a (click)='reset()'>Reset password?</a></span>\\r\\n            </form>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n    <div *ngIf='account' class='col-sm-4'>\\r\\n        <mat-card id=\\\"border\\\"class=\\\"mat-elevation-z8\\\">\\r\\n            <h4>Would you like to log out first?</h4>\\r\\n            <button mat-raised-button color=\\\"warn\\\" (click)='logout()'>Logout</button>\\r\\n            &nbsp;&nbsp;\\r\\n            <button mat-stroked-button  routerLink=\\\"/home\\\">Back</button>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n    <div *ngIf='account' class='col-sm-8'>\\r\\n        <mat-card id=\\\"info\\\" class=\\\"mat-elevation-z8\\\">\\r\\n            <h3>You are currently logged in as \\\"{{ account.email }}\\\"</h3>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n</div>\"","export default \"<div class=\\\"row\\\">\\r\\n    <div class='col-md-8 col-sm-12'>\\r\\n        <h4>Change Password</h4>\\r\\n        <form (ngSubmit)='onSubmit()' #f='ngForm'>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"control-label\\\" for=\\\"email\\\">Email:</label>\\r\\n                <div *ngIf='email.invalid && (email.dirty || email.touched)' class='alert alert-danger'>\\r\\n                    <div *ngIf='email.errors?.required'>You'll need an email to reset your password</div>\\r\\n                    <div *ngIf='email.errors?.pattern'>That doesn't appear to be an email</div>\\r\\n                    <div *ngIf='email.errors?.minlength'>Your email can't be less than 6 characters</div>\\r\\n                </div>\\r\\n                <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"credentials.email\\\"\\r\\n                    #email=\\\"ngModel\\\" required minlength=\\\"6\\\" pattern=\\\"^[A-z0-9._%+-]+@[A-z0-9.-]+\\\\.[A-z]{2,}$\\\" value='{{email}}'autofocus>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"control-label\\\" for=\\\"password\\\">Password:</label>\\r\\n                <div *ngIf='password.invalid && (password.dirty || password.touched)' class='alert alert-danger'>\\r\\n                    <div *ngIf='password.errors?.required'>Password is required</div>\\r\\n                    <div *ngIf='password.errors?.minlength'>Password cannot be less than 6 characters</div>\\r\\n                    <div *ngIf='password.errors?.maxlength'>Password cannot be more than 50 characters</div>\\r\\n                </div>\\r\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" name=\\\"password\\\"\\r\\n                    [(ngModel)]=\\\"credentials.password\\\" #password=\\\"ngModel\\\" required minlength=\\\"6\\\" maxlength=\\\"50\\\">\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"control-label\\\" for=\\\"newPassword\\\">New Password:</label>\\r\\n                <div *ngIf='newPassword.invalid && (newPassword.dirty || newPassword.touched)' class='alert alert-danger'>\\r\\n                    <div *ngIf='newPassword.errors?.required'>You must enter a new password</div>\\r\\n                    <div *ngIf='newPassword==password'>You cannot use your previous password</div>\\r\\n                    <div *ngIf='newPassword.errors?.minlength'>Password cannot be less than 6 characters</div>\\r\\n                    <div *ngIf='newPassword.errors?.maxlength'>Password cannot be more than 50 characters</div>\\r\\n                </div>\\r\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"newPassword\\\" name=\\\"newPassword\\\"\\r\\n                    [(ngModel)]=\\\"credentials.newPassword\\\" #newPassword=\\\"ngModel\\\" required minlength=\\\"6\\\" maxlength=\\\"50\\\">\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"control-label\\\" for=\\\"newPasswordConfirm\\\">Confirm New Password:</label>\\r\\n                <div *ngIf='newPasswordConfirm.invalid && (newPasswordConfirm.dirty || newPasswordConfirm.touched)'\\r\\n                    class='alert alert-danger'>\\r\\n                    <div *ngIf='newPasswordConfirm.errors?.required'>Please retype your password to confirm it</div>\\r\\n                    <div *ngIf='newPassword!=newPasswordConfirm'>Passwords must match</div>\\r\\n                </div>\\r\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"newPasswordConfirm\\\" name=\\\"newPasswordConfirm\\\"\\r\\n                    [(ngModel)]=\\\"credentials.newPasswordConfirm\\\" #newPasswordConfirm=\\\"ngModel\\\" required minlength=\\\"6\\\" maxlength=\\\"50\\\">\\r\\n            </div>\\r\\n\\r\\n            <button *ngIf='!(email.invalid || password.invalid || newPassword.invalid || newPasswordConfirm.invalid)'\\r\\n                class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Change Password</button>\\r\\n            <button *ngIf='(email.invalid || password.invalid || newPassword.invalid || newPasswordConfirm.invalid)'\\r\\n                class=\\\"btn btn-primary\\\" type=\\\"submit\\\" disabled>Change Password</button>\\r\\n            &nbsp;&nbsp;\\r\\n            <a class=\\\"btn btn-default\\\" routerLink='home'>Back to home</a>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<h2 mat-dialog-title>Verify Password</h2>\\r\\n<br>\\r\\n<mat-form-field>\\r\\n    <mat-hint align=\\\"start\\\"><strong>Confirm your password</strong></mat-hint>\\r\\n    <input matInput type=\\\"password\\\" id=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"data.input\\\" #password=\\\"ngModel\\\" required\\r\\n        minlength=\\\"6\\\" maxlength=\\\"50\\\" value=\\\"data.input\\\" placeholder=\\\"Password\\\">\\r\\n    <mat-error *ngIf='password.errors?.required'>Please enter your password to confirm your settings</mat-error>\\r\\n    <mat-error *ngIf='password.errors?.minlength'>Your password can't be less than 6 characters</mat-error>\\r\\n    <mat-error *ngIf='password.errors?.maxlength'>Your password can't be more than 50 characters</mat-error>\\r\\n</mat-form-field>\\r\\n<div mat-dialog-actions>\\r\\n    <button mat-stroked-button (click)=\\\"onNoClick()\\\">Cancel</button>\\r\\n    <button mat-raised-button color=\\\"accent\\\" [mat-dialog-close]=\\\"data.input\\\" cdkFocusInitial>Confirm</button>\\r\\n</div>\"","export default \"<h2 mat-dialog-title>Verify Password</h2>\\r\\n<br>\\r\\n<mat-form-field>\\r\\n    <mat-hint align=\\\"start\\\"><strong>Confirm your password</strong></mat-hint>\\r\\n    <input matInput type=\\\"password\\\" id=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"data.input\\\" #password=\\\"ngModel\\\" required\\r\\n        minlength=\\\"6\\\" maxlength=\\\"50\\\" value=\\\"data.input\\\" placeholder=\\\"Password\\\">\\r\\n    <mat-error *ngIf='password.errors?.required'>Please enter your password to confirm your settings</mat-error>\\r\\n    <mat-error *ngIf='password.errors?.minlength'>Your password can't be less than 6 characters</mat-error>\\r\\n    <mat-error *ngIf='password.errors?.maxlength'>Your password can't be more than 50 characters</mat-error>\\r\\n</mat-form-field>\\r\\n<div mat-dialog-actions>\\r\\n    <button mat-stroked-button (click)=\\\"onNoClick()\\\">Cancel</button>\\r\\n    <button mat-raised-button color=\\\"accent\\\" [mat-dialog-close]=\\\"data.input\\\" cdkFocusInitial>Confirm</button>\\r\\n</div>\"","export default \"<div *ngIf='account' class=\\\"row\\\">\\r\\n    <div class='col-sm-9'>\\r\\n        <mat-card id=\\\"info\\\" class=\\\"mat-elevation-z8\\\">\\r\\n            <h4>User Settings</h4>\\r\\n        </mat-card>\\r\\n        <br>\\r\\n        <mat-card id=\\\"secondary\\\" class=\\\"mat-elevation-z8\\\">\\r\\n        <mat-accordion>\\r\\n            <mat-expansion-panel>\\r\\n                <mat-expansion-panel-header>\\r\\n                    <mat-panel-title>\\r\\n                        Account\\r\\n                    </mat-panel-title>\\r\\n                    <mat-panel-description>\\r\\n                        Change how your account looks and feels\\r\\n                    </mat-panel-description>\\r\\n                </mat-expansion-panel-header>\\r\\n                <hr>\\r\\n                <mat-form-field>\\r\\n                    <mat-hint align=\\\"start\\\"><strong>How others will see you</strong></mat-hint>\\r\\n                    <mat-hint align=\\\"end\\\">{{newAccount.userName.length}} / 25</mat-hint>\\r\\n                    <input matInput size=\\\"25\\\" id=\\\"userName\\\" name=\\\"userName\\\" [(ngModel)]=\\\"newAccount.userName\\\" #userName=\\\"ngModel\\\"\\r\\n                        maxlength=\\\"25\\\" value=\\\"{{account.userName}}\\\" placeholder=\\\"User Name\\\" required>\\r\\n                        <button mat-button *ngIf=\\\"newAccount.userName\\\" matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"newAccount.userName=''\\\">\\r\\n                            <mat-icon>close</mat-icon>\\r\\n                        </button>\\r\\n                    <mat-error *ngIf='userName.errors?.maxlength'>Woah there! Try to keep your name under 25 characters</mat-error>\\r\\n                    <mat-error *ngIf='userName.errors?.required'>You'll need a name that others can view</mat-error>\\r\\n                </mat-form-field>\\r\\n                <br>\\r\\n                <br>\\r\\n                <br>\\r\\n                <small>Profile pictures coming soon!</small>\\r\\n                <!--<mat-form-field>\\r\\n                    Profile Picture Input Placeholder\\r\\n                </mat-form-field>-->\\r\\n                <br>\\r\\n                <br>\\r\\n                <br>\\r\\n                <label id=\\\"theme-radio\\\">Choose your theme</label>\\r\\n                <br>\\r\\n                <mat-radio-group aria-labelledby=\\\"radio-group\\\" class=\\\"theme-radio\\\" [(ngModel)]=\\\"newAccount.theme\\\">\\r\\n                    <mat-radio-button (click)=changeTheme(selectedTheme) class=\\\"radio-button\\\" *ngFor=\\\"let selectedTheme of themes\\\" [value]=\\\"selectedTheme\\\">\\r\\n                        {{selectedTheme}}\\r\\n                    </mat-radio-button>\\r\\n                </mat-radio-group>\\r\\n            </mat-expansion-panel>\\r\\n\\r\\n            <mat-expansion-panel>\\r\\n                <mat-expansion-panel-header>\\r\\n                    <mat-panel-title>\\r\\n                        Security\\r\\n                    </mat-panel-title>\\r\\n                    <mat-panel-description>\\r\\n                        Change how you keep your account safe\\r\\n                    </mat-panel-description>\\r\\n                </mat-expansion-panel-header>\\r\\n                <hr>\\r\\n                <mat-form-field>\\r\\n                    <mat-hint align=\\\"start\\\"><strong>How you will log in</strong></mat-hint>\\r\\n                    <input matInput type=\\\"email\\\" id=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"newAccount.email\\\"\\r\\n                        #email=\\\"ngModel\\\" required minlength=\\\"6\\\" pattern=\\\"^[A-z0-9._%+-]+@[A-z0-9.-]+\\\\.[A-z]{2,}$\\\"\\r\\n                        value='{{account.email}}' placeholder=\\\"Email\\\">\\r\\n                        <button mat-button *ngIf=\\\"newAccount.email\\\" matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"newAccount.email=''\\\">\\r\\n                            <mat-icon>close</mat-icon>\\r\\n                        </button>\\r\\n                    <mat-error *ngIf='email.errors?.required'>You'll need a valid email to recover your account and log in</mat-error>\\r\\n                    <mat-error *ngIf='email.errors?.pattern'>That doesn't appear to be a valid email</mat-error>\\r\\n                    <mat-error *ngIf='email.errors?.minlength'>Your email can't be less than 6 characters</mat-error>\\r\\n                </mat-form-field>\\r\\n                <br>\\r\\n                <br>\\r\\n                <br>\\r\\n                <button class=\\\"btn btn-default\\\" (click)=\\\"router.navigate(['user/reset']);\\\">Change your password</button>\\r\\n                &nbsp;&nbsp;\\r\\n                <button mat-flat-button color=\\\"warn\\\" (click)=\\\"delete()\\\">Delete Account</button>\\r\\n            </mat-expansion-panel>\\r\\n\\r\\n            <mat-expansion-panel>\\r\\n                <mat-expansion-panel-header>\\r\\n                    <mat-panel-title>\\r\\n                        Friends\\r\\n                    </mat-panel-title>\\r\\n                    <mat-panel-description>\\r\\n                        Manage who you're friends with\\r\\n                    </mat-panel-description>\\r\\n                </mat-expansion-panel-header>\\r\\n                <hr>\\r\\n                <mat-form-field>\\r\\n                    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n                </mat-form-field>\\r\\n                \\r\\n                <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n                    <ng-container matColumnDef=\\\"userName\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef>&nbsp;&nbsp;Name&nbsp;&nbsp;</th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\">&nbsp;&nbsp;{{element.userName}}&nbsp;&nbsp;</td>\\r\\n                    </ng-container>\\r\\n                    <ng-container matColumnDef=\\\"email\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef>&nbsp;&nbsp;Email&nbsp;&nbsp;</th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\">&nbsp;&nbsp;{{element.email}}&nbsp;&nbsp;</td>\\r\\n                    </ng-container>\\r\\n                    <ng-container matColumnDef=\\\"numCanvases\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef>&nbsp;&nbsp;&nbsp;&nbsp;</th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\">&nbsp;&nbsp;{{element.numCanvases}}&nbsp;&nbsp;</td>\\r\\n                    </ng-container>\\r\\n                    <ng-container matColumnDef=\\\"options\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef>&nbsp;&nbsp;Options&nbsp;&nbsp;</th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                            <button *ngIf=\\\"!element.marked\\\" mat-button color=\\\"warn\\\" (click)=\\\"removeFriend(element)\\\">Remove Friend</button>\\r\\n                            <button *ngIf=\\\"element.marked\\\" mat-button color=\\\"warn\\\" disabled>Marked for removal</button>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n                \\r\\n                    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n                </table>\\r\\n            </mat-expansion-panel>\\r\\n        </mat-accordion>\\r\\n        <br>\\r\\n        <mat-card id=\\\"border\\\" class=\\\"mat-elevation-z8\\\">\\r\\n        <form (ngSubmit)='onSubmit()' #f='ngForm'>\\r\\n            <button mat-raised-button color=\\\"accent\\\" type=\\\"submit\\\" [disabled]=\\\"userName.invalid || email.invalid || !account\\\">Apply Settings</button>\\r\\n            &nbsp;&nbsp;\\r\\n            <button mat-stroked-button class=\\\"btn btn-default\\\" type=\\\"button\\\" routerLink=\\\"/home\\\">Back to home</button>\\r\\n            &nbsp;&nbsp;\\r\\n            <strong *ngIf='loginError?.length>0' class=\\\"text-danger\\\">{{ loginError }}\\r\\n                &nbsp;&nbsp;<a>Reset password?</a></strong>\\r\\n        </form>\\r\\n        </mat-card>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n    <div class='col-sm-3'>\\r\\n        <mat-card id=\\\"info\\\" class=\\\"mat-elevation-z8\\\">\\r\\n            <h3>Your Current (Saved) Details</h3>\\r\\n        </mat-card>\\r\\n        <br>\\r\\n        <mat-card id=\\\"border\\\" class=\\\"mat-elevation-z8\\\">\\r\\n        <h4><strong>Email:</strong> {{account.email}}</h4>\\r\\n        <hr>\\r\\n        <h4><strong>UserName:</strong> {{account.userName}}</h4>\\r\\n        <hr>\\r\\n        <h4><strong>Theme:</strong> {{account.theme}}</h4>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n</div>\\r\\n<div *ngIf='!account'>\\r\\n    <mat-spinner></mat-spinner>\\r\\n</div>\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export default \"dd {\\r\\n    overflow-wrap:break-word;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWJvdXQvYWJvdXQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHdCQUF3QjtBQUM1QiIsImZpbGUiOiJzcmMvYXBwL2Fib3V0L2Fib3V0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJkZCB7XHJcbiAgICBvdmVyZmxvdy13cmFwOmJyZWFrLXdvcmQ7XHJcbn0iXX0= */\"","import { Component } from '@angular/core';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { ReqresAccount, ReqresCanvas } from '../data-model-classes';\r\nimport { AuthService } from '../data-model-manager.service';\r\n\r\n@Component({\r\n    selector: 'app-about',\r\n    templateUrl: './about.component.html',\r\n    styleUrls: ['./about.component.css']\r\n})\r\nexport class AboutComponent {\r\n\r\n    // Properties\r\n\r\n    private account: ReqresAccount;\r\n    private canvas: string;\r\n    private accountToken?: string;\r\n    private accountTokenIssuedTimestamp: any;\r\n\r\n    // Initialization\r\n\r\n    constructor(\r\n        private jwtHelper: JwtHelperService,\r\n        private authService: AuthService\r\n    ) {\r\n        this.account = undefined;\r\n        this.accountToken, \r\n            this.canvas,\r\n            this.accountTokenIssuedTimestamp = \"No Token\";\r\n        if (localStorage.getItem('access_token'))\r\n            try {\r\n                this.accountToken = localStorage.getItem('access_token')\r\n                this.account = this.jwtHelper.decodeToken(this.accountToken);\r\n                this.accountTokenIssuedTimestamp = new Date(this.jwtHelper.decodeToken(this.accountToken).iat * 1000);\r\n                this.canvas = localStorage.getItem('canvas');\r\n\r\n                this.authService.reqresAccountGetById(this.account._id).subscribe((data) => {\r\n                    this.account = data;\r\n\r\n                    /*this.authService.reqresCanvasGetByParticipantId(this.account._id).subscribe((data) => {\r\n                        this.canvases = data;\r\n                    });*/\r\n\r\n                    /*this.authService.reqresAccountGetByFriendId(this.account._id).subscribe((data) => {\r\n                        this.friends = data;\r\n                    });*/\r\n                });\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n    }\r\n\r\n}\r\n","export default \".mat-form-field {\\r\\n  display: inline;\\r\\n  margin-right: 12px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWNjb3VudC1yZWdpc3Rlci9hY2NvdW50LXJlZ2lzdGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFlO0VBQ2Ysa0JBQWtCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvYWNjb3VudC1yZWdpc3Rlci9hY2NvdW50LXJlZ2lzdGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWZvcm0tZmllbGQge1xyXG4gIGRpc3BsYXk6IGlubGluZTtcclxuICBtYXJnaW4tcmlnaHQ6IDEycHg7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../data-model-manager.service';\r\nimport { ReqresAccount, ReqresCanvas } from '../data-model-classes'\r\n\r\nimport { Router } from '@angular/router';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n    selector: 'app-account-register',\r\n    templateUrl: './account-register.component.html',\r\n    styleUrls: ['./account-register.component.css']\r\n})\r\nexport class AccountRegisterComponent implements OnInit {\r\n\r\n    // Properties\r\n\r\n    private account: ReqresAccount;\r\n    private accounts: ReqresAccount[];\r\n    private canvas: ReqresCanvas;\r\n    private creationError: string;\r\n    private formGroup: FormGroup;\r\n    private emailFormGroup: FormGroup;\r\n    private userNameFormGroup: FormGroup;\r\n    private passwordFormGroup: FormGroup;\r\n\r\n    // Initialization\r\n\r\n    get formArray(): AbstractControl | null { return this.formGroup.get('formArray'); }\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private authService: AuthService,\r\n        private jwtHelper: JwtHelperService,\r\n        private formBuilder: FormBuilder,\r\n        private snackBar: MatSnackBar\r\n    ) {\r\n        this.account = new ReqresAccount();\r\n        this.account.email = '';\r\n        this.account.userName = '';\r\n        this.account.password = '';\r\n        this.account.passwordConfirm = '';\r\n        this.account.isAdmin = false;\r\n        this.creationError = '';\r\n        this.accounts = undefined;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.authService.reqresAccountGetAll().subscribe(data => {\r\n            if (data)\r\n                this.accounts = data;\r\n        });\r\n\r\n        this.emailFormGroup = this.formBuilder.group({\r\n            emailFormCtrl: ['', [Validators.required, Validators.pattern(\"^[A-z0-9._%+-]+@[A-z0-9.-]+\\.[A-z]{2,}$\")]]\r\n        });\r\n\r\n        this.userNameFormGroup = this.formBuilder.group({\r\n            userNameFormCtrl: ['', [Validators.required, Validators.maxLength(50)]]\r\n        });\r\n\r\n        this.passwordFormGroup = this.formBuilder.group({\r\n            passwordFormCtrl: ['', Validators.required],\r\n            passwordConfirmFormCtrl: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(50)]]\r\n        });\r\n\r\n        this.formGroup = this.formBuilder.group({\r\n            formArray: this.formBuilder.array([\r\n                this.emailFormGroup,\r\n                this.userNameFormGroup,\r\n                this.passwordFormGroup\r\n            ])\r\n        });\r\n    }\r\n\r\n    regTest(expression, test): boolean {\r\n        return RegExp(expression).test(test);\r\n    }\r\n\r\n    existTest(email): boolean {\r\n        try {\r\n            let flag = false;\r\n            this.accounts.forEach(element => {\r\n                if (!flag && element.email == email)\r\n                    flag = true;\r\n            });\r\n            return flag;\r\n        } catch (error) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    onSubmit(): void {\r\n        this.account.email = this.formGroup.get('formArray').value[0].emailFormCtrl;\r\n        this.account.userName = this.formGroup.get('formArray').value[1].userNameFormCtrl;\r\n        this.account.password = this.formGroup.get('formArray').value[2].passwordFormCtrl;\r\n        this.account.passwordConfirm = this.formGroup.get('formArray').value[2].passwordConfirmFormCtrl;\r\n        this.authService.createAccount(this.account).subscribe(data => {\r\n            if (data) {\r\n                this.snackBar.open(this.account.email + \" created successfully, you can now log in!\", \"Thanks\", {\r\n                    duration: 8000,\r\n                });\r\n                this.router.navigate(['/login']);\r\n            }\r\n            else this.creationError = localStorage.getItem('error');\r\n        });\r\n    }\r\n\r\n    reset(): void {\r\n        this.router.navigate(['/forgotpass']);\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { A11yModule } from '@angular/cdk/a11y';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { CdkStepperModule } from '@angular/cdk/stepper';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { CdkTreeModule } from '@angular/cdk/tree';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\n\r\n@NgModule({\r\n    exports: [\r\n        A11yModule,\r\n        CdkStepperModule,\r\n        CdkTableModule,\r\n        CdkTreeModule,\r\n        DragDropModule,\r\n        MatAutocompleteModule,\r\n        MatBadgeModule,\r\n        MatBottomSheetModule,\r\n        MatButtonModule,\r\n        MatButtonToggleModule,\r\n        MatCardModule,\r\n        MatCheckboxModule,\r\n        MatChipsModule,\r\n        MatStepperModule,\r\n        MatDatepickerModule,\r\n        MatDialogModule,\r\n        MatDividerModule,\r\n        MatExpansionModule,\r\n        MatGridListModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatListModule,\r\n        MatMenuModule,\r\n        MatNativeDateModule,\r\n        MatPaginatorModule,\r\n        MatProgressBarModule,\r\n        MatProgressSpinnerModule,\r\n        MatRadioModule,\r\n        MatRippleModule,\r\n        MatSelectModule,\r\n        MatSidenavModule,\r\n        MatSliderModule,\r\n        MatSlideToggleModule,\r\n        MatSnackBarModule,\r\n        MatSortModule,\r\n        MatTableModule,\r\n        MatTabsModule,\r\n        MatToolbarModule,\r\n        MatTooltipModule,\r\n        MatTreeModule,\r\n        PortalModule,\r\n        ScrollingModule,\r\n    ]\r\n})\r\nexport class AngularMaterials { }","import {\r\n    trigger, animateChild, group, stagger,\r\n    transition, animate, style, query\r\n} from '@angular/animations';\r\n\r\n// Animations come in many types;\r\n// - pageAnimations defines loading the page, in Angular this should only be used once if routes are effectively used to navigate\r\n// - routeAnimation defines loading router transitions through the angular router\r\n\r\n// Routable animations\r\nexport const animations = [\r\n    trigger('pageAnimations', [\r\n        transition(':enter', [\r\n            query('#routeBody, header, footer', [style({ opacity: 0 })], { optional: true }),\r\n            query('header', [\r\n                style({ opacity: 0, transform: 'translateX(-150px)' }),\r\n                stagger(-30, [\r\n                    animate('700ms cubic-bezier(0.35, 0, 0.25, 1)', style({ opacity: 1, transform: 'none' }))\r\n                ])\r\n            ], { optional: true }), // This simply means if no DOM element is found matching, it's safe to skip the animation\r\n            query('#routeBody', [\r\n                style({ opacity: 0, transform: 'translateX(80px)' }),\r\n                stagger(-30, [\r\n                    animate('700ms cubic-bezier(0.35, 0, 0.25, 1)', style({ opacity: 1, transform: 'none' }))\r\n                ])\r\n            ], { optional: true }),\r\n        ])\r\n    ]),\r\n    trigger('routeAnimation', [ // Routes work on a first-match basis. * means any state, <=> means between 2 states, => means to state. Other states include void, or css selectors\r\n        transition('* => *', [\r\n            // REQUIRED BY ANGULAR SPECIFICATIONS\r\n            // Prevents unintended behaviour of static versus dynamic elements\r\n            style({ position: 'relative' }),\r\n            query(':leave, footer', [\r\n                style({\r\n                    position: 'absolute',\r\n                    width: '100%',\r\n                    right: '0%'\r\n                })\r\n            ], { optional: true }),\r\n\r\n            // Of note: ':enter' must remain of type position 'relative' and width '100%' to ensure no footer clipping\r\n\r\n            query(':enter', [style({ position: 'absolute', width: '100%', right: '0%', opacity: 0 })], { optional: true }),\r\n            query('footer', [style({ opacity: 0 })], { optional: true }),\r\n            group([\r\n                query(':leave', [\r\n                    style({ top: '0%', right: '-80%', opacity: 1, transform: 'translateX(-80%)' }),\r\n                    animate('700ms cubic-bezier(0.35, 0, 0.25, 1)', style({ opacity: 0, transform: 'none' })),\r\n                    animateChild()\r\n                ], { optional: true }),\r\n                query(':enter', [ // works when set to absolute positioning?\r\n                    style({ top: '0%', opacity: 0, transform: 'translateX(16%)' }),\r\n                    stagger(50, [\r\n                        animate('700ms cubic-bezier(0.35, 0, 0.25, 1)', style({ opacity: 1, position: 'relative', transform: 'none' })),\r\n                    ]),\r\n                    animateChild()\r\n                ], { optional: true }),\r\n            ]),\r\n            query('footer', [\r\n                style({ opacity: 0, transform: 'translateY(100px)' }),\r\n                stagger(50, [\r\n                    animate('1000ms cubic-bezier(0.35, 0, 0.25, 1)', style({ opacity: 1, transform: 'none' }))\r\n                ])\r\n            ])\r\n        ])\r\n    ])\r\n];","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { CanvasComponent } from './canvas/canvas.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { AboutComponent } from './about/about.component';\r\nimport { GuardAuthService } from './guard-auth.service';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { AccountRegisterComponent } from './account-register/account-register.component';\r\nimport { LibraryComponent } from './library/library.component';\r\nimport { UserSettingsComponent } from './user-settings/user-settings.component';\r\nimport { ResetComponent } from './reset/reset.component';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component'\r\nimport { InviteComponent } from './invite/invite.component'\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/home', pathMatch: 'full'},\r\n  { path: 'home', component: HomeComponent, data: { animation: 'home' } },\r\n  { path: 'about', component: AboutComponent, data: { animation: 'about' } },\r\n  { path: 'register', component: AccountRegisterComponent, data: { animation: 'register' } },\r\n  { path: 'login', component: LoginComponent, data: { animation: 'login' } },\r\n  { path: 'settings', component: UserSettingsComponent, canActivate: [GuardAuthService], data: { animation: 'settings' } },\r\n  { path: 'library', component: LibraryComponent, canActivate: [GuardAuthService], data: { animation: 'library' } },\r\n  { path: 'accept/:email', component: LibraryComponent, canActivate: [GuardAuthService], data: { animation: 'library' } },\r\n  { path: 'library/view/:email', component: LibraryComponent, canActivate: [GuardAuthService], data: { animation: 'library' } },\r\n  { path: 'library/sort/:email', component: LibraryComponent, canActivate: [GuardAuthService], data: { animation: 'library' } },\r\n  { path: 'edit/:email/:canvas', component: CanvasComponent, canActivate: [GuardAuthService], data: { animation: 'library' } },\r\n  { path: 'user/reset', component: ResetComponent, canActivate: [GuardAuthService], data: { animation: 'account' } },\r\n  { path: 'forgotpass', component: ForgotPasswordComponent, data: { animation: 'account' } },\r\n  { path: 'invite', component: InviteComponent, canActivate: [GuardAuthService], data: { animation: 'account' } },\r\n  { path: 'invite/:email', component: InviteComponent, canActivate: [GuardAuthService], data: { animation: 'account' } }\r\n];  \r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {onSameUrlNavigation: 'reload'})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","// Library imports\r\nimport { Component, HostBinding, OnInit } from '@angular/core';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { transition } from '@angular/animations'\r\nimport { AuthService } from './data-model-manager.service';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { ReqresAccount, ReqresCanvasCollectionPackage, ReqresAccountCollectionPackage } from './data-model-classes';\r\nimport {UserSettingsComponent} from './user-settings/user-settings.component'\r\n\r\n// Component imports\r\nimport { animations } from './animations';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n  animations: animations\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  private account: ReqresAccount\r\n  private tempTheme: string;\r\n  constructor(\r\n    private authService: AuthService,\r\n    private jwtHelper: JwtHelperService,\r\n  ) {\r\n    let token = this.authService.getToken();\r\n    try {\r\n      if (token) {\r\n        this.account = this.jwtHelper.decodeToken(token);\r\n        this.authService.reqresAccountGetById(this.account._id).subscribe((data) => {\r\n          this.account = data;\r\n        });\r\n      }\r\n    } catch (err) {\r\n      localStorage.clear()\r\n      console.log(err);\r\n    }\r\n  }\r\n  ngOnInit() {\r\n    if (this.account)\r\n      this.tempTheme = this.account.theme.replace(/\\s+/g, '-').toLowerCase();\r\n    else \r\n      this.tempTheme = \"dark-pink\";\r\n    this.tempTheme += \"-theme\";\r\n    document.getElementById('theme').classList.add(this.tempTheme);\r\n  }\r\n\r\n  @HostBinding('@pageAnimations')\r\n  public animatePage = true;\r\n  public title = 'Inkshare';\r\n\r\n  getAnimationData(outlet: RouterOutlet) {\r\n    return outlet && outlet.activatedRouteData && outlet.activatedRouteData['animation'];\r\n  }\r\n}","import { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { JwtModule } from \"@auth0/angular-jwt\";\r\nimport { ColorPickerModule } from 'ngx-color-picker';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { CanvasComponent, SettingsDialog } from './canvas/canvas.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { AboutComponent } from './about/about.component';\r\nimport { AuthService } from './data-model-manager.service';\r\nimport { GuardAuthService } from './guard-auth.service';\r\nimport { InterceptTokenService } from \"./intercept-token.service\";\r\nimport { AccountRegisterComponent } from './account-register/account-register.component';\r\nimport { LibraryComponent, CreateDialog, DeleteDialog, AddFriendDialog, AddParticipantDialog } from './library/library.component';\r\nimport { UserSettingsComponent, PasswordDialog, DeleteAccountDialog } from './user-settings/user-settings.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ResetComponent } from './reset/reset.component';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { InviteComponent } from './invite/invite.component';\r\nimport { AngularMaterials } from './angular-materials';\r\n\r\nexport function tokenGetter() { return localStorage.getItem('access_token'); }\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    HeaderComponent,\r\n    CanvasComponent,\r\n    LoginComponent,\r\n    AccountRegisterComponent,\r\n    LibraryComponent,\r\n    AboutComponent,\r\n    UserSettingsComponent,\r\n    ResetComponent,\r\n    ForgotPasswordComponent,\r\n    InviteComponent,\r\n    PasswordDialog,\r\n    CreateDialog,\r\n    DeleteDialog,\r\n    DeleteAccountDialog,\r\n    SettingsDialog,\r\n    AddFriendDialog,\r\n    AddParticipantDialog\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    ColorPickerModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    BrowserModule,\r\n    FlexLayoutModule,\r\n    AngularMaterials,\r\n    ReactiveFormsModule,\r\n    JwtModule.forRoot({\r\n      config: {\r\n        tokenGetter: tokenGetter,\r\n        authScheme: 'JWT'\r\n      }\r\n    }),\r\n    BrowserAnimationsModule\r\n  ],\r\n  exports: [\r\n    PasswordDialog,\r\n    CreateDialog,\r\n    DeleteDialog,\r\n    DeleteAccountDialog,\r\n    SettingsDialog,\r\n    AddFriendDialog,\r\n    AddParticipantDialog\r\n  ],\r\n  providers:[\r\n    AuthService,\r\n    GuardAuthService,\r\n    LoginComponent,\r\n    {\r\n        provide: HTTP_INTERCEPTORS,\r\n        useClass: InterceptTokenService,\r\n        multi: true\r\n    }\r\n],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [\r\n    PasswordDialog,\r\n    CreateDialog,\r\n    DeleteDialog,\r\n    DeleteAccountDialog,\r\n    SettingsDialog,\r\n    AddFriendDialog,\r\n    AddParticipantDialog\r\n  ]\r\n})\r\nexport class AppModule { }\r\n","export default \"mat-slider {\\r\\n    width: 300px;\\r\\n}\\r\\n\\r\\nmat-slider.outWidth {\\r\\n    width: 150px;\\r\\n}\\r\\n\\r\\nimg.preview {\\r\\n    width: 50px;\\r\\n    height: 50px;\\r\\n}\\r\\n\\r\\n#canvas-div {\\r\\n    border: 3px;\\r\\n    border-style: hidden;\\r\\n    border-color: rgb(51, 51, 51);\\r\\n    overflow: auto;\\r\\n}\\r\\n\\r\\ninput {\\r\\n    color: black;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2FudmFzL2NhbnZhcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtBQUNoQjs7QUFFQTtJQUNJLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLFdBQVc7SUFDWCxvQkFBb0I7SUFDcEIsNkJBQTZCO0lBQzdCLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxZQUFZO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvY2FudmFzL2NhbnZhcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LXNsaWRlciB7XHJcbiAgICB3aWR0aDogMzAwcHg7XHJcbn1cclxuXHJcbm1hdC1zbGlkZXIub3V0V2lkdGgge1xyXG4gICAgd2lkdGg6IDE1MHB4O1xyXG59XHJcblxyXG5pbWcucHJldmlldyB7XHJcbiAgICB3aWR0aDogNTBweDtcclxuICAgIGhlaWdodDogNTBweDtcclxufVxyXG5cclxuI2NhbnZhcy1kaXYge1xyXG4gICAgYm9yZGVyOiAzcHg7XHJcbiAgICBib3JkZXItc3R5bGU6IGhpZGRlbjtcclxuICAgIGJvcmRlci1jb2xvcjogcmdiKDUxLCA1MSwgNTEpO1xyXG4gICAgb3ZlcmZsb3c6IGF1dG87XHJcbn1cclxuXHJcbmlucHV0IHtcclxuICAgIGNvbG9yOiBibGFjaztcclxufSJdfQ== */\"","import { Component, OnInit, OnDestroy, Inject } from '@angular/core';\r\nimport { WebSocketService } from '../web-socket.service';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../data-model-manager.service';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { AddParticipantDialog } from '../library/library.component'\r\nimport { FormControl } from '@angular/forms';\r\nimport { Validators } from '@angular/forms';\r\nimport { ReqresCanvas, ReqresAccount } from '../data-model-classes';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Observable, Observer } from 'rxjs';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport * as p5 from 'p5'\r\nimport 'hammerjs';\r\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\n\r\n@Component({\r\n  selector: 'app-canvas',\r\n  templateUrl: './canvas.component.html',\r\n  styleUrls: ['./canvas.component.css']\r\n})\r\n\r\nexport class CanvasComponent implements OnInit, OnDestroy {\r\n\r\n  private account: ReqresAccount;\r\n  private participants: ReqresAccount[];\r\n  private canvas: ReqresCanvas;\r\n  private canvases: ReqresCanvas[];\r\n\r\n  private asyncTabs: Observable<string[]>;\r\n  private backgroundR: number;\r\n  private backgroundG: number;\r\n  private backgroundB: number;\r\n  private erase: boolean;\r\n  private fillShape: boolean;\r\n  private showOutline: boolean;\r\n  private outlineWidth: number;\r\n  private selectedRed: number;\r\n  private selectedGreen: number;\r\n  private selectedBlue: number;\r\n  private outlineRed: number;\r\n  private outlineGreen: number;\r\n  private outlineBlue: number;\r\n  private selectedBrush: string;\r\n  private selectedSize: number;\r\n  private room: string;\r\n  private image: any;\r\n  private p: any;\r\n  private permissions: string;\r\n  private disableDrawing: boolean;\r\n\r\n  myControl = new FormControl('', [\r\n    Validators.required,\r\n    Validators.minLength(6),\r\n    Validators.email\r\n  ]);\r\n  filteredOptions: Observable<string[]>;\r\n\r\n  private displayedColumns: string[] = ['name', 'email', 'permissions', 'options'];\r\n  private dataSource;\r\n\r\n\r\n  //Button listeners\r\n  colorChange(obj: any) {\r\n    //console.log(obj) //obj format: Object { slider: \"saturation-lightness\", color: \"rgb(197,63,63)\" }\r\n    var rgb = obj.color.slice(4, -1).split(',', 3); //slice and split the 'color' property of the returned obj from the color picker\r\n    if (obj.color.slice(0, 3) === \"rgb\") {\r\n      this.selectedRed = rgb[0];\r\n      this.selectedGreen = rgb[1];\r\n      this.selectedBlue = rgb[2];\r\n    }\r\n  }\r\n\r\n  outlineChange(obj: any) {\r\n    //console.log(obj) //obj format: Object { slider: \"saturation-lightness\", color: \"rgb(197,63,63)\" }\r\n    var rgb = obj.color.slice(4, -1).split(',', 3);\r\n    if (obj.color.slice(0, 3) === \"rgb\") {\r\n      this.outlineRed = rgb[0];\r\n      this.outlineGreen = rgb[1];\r\n      this.outlineBlue = rgb[2];\r\n    }\r\n  }\r\n\r\n  backgroundChange(obj: any) {\r\n    console.log(obj) //obj format: Object { slider: \"saturation-lightness\", color: \"rgb(197,63,63)\" }\r\n    var rgb = obj.color.slice(4, -1).split(',', 3); //slice and split the 'color' property of the returned obj from the color picker\r\n    if (obj.color.slice(0, 3) === \"rgb\") {\r\n      this.backgroundR = rgb[0];\r\n      this.backgroundG = rgb[1];\r\n      this.backgroundB = rgb[2];\r\n    }\r\n  }\r\n\r\n  canvasWidthChange(value: number) {\r\n    if (value)\r\n      if (value <= 10000)\r\n        this.canvas.dimensions.width = value;\r\n  }\r\n\r\n  canvasNameChange(value: string) {\r\n    if (value)\r\n      this.canvas.name = value;\r\n  }\r\n\r\n  canvasHeightChange(value: number) {\r\n    if (value)\r\n      if (value <= 10000)\r\n        this.canvas.dimensions.height = value;\r\n  }\r\n\r\n  saveCanvas() {\r\n    if (this.disableDrawing) {\r\n      this.snackBar.open(\"Sorry, the canvas is busy at this time. Try again in a moment.\", \"Oops\", {\r\n        duration: 4000,\r\n      });\r\n    }\r\n    this.disableDrawing = true;\r\n    this.image = this.p.get();\r\n    this.canvas.image = [undefined];\r\n    this.canvas.image.pop();\r\n    for (let row = 0; row < this.canvas.dimensions.height; row++) {\r\n      this.p.copy(this.image, row, 0, this.canvas.dimensions.width, row, row, 0, this.canvas.dimensions.width, row);\r\n      this.canvas.image.push(\r\n        btoa(\r\n          new Uint8Array(this.image.pixels)\r\n          .reduce(function (data, byte) {\r\n              return data + String.fromCharCode(byte);\r\n            }, ''\r\n          )\r\n        )\r\n      );\r\n    }\r\n    this.authService.updateCanvas(this.canvas).subscribe((data) => {\r\n      this.snackBar.open(\"Success, your canvas was saved successfully.\", \"Thanks\", {\r\n        duration: 3200,\r\n      });\r\n    });\r\n    this.disableDrawing = false;\r\n  }\r\n\r\n  loadCanvas() {\r\n    this.disableDrawing = true;\r\n    let index = 0; //(this.canvas.dimensions.height * this.canvas.dimensions.width * 4) - 1;\r\n    for (let row = 0; row < this.canvas.dimensions.height; row++) {\r\n      let pixels = new Uint8Array(atob(this.canvas.image[row]).split(\"\").map(function (c) {\r\n        return c.charCodeAt(0);\r\n      }));\r\n      for (let col = 0; col < this.canvas.dimensions.width; col++) {\r\n        //console.log(`${index} (${row}, ${col}) - [${pixels[index - 3]}, ${pixels[index - 2]},${pixels[index - 1]}, ${pixels[index - 0]}]`)\r\n        let color;\r\n        if (pixels[index] != undefined)\r\n          color = this.p.color(pixels[index+0], pixels[index+1], pixels[index+2], pixels[index+3]);\r\n        else\r\n          color = this.p.color(0, 0, 0, 0);\r\n        index+=4;\r\n        this.p.set(col, row, color);\r\n      }\r\n    }\r\n    this.p.updatePixels();\r\n    this.disableDrawing = false;\r\n  }\r\n\r\n  refreshBtnOnClick() {\r\n    if (this.permissions == \"Visitor\")\r\n      return;\r\n    var retData: returnData = new returnData();\r\n    retData.refresh = true;\r\n    retData.room = this.room;\r\n    retData.backgroundR = this.backgroundR;\r\n    retData.backgroundG = this.backgroundG;\r\n    retData.backgroundB = this.backgroundB;\r\n    retData.canvasWidth = this.canvas.dimensions.width;\r\n    retData.canvasHeight = this.canvas.dimensions.height;\r\n    this.webSocketService.emit('refresh', retData)\r\n    /*let response = this.authService.updateCanvas(this.canvas).subscribe(() => { // Too laggy\r\n      this.snackBar.open(\"Success, canvas size  and background updated!\", \"Thanks\", {\r\n        duration: 2000\r\n     });\r\n    });*/\r\n    \r\n  }\r\n\r\n  brushChangebtn(brush: string) {\r\n    this.selectedBrush = brush;\r\n  }\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private webSocketService: WebSocketService,\r\n    private jwtHelper: JwtHelperService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private dialog: MatDialog,\r\n    private snackBar: MatSnackBar\r\n  ) {\r\n    this.canvas = new ReqresCanvas();\r\n\r\n    this.init();\r\n\r\n    this.room = `${this.route.snapshot.params['email']}/${this.route.snapshot.params['canvas']}`; //initalize room to email + room name (pseudo private room as emails are unique)\r\n    this.selectedRed = 255;\r\n    this.selectedGreen = 255;\r\n    this.selectedBlue = 255;\r\n    this.outlineRed = 100;\r\n    this.outlineGreen = 100;\r\n    this.outlineBlue = 100;\r\n    this.backgroundR = 200;\r\n    this.backgroundG = 200;\r\n    this.backgroundB = 200;\r\n    this.selectedBrush = 'ellipse';\r\n    this.selectedSize = 36;\r\n    this.fillShape = true;\r\n    this.showOutline = false;\r\n    this.erase = false;\r\n    this.outlineWidth = 1;\r\n    this.disableDrawing = false;\r\n\r\n    this.webSocketService.connect();\r\n    this.webSocketService.setRoom(this.room);\r\n  }\r\n\r\n  init() {\r\n    if (localStorage.getItem('access_token') && localStorage.getItem('canvas'))\r\n      try {\r\n        this.authService.reqresCanvasGetById(localStorage.getItem('canvas')).subscribe((data1) => {\r\n          this.canvas = data1;\r\n          console.log(this.canvas)\r\n          this.account = this.jwtHelper.decodeToken(localStorage.getItem('access_token'));\r\n          this.authService.reqresAccountGetById(this.account._id).subscribe((data2) => {\r\n            this.account = data2;\r\n            this.authService.reqresCanvasGetAll().subscribe((data3) => {\r\n              this.canvases = data3;\r\n            });\r\n            if (this.canvas.name == this.route.snapshot.params['canvas'] || (this.canvas.type == \"Locked\" && this.account._id != this.canvas.owner)) {\r\n              this.permissions = undefined;\r\n              this.canvas.participants.forEach(participant => {\r\n                if (participant._id == this.account._id) {\r\n                  this.permissions = participant.permissions;\r\n                  let tabs = [\r\n                    \"File\",\r\n                    \"Tools\",\r\n                    \"Insert\"\r\n                  ];\r\n                  if (this.permissions == \"Owner\" || this.permissions == \"Moderator\")\r\n                    tabs.push(\"Canvas\");\r\n                  this.asyncTabs = new Observable((observer: Observer<string[]>) => {\r\n                    setTimeout(() => {\r\n                      observer.next(tabs);\r\n                    }, 2000); // Timeout in ms\r\n                  });\r\n                  return;\r\n                }\r\n              });\r\n              if (!this.permissions && this.canvas.type != \"Public\" && this.canvas.type != \"Featured\")\r\n                this.router.navigate(['/library', this.account.email]); // TODO: Make this lead to a request access page?\r\n              else if (!this.permissions && this.canvas.type == \"Public\")\r\n                this.permissions = \"Collaborator\";\r\n              else if (!this.permissions && this.canvas.type == \"Featured\")\r\n                this.permissions = \"Visitor\";\r\n              this.authService.reqresAccountGetByCanvasId(this.canvas._id).subscribe((data3) => {\r\n                this.participants = data3;\r\n              });\r\n            } else { // ID DOESNT MATCH URL // DOUBLE VERIFICATION SYSTEM\r\n              this.router.navigate(['/library', this.account.email]);\r\n            }\r\n          });\r\n        });\r\n      } catch (err) { console.error(err); }\r\n    else if (!localStorage.getItem('access_token'))\r\n      this.router.navigate(['/login']);\r\n    else\r\n      this.router.navigate(['/library', this.account.email]);\r\n  }\r\n\r\n  shareCanvas(canvas) {\r\n    /*this.options = [];\r\n    this.friends.forEach(friend => {\r\n      this.options.push(friend.email);\r\n    });*/\r\n    this.disableDrawing = true;\r\n    this.dataSource = new MatTableDataSource(/*this.friends*/)\r\n    const dialogRef = this.dialog.open(AddParticipantDialog, {\r\n      height: '300px',\r\n      width: '400px',\r\n      data: {\r\n        account: this.account,\r\n        friends: this.dataSource,\r\n        myControl: this.myControl,\r\n        permissions: [\r\n          { value: 'Collaborator' },\r\n          { value: 'Moderator' },\r\n          { value: 'Visitor' }\r\n        ],\r\n        permission: \"\",\r\n        filteredOptions: this.filteredOptions\r\n      }\r\n    });\r\n    dialogRef.afterClosed().subscribe(data => {\r\n      this.disableDrawing = false;\r\n      if (data)\r\n        if (data.myControl)\r\n          if (data.myControl.value) {\r\n            let dupeFlag = true;\r\n            if (data.myControl.value == this.account.email) {\r\n              this.snackBar.open(\"Sorry, You can't add yourself to a canvas you're already in.\", \"Oops\", {\r\n                duration: 4500,\r\n              });\r\n              this.shareCanvas(canvas)\r\n              return;\r\n            } else {\r\n              /*this.accounts.forEach(account => {\r\n                if (account.email == data.myControl.value) {\r\n                  dupeFlag = false;\r\n                  canvas.participants.forEach(participant => {\r\n                    if (account._id == participant._id) {\r\n                      dupeFlag = true;\r\n                      this.snackBar.open(\"Sorry, That user is already a participant.\", \"Oops\", {\r\n                        duration: 3500\r\n                      });\r\n                      return;\r\n                    }\r\n                  });\r\n                  if (!dupeFlag) {\r\n                    // TODO: Allow for different perms from dropdown\r\n                    canvas.participants.push({ _id: account._id, permissions: \"Collaborator\" })\r\n                    let response = this.authService.updateCanvas(canvas).subscribe((data1) => {\r\n                      this.mail.id = account._id;\r\n                      this.mail.subject = 'A canvas was shared with you.';\r\n                      this.mail.content = `\r\n                                            <p>Hey there, just letting you know that ${this.account.userName} has invited you to ${this.canvas.name}.<p>\r\n                                            <p><a href=\"https://inkshare-frontend.herokuapp.com/library/${data.myControl.value}\">View it here!</a></p>\r\n                                            `;\r\n                      this.authService.sendMail(this.mail).subscribe((data2) => {\r\n                        this.snackBar.open(\"Success, \" + data.myControl.value + \" was invited to be a \" + \"participant\" + \"!\", \"Thanks\", {\r\n                          duration: 3200\r\n                        });\r\n                      });\r\n                    });\r\n                  } else return;\r\n                }\r\n              });*/\r\n            }\r\n          }\r\n    });\r\n  }\r\n\r\n  canvasSettings() {\r\n    if (this.permissions != \"Owner\" && this.permissions != \"Moderator\") {\r\n      this.snackBar.open(\"Sorry, you can't modify this!\", \"Oops\", {\r\n        duration: 3200\r\n      });\r\n      return;\r\n    }\r\n    this.disableDrawing = true;\r\n    this.dataSource = new MatTableDataSource(this.participants)\r\n    let typesArray = [\r\n      { value: 'Private' },\r\n      { value: 'Public' },\r\n      { value: 'Locked' }\r\n    ];\r\n    if (this.account.isAdmin)\r\n      typesArray.push({ value: 'Featured' });\r\n    this.dataSource = new MatTableDataSource(this.participants);\r\n    const dialogRef = this.dialog.open(SettingsDialog, {\r\n      height: '550px',\r\n      width: '900px',\r\n      data: {\r\n        displayedColumns: this.displayedColumns,\r\n        canvas: this.canvas,\r\n        type: this.canvas.type,\r\n        types: typesArray,\r\n        participants: this.participants,\r\n        dataSource: this.dataSource\r\n      },\r\n    });\r\n    dialogRef.afterClosed().subscribe(data => {\r\n      this.disableDrawing = false;\r\n      if (data) {\r\n        if (data.participants) {\r\n          let dupeFlag = false;\r\n          this.canvases.forEach(data1 => {\r\n            if (data1.owner == this.account._id && data1.name == data.canvas.name)\r\n              if (data1._id != this.canvas._id) {\r\n                dupeFlag = true;\r\n                return;\r\n              }\r\n          });\r\n          if (dupeFlag) {\r\n            this.authService.reqresCanvasGetById(this.canvas._id).subscribe((data1) => {\r\n              this.canvas = data1;\r\n              this.snackBar.open(\"Sorry, \" + data.canvas.name + \" already exists on your account!\", \"Oops\", {\r\n                duration: 3200\r\n              });\r\n            });\r\n            return;\r\n          } else {\r\n            if (data.canvas.name)\r\n              this.canvas.name = data.canvas.name;\r\n            if (data.participants[0]._id == data.canvas.owner)\r\n              this.canvas.participants = data.participants\r\n            let response = this.authService.updateCanvas(this.canvas).subscribe((data1) => {\r\n              this.snackBar.open(\"Success, canvas settings saved!\", \"Thanks\", {\r\n                duration: 4000\r\n              });\r\n            });\r\n          }\r\n        } else\r\n          this.init();\r\n      } else\r\n        this.init();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() { // save the canvas\r\n    localStorage.removeItem('canvas');\r\n    localStorage.removeItem('width');\r\n    localStorage.removeItem('height');\r\n    console.log(\"Canvas Destroyed\");\r\n  }\r\n\r\n  ngOnInit() {\r\n    try {\r\n      this.authService.reqresCanvasGetById(localStorage.getItem('canvas')).subscribe((data1) => {\r\n        this.canvas = data1;\r\n        //implement p5.js functions and socket.io listeners/emitters inside the const s variable \r\n        const s = (p) => {\r\n\r\n          let canvas\r\n          p.preload = () => { console.log('Preload Complete'); }\r\n\r\n          p.setup = () => {\r\n            try {\r\n              console.log('Canvas Setup');\r\n              canvas = p.createCanvas(this.canvas.dimensions.width, this.canvas.dimensions.height);\r\n              canvas.parent('canvas-div');\r\n              p.background(this.backgroundR, this.backgroundG, this.backgroundB);\r\n              this.p = p;\r\n              this.loadCanvas();\r\n            } catch (error) {\r\n              this.disableDrawing = false;\r\n              console.log(error)\r\n              //location.reload(); // Temp solution to null canvases\r\n            }\r\n          }\r\n\r\n          //called when mouse is being held down and dragged\r\n          p.mouseDragged = () => {\r\n            if (this.permissions == \"Visitor\" || this.disableDrawing)\r\n              return;\r\n\r\n            var retData: returnData = new returnData();\r\n            retData.x = p.mouseX;\r\n            if (retData.x > this.canvas.dimensions.width || retData.x < 0)\r\n              return;\r\n            retData.y = p.mouseY;\r\n            if (retData.y > this.canvas.dimensions.height || retData.y < 0)\r\n              return;\r\n            retData.r = this.selectedRed;\r\n            retData.g = this.selectedGreen;\r\n            retData.b = this.selectedBlue;\r\n            retData.backgroundR = this.backgroundR;\r\n            retData.backgroundG = this.backgroundG;\r\n            retData.backgroundB = this.backgroundB;\r\n            retData.room = this.room;\r\n            retData.brush = this.selectedBrush;\r\n            retData.brushSize = this.selectedSize;\r\n            retData.fillShape = this.fillShape;\r\n            retData.outlineWidth = this.outlineWidth;\r\n            retData.outlineRed = this.outlineRed;\r\n            retData.outlineGreen = this.outlineGreen;\r\n            retData.outlineBlue = this.outlineBlue;\r\n            retData.showOutline = this.showOutline;\r\n            retData.eraser = this.erase;\r\n\r\n            if (this.fillShape) {\r\n              if (this.erase)\r\n                p.fill(this.backgroundR, this.backgroundG, this.backgroundB)\r\n              else\r\n                p.fill(this.selectedRed, this.selectedGreen, this.selectedBlue)\r\n            } else {\r\n              p.noFill()\r\n            }\r\n\r\n            if (this.showOutline == true) {\r\n              p.strokeWeight(this.outlineWidth)\r\n              if (this.erase) {\r\n                p.stroke(this.backgroundR, this.backgroundG, this.backgroundB)\r\n              } else {\r\n                p.stroke(this.outlineRed, this.outlineGreen, this.outlineBlue)\r\n              }\r\n            } else {\r\n              p.noStroke()\r\n            }\r\n\r\n            if (this.selectedBrush == 'ellipse') {\r\n              p.ellipse(p.mouseX, p.mouseY, this.selectedSize, this.selectedSize)\r\n            } else if (this.selectedBrush == 'rectangle') {\r\n              p.rect(p.mouseX, p.mouseY, this.selectedSize, this.selectedSize)\r\n            } else if (this.selectedBrush == 'triangle') {\r\n              p.triangle(p.mouseX, p.mouseY, (p.mouseX + (this.selectedSize / 2)), p.mouseY - this.selectedSize, (p.mouseX + this.selectedSize), p.mouseY)\r\n            } else if (this.selectedBrush == 'diamond') {\r\n              p.quad(p.mouseX, p.mouseY, (p.mouseX + (this.selectedSize / 2)), p.mouseY - this.selectedSize,\r\n                (p.mouseX + this.selectedSize), p.mouseY, (p.mouseX + (this.selectedSize / 2)), p.mouseY + this.selectedSize)\r\n            }\r\n\r\n            //emit mouse data to socket.io server\r\n            this.webSocketService.emit('mouse', retData);\r\n            this.p = p;\r\n          }\r\n\r\n          //called when the mouse is pressed initially (mouse velocity = 0)\r\n          p.mousePressed = () => {\r\n            if (this.permissions == \"Visitor\" || this.disableDrawing)\r\n              return;\r\n            var retData: returnData = new returnData();\r\n            retData.x = p.mouseX;\r\n            if (retData.x > this.canvas.dimensions.width || retData.x < 0)\r\n              return;\r\n            retData.y = p.mouseY;\r\n            if (retData.y > this.canvas.dimensions.height || retData.y < 0)\r\n              return;\r\n            retData.r = this.selectedRed;\r\n            retData.g = this.selectedGreen;\r\n            retData.b = this.selectedBlue;\r\n            retData.backgroundR = this.backgroundR;\r\n            retData.backgroundG = this.backgroundG;\r\n            retData.backgroundB = this.backgroundB;\r\n            retData.room = this.room;\r\n            retData.brush = this.selectedBrush;\r\n            retData.brushSize = this.selectedSize;\r\n            retData.fillShape = this.fillShape;\r\n            retData.outlineWidth = this.outlineWidth;\r\n            retData.outlineRed = this.outlineRed;\r\n            retData.outlineGreen = this.outlineGreen;\r\n            retData.outlineBlue = this.outlineBlue;\r\n            retData.showOutline = this.showOutline;\r\n            retData.eraser = this.erase;\r\n\r\n            if (this.fillShape) {\r\n              if (this.erase) {\r\n                p.fill(this.backgroundR, this.backgroundG, this.backgroundB)\r\n              } else {\r\n                p.fill(this.selectedRed, this.selectedGreen, this.selectedBlue)\r\n              }\r\n            } else {\r\n              p.noFill()\r\n            }\r\n\r\n            if (this.showOutline == true) {\r\n              p.strokeWeight(this.outlineWidth)\r\n              if (this.erase) {\r\n                p.stroke(this.backgroundR, this.backgroundG, this.backgroundB)\r\n              } else {\r\n                p.stroke(this.outlineRed, this.outlineGreen, this.outlineBlue)\r\n              }\r\n            } else {\r\n              p.noStroke()\r\n            }\r\n\r\n            if (this.selectedBrush == 'ellipse') {\r\n              p.ellipse(p.mouseX, p.mouseY, this.selectedSize, this.selectedSize)\r\n            } else if (this.selectedBrush == 'rectangle') {\r\n              p.rect(p.mouseX, p.mouseY, this.selectedSize, this.selectedSize)\r\n            } else if (this.selectedBrush == 'triangle') {\r\n              p.triangle(p.mouseX, p.mouseY, (p.mouseX + (this.selectedSize / 2)), p.mouseY - this.selectedSize, (p.mouseX + this.selectedSize), p.mouseY)\r\n            } else if (this.selectedBrush == 'diamond') {\r\n              p.quad(p.mouseX, p.mouseY, (p.mouseX + (this.selectedSize / 2)), p.mouseY - this.selectedSize,\r\n                (p.mouseX + this.selectedSize), p.mouseY, (p.mouseX + (this.selectedSize / 2)), p.mouseY + this.selectedSize)\r\n            }\r\n\r\n            //emit mouse data to socket.io server\r\n            //console.log(p.get().pixels);\r\n            this.webSocketService.emit('mouse', retData);\r\n            this.p = p;\r\n          }\r\n\r\n\r\n          //socket.io event listeners\r\n          //listen for an event from the socket.io server i.e: another user draws on the canvas\r\n          this.webSocketService.listen('mouse').subscribe((data: returnData) => {\r\n            //do something with the data sent from the socket.io server\r\n            if (data.showOutline == true) {\r\n              p.strokeWeight(data.outlineWidth)\r\n              if (data.eraser) {\r\n                p.stroke(data.backgroundR, data.backgroundG, data.backgroundB)\r\n              } else {\r\n                p.stroke(data.outlineRed, data.outlineGreen, data.outlineBlue)\r\n              }\r\n            } else {\r\n              p.noStroke()\r\n            }\r\n\r\n            if (data.fillShape) {\r\n              if (data.eraser) {\r\n                p.fill(data.backgroundR, data.backgroundG, data.backgroundB)\r\n              } else {\r\n                p.fill(data.r, data.g, data.b)\r\n              }\r\n            } else {\r\n              p.noFill()\r\n            }\r\n\r\n            if (data.brush == 'ellipse') {\r\n              p.ellipse(data.x, data.y, data.brushSize, data.brushSize)\r\n            } else if (data.brush == 'rectangle') {\r\n              p.rect(data.x, data.y, data.brushSize, data.brushSize)\r\n            } else if (data.brush == 'triangle') {\r\n              p.triangle(data.x, data.y, (data.x + (data.brushSize / 2)), data.y - data.brushSize, (data.x + data.brushSize), data.y)\r\n            } else if (data.brush == 'diamond') {\r\n              p.quad(data.x, data.y, (data.x + (data.brushSize / 2)), data.y - data.brushSize,\r\n                (data.x + data.brushSize), data.y, (data.x + (data.brushSize / 2)), data.y + data.brushSize)\r\n            }\r\n\r\n          })\r\n\r\n          this.webSocketService.listen('refresh').subscribe((data: returnData) => {\r\n            //do something with the data sent from the socket.io server\r\n            if (data.refresh) {\r\n              p.resizeCanvas(data.canvasWidth, data.canvasHeight)\r\n              //canvas = p.createCanvas(data.canvasWidth, data.canvasHeight) //don't call createCanvas multiple times\r\n              p.background(data.backgroundR, data.backgroundG, data.backgroundB)\r\n              this.backgroundR = data.backgroundR\r\n              this.backgroundG = data.backgroundG\r\n              this.backgroundB = data.backgroundB\r\n              this.canvas.dimensions.height = data.canvasHeight\r\n              this.canvas.dimensions.width = data.canvasWidth\r\n            }\r\n            this.p = p;\r\n          })\r\n\r\n        }\r\n        let player = new p5(s);\r\n      });\r\n    } catch (err) { console.error(err); }\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'canvas-settings.dialog',\r\n  templateUrl: 'canvas-settings.dialog.html',\r\n})\r\nexport class SettingsDialog {\r\n\r\n  public dataSource;\r\n  public participants;\r\n  public canvas;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<SettingsDialog>,\r\n    @Inject(MAT_DIALOG_DATA) public data: SettingsDialog) { }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.data.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  findParticipant(account): number {\r\n    for (let index = 0; index < this.data.participants.length; index++) {\r\n      if (this.data.participants[index]._id == account._id)\r\n        return index;\r\n    }\r\n    return -1;\r\n  }\r\n\r\n  promoteParticipant(account) {\r\n    let index = this.findParticipant(account);\r\n    if (index >= 0) {\r\n      switch (this.data.participants[index].permissions) {\r\n        case \"Collaborator\": this.data.participants[index].permissions = \"Moderator\"; break;\r\n        case \"Visitor\": this.data.participants[index].permissions = \"Collaborator\"; break;\r\n        default: break;\r\n      }\r\n      this.finalize();\r\n    }\r\n  }\r\n\r\n  demoteParticipant(account) {\r\n    let index = this.findParticipant(account);\r\n    if (index >= 0) {\r\n      switch (this.data.participants[index].permissions) {\r\n        case \"Moderator\": this.data.participants[index].permissions = \"Collaborator\"; break;\r\n        case \"Collaborator\": this.data.participants[index].permissions = \"Visitor\"; break;\r\n        default: break;\r\n      }\r\n      this.finalize();\r\n    }\r\n  }\r\n\r\n  removeParticipant(account) {\r\n    let index = this.findParticipant(account);\r\n    if (index >= 0) {\r\n      this.data.participants.splice(index, 1)\r\n      this.finalize();\r\n    }\r\n  }\r\n\r\n  finalize() {\r\n    this.data.dataSource = new MatTableDataSource(this.data.participants)\r\n  }\r\n}\r\n\r\nexport class returnData {\r\n  canvasHeight: number;\r\n  canvasWidth: number;\r\n  x: number;\r\n  y: number;\r\n  refresh: boolean;\r\n  fillShape: boolean;\r\n  r: number;\r\n  g: number;\r\n  b: number;\r\n  backgroundR: number;\r\n  backgroundG: number;\r\n  backgroundB: number;\r\n  showOutline: boolean;\r\n  outlineRed: number;\r\n  outlineGreen: number;\r\n  outlineBlue: number;\r\n  outlineWidth: number;\r\n  room: string;\r\n  brush: string;\r\n  brushSize: number;\r\n  eraser: boolean;\r\n}","// Account\r\nexport class ReqresAccount {\r\n    _id: string;\r\n    userName: string;\r\n    password: string;\r\n    email: string;\r\n    passwordConfirm: string;\r\n    canvases: string[];\r\n    friends: string[];\r\n    isAdmin: boolean;\r\n    avatar: string;\r\n    theme: string;\r\n    permissions?: string;\r\n    notifications: [{ _id?: string, source: string, date: string, content: string, link: string, friendEmail: string}];\r\n    marked?: boolean;\r\n}\r\n\r\n// Canvas\r\nexport class ReqresCanvas {\r\n    _id: string;\r\n    name: string;\r\n    type: string;\r\n    owner: string;\r\n    modified: string;\r\n    dimensions: { width: number, height: number }\r\n    participants: [{_id: string, permissions: string}];\r\n    image: [string];\r\n}\r\n\r\n// Package that delivers a collection of Accounts\r\nexport class ReqresAccountCollectionPackage {\r\n    page?: number;\r\n    per_page?: number;\r\n    total?: number;\r\n    total_pages?: number;\r\n    data: ReqresAccount[];\r\n}\r\n\r\n// Package that delivers a collection of Canvases\r\nexport class ReqresCanvasCollectionPackage {\r\n    page?: number;\r\n    per_page?: number;\r\n    total?: number;\r\n    total_pages?: number;\r\n    data: ReqresCanvas[];\r\n}\r\n\r\n// Package that delivers one Account\r\nexport class ReqresAccountSinglePackage {\r\n    page?: number;\r\n    per_page?: number;\r\n    total?: number;\r\n    total_pages?: number;\r\n    data: ReqresAccount;\r\n}\r\n\r\n// Response from \"add/edit\" POST/PUT request\r\nexport class ReqresAccountCreateResponse {\r\n    id?: number;\r\n    name: string;\r\n    job: string;\r\n    createdAt: string;  // ISO8601 date and time string\r\n}\r\n\r\n// Package that delivers one Canvas\r\nexport class ReqresCanvasSinglePackage {\r\n    page?: number; //depriciate\r\n    per_page?: number;//depriciate\r\n    total?: number;//depriciate\r\n    total_pages?: number;//depriciate\r\n    data: ReqresAccount;\r\n    _id: string;\r\n    participants: string[];\r\n    name: string;\r\n    owner: string;\r\n}\r\n\r\n// Response from \"add/edit\" POST/PUT request\r\nexport class ReqresCanvasCreateResponse {\r\n    id?: number;\r\n    name: string;\r\n    job: string;\r\n    createdAt: string;  // ISO8601 date and time string\r\n}\r\n\r\nexport class Active {\r\n    isActive: boolean;\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n\r\nimport { Observable, of } from \"rxjs\";\r\nimport { map, tap, catchError } from 'rxjs/operators';\r\nimport { LoginCredentials } from './login/login.component';\r\nimport { ResetCredentials } from './reset/reset.component';\r\nimport { ForgotPasswordCredentials } from './forgot-password/forgot-password.component';\r\nimport { mailCredentials } from './library/library.component'\r\nimport { notificationStruct } from './header/header.component'\r\n\r\nimport { Active, ReqresAccount, ReqresCanvas, ReqresAccountCollectionPackage, ReqresCanvasCollectionPackage, ReqresAccountSinglePackage, ReqresAccountCreateResponse, ReqresCanvasSinglePackage, ReqresCanvasCreateResponse } from \"./data-model-classes\";\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthService {\r\n\r\n    // Properties\r\n\r\n    // Webservice API\r\n\r\n    //private urlWebservice: string = \"https://inkshare-webservice.herokuapp.com\";\r\n\r\n    // Local API\r\n    private urlWebservice = \"http://localhost:8080\";\r\n    \r\n    private httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*', 'Source': 'InkShareHeaderOrigin'}) };\r\n\r\n    // Initialization\r\n    \r\n    constructor(\r\n        private http: HttpClient,\r\n        private jwtHelper: JwtHelperService\r\n    ) { }\r\n\r\n    // Methods\r\n    \r\n    private handleError<T>(operation = 'operation', result?: T) {\r\n        return (error: any): Observable<T> => {\r\n            console.error(error.error);\r\n            localStorage.setItem('error', error.error.error);\r\n            return of(result as T);\r\n        };\r\n    }\r\n\r\n    // Get one\r\n    reqresAccountGetById(id: string): Observable<ReqresAccount> {\r\n        return this.http.get<ReqresAccount>(`${this.urlWebservice}/accounts/${id}`, this.httpOptions);\r\n    }\r\n\r\n    reqresCanvasGetById(id: string): Observable<ReqresCanvas> {\r\n        return this.http.get<ReqresCanvas>(`${this.urlWebservice}/canvases/${id}`, this.httpOptions);\r\n    }\r\n\r\n    // Get many\r\n    reqresAccountGetAll(): Observable<ReqresAccount[]> {\r\n        return this.http.get<ReqresAccount[]>(`${this.urlWebservice}/accounts`, this.httpOptions);\r\n    }\r\n\r\n    reqresCanvasGetAll(): Observable<ReqresCanvas[]> {\r\n        return this.http.get<ReqresCanvas[]>(`${this.urlWebservice}/canvases`, this.httpOptions);\r\n    }\r\n\r\n\r\n    reqresAccountGetByFriendId(id: string): Observable<ReqresAccount[]> {\r\n        return this.http.get<ReqresAccount[]>(`${this.urlWebservice}/accounts/friends/${id}`, this.httpOptions);\r\n    }\r\n\r\n    reqresAccountGetByCanvasId(id: string): Observable<ReqresAccount[]> {\r\n        return this.http.get<ReqresAccount[]>(`${this.urlWebservice}/accounts/participates/${id}`, this.httpOptions);\r\n    }\r\n\r\n    reqresCanvasGetByParticipantId(id: string): Observable<ReqresCanvas[]> {\r\n        return this.http.get<ReqresCanvas[]>(`${this.urlWebservice}/canvases/viewable/${id}`, this.httpOptions);\r\n    }\r\n\r\n    login(credentials: LoginCredentials): Observable<any> {\r\n        return this.http.post<any>(this.urlWebservice + '/accounts/login', credentials, this.httpOptions).pipe(\r\n            //Change this console log\r\n            tap(() => console.log(`Login successful`)),\r\n            catchError(this.handleError<any>('Failed to login'))\r\n        );\r\n    }\r\n\r\n    createAccount(credentials: ReqresAccount): Observable<any> {\r\n        return this.http.post<any>(this.urlWebservice + '/accounts/create', credentials, this.httpOptions).pipe(\r\n            //Change this console log\r\n            tap(() => console.log(`Creation successful`)),\r\n            catchError(this.handleError<any>())\r\n        );\r\n    }\r\n\r\n    createCanvas(canvas: ReqresCanvas): Observable<any> {\r\n        return this.http.post<any>(this.urlWebservice + '/canvases/create', canvas, this.httpOptions).pipe(\r\n            //Change this console log\r\n            tap(() => console.log(`Creation successful`)),\r\n            catchError(this.handleError<any>())\r\n        );\r\n    }\r\n\r\n    updateAccount(account: ReqresAccount): Observable<any> {\r\n        return this.http.put<any>(this.urlWebservice + '/accounts/update', account, this.httpOptions).pipe(\r\n            //Change this console log\r\n            tap(() => console.log(`Update successful`)),\r\n            catchError(this.handleError<any>())\r\n        );\r\n    }\r\n\r\n    updateCanvas(canvas: ReqresCanvas): Observable<any> {\r\n        return this.http.put<any>(this.urlWebservice + '/canvases/update', canvas, this.httpOptions).pipe(\r\n            //Change this console log\r\n            tap(() => console.log(`Update successful`)),\r\n            catchError(this.handleError<any>())\r\n        );\r\n    }\r\n\r\n    deleteAccount(account: ReqresAccount): Observable<any> {\r\n        return this.http.put<any>(this.urlWebservice + '/accounts/delete', account, this.httpOptions).pipe(\r\n            //Change this console log\r\n            tap(() => console.log(`Deletion successful`)),\r\n            catchError(this.handleError<any>())\r\n        );\r\n    }\r\n\r\n    deleteCanvas(canvas: ReqresCanvas): Observable<any> {\r\n        return this.http.put<any>(this.urlWebservice + '/canvases/delete', canvas, this.httpOptions).pipe(\r\n            //Change this console log\r\n            tap(() => console.log(`Deletion successful`)),\r\n            catchError(this.handleError<any>())\r\n        );\r\n    }\r\n\r\n    changePassword(credentials: ResetCredentials): Observable<any> {\r\n        return this.http.put<any>(this.urlWebservice + '/accounts/reset', credentials, this.httpOptions).pipe(\r\n            //Change this console log\r\n            tap(() => console.log('Password Change Successful')),\r\n            catchError(this.handleError<any>('Password Change Failed'))\r\n        );\r\n    }\r\n\r\n    requestNewPassword(credentials: ForgotPasswordCredentials): Observable<any> {\r\n        return this.http.post<any>(this.urlWebservice + '/accounts/recovery', credentials, this.httpOptions).pipe(\r\n            //Change this console log\r\n            tap(() => console.log('Password Request Successful')),\r\n            catchError(this.handleError<any>('Password Request Failed'))\r\n        );\r\n    }\r\n\r\n    sendMail(mailObject: mailCredentials) : Observable<any> {\r\n        return this.http.post<any>(this.urlWebservice + '/accounts/email', mailObject, this.httpOptions).pipe(\r\n            tap(() => console.log('Email Delivery Successful')),\r\n            catchError(this.handleError<any>('Email Delivery Failed'))\r\n        );\r\n    }\r\n\r\n    pushNotification(id: string, title: string, content: string, link: string = \"\", originEmail: string = \"\"): Observable<any> {\r\n        let notification = new notificationStruct(title, content, link, originEmail);\r\n        return this.http.post<any>(`${this.urlWebservice}/accounts/notifications/${id}`, notification, this.httpOptions).pipe(\r\n            tap(() => console.log('Notification successfully bound')),\r\n            catchError(this.handleError<any>('Notification failed to bind'))\r\n        );\r\n    }\r\n\r\n    popNotification(id: string, notification: { _id: string, date?: string, content?: string, link?: string}): Observable<any> {\r\n        return this.http.put<any>(`${this.urlWebservice}/accounts/notifications/${id}`, notification, this.httpOptions).pipe(\r\n            tap(() => console.log('Notification successfully unbound')),\r\n            catchError(this.handleError<any>('Notification failed to unbind'))\r\n        );\r\n    }\r\n\r\n    public getToken(): string { return localStorage.getItem('access_token'); }\r\n\r\n    isAuthenticated(): boolean {\r\n        const token = localStorage.getItem('access_token');\r\n        if (token) {\r\n            //console.log('Token provided');\r\n            return true;\r\n        } else {\r\n            //console.log('No token provided');\r\n            return false;\r\n        }\r\n    }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZvcmdvdC1wYXNzd29yZC9mb3Jnb3QtcGFzc3dvcmQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component } from '@angular/core';\r\nimport { AuthService } from '../data-model-manager.service';\r\nimport { Router } from '@angular/router';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.css']\r\n})\r\nexport class ForgotPasswordComponent {\r\n\r\n  // Properties\r\n  credentials: ForgotPasswordCredentials;\r\n  forgotPassError: string;\r\n\r\n  // Initialization\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthService,\r\n    private jwtHelper: JwtHelperService\r\n  ) {\r\n    this.credentials = new ForgotPasswordCredentials();\r\n    this.credentials.email = '';\r\n    this.forgotPassError = '';\r\n  }\r\n\r\n  // Methods\r\n  onSubmit(): void {\r\n    this.authService.requestNewPassword(this.credentials).subscribe(data => {\r\n      if (data) {\r\n        this.router.navigate(['/login']);\r\n      }\r\n      else {\r\n        this.forgotPassError = localStorage.getItem('error');\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\nexport class ForgotPasswordCredentials {\r\n  email: string;\r\n}","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\n\r\nimport { AuthService } from './data-model-manager.service';\r\n\r\n@Injectable()\r\nexport class GuardAuthService implements CanActivate {\r\n    \r\n    // Initialization\r\n\r\n    constructor(\r\n        private auth: AuthService,\r\n        private router: Router\r\n    ) { }\r\n\r\n    // Methods\r\n\r\n    canActivate(): boolean {\r\n        if (!this.auth.isAuthenticated()) {\r\n            this.router.navigate(['/login']);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}","export default \".notification {\\r\\n    min-width: 270px;\\r\\n    max-width: 270px;\\r\\n    width: -webkit-max-content;\\r\\n    width: -moz-max-content;\\r\\n    width: max-content;\\r\\n    height: -webkit-max-content;\\r\\n    height: -moz-max-content;\\r\\n    height: max-content;\\r\\n    overflow: auto;\\r\\n    -webkit-overflow-scrolling: touch;\\r\\n    max-height: calc(100vh - 48px);\\r\\n    border-radius: 4px;\\r\\n    margin: 5px;\\r\\n    outline: 0;\\r\\n}\\r\\n\\r\\n.mat-card-title, .mat-card-subtitle {\\r\\n  overflow-wrap: break-word;\\r\\n}\\r\\n\\r\\n#secondary{\\r\\n    max-width: 325px;\\r\\n    margin-top: auto;\\r\\n    margin-bottom: auto;\\r\\n    padding-bottom: 15px;\\r\\n}\\r\\n\\r\\n#secondary:hover {\\r\\n  background-color: gray;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQiwwQkFBa0I7SUFBbEIsdUJBQWtCO0lBQWxCLGtCQUFrQjtJQUNsQiwyQkFBbUI7SUFBbkIsd0JBQW1CO0lBQW5CLG1CQUFtQjtJQUNuQixjQUFjO0lBQ2QsaUNBQWlDO0lBQ2pDLDhCQUE4QjtJQUM5QixrQkFBa0I7SUFDbEIsV0FBVztJQUNYLFVBQVU7QUFDZDs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsbUJBQW1CO0lBQ25CLG9CQUFvQjtBQUN4Qjs7QUFFQTtFQUNFLHNCQUFzQjtBQUN4QiIsImZpbGUiOiJzcmMvYXBwL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5ub3RpZmljYXRpb24ge1xyXG4gICAgbWluLXdpZHRoOiAyNzBweDtcclxuICAgIG1heC13aWR0aDogMjcwcHg7XHJcbiAgICB3aWR0aDogbWF4LWNvbnRlbnQ7XHJcbiAgICBoZWlnaHQ6IG1heC1jb250ZW50O1xyXG4gICAgb3ZlcmZsb3c6IGF1dG87XHJcbiAgICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2g7XHJcbiAgICBtYXgtaGVpZ2h0OiBjYWxjKDEwMHZoIC0gNDhweCk7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgICBtYXJnaW46IDVweDtcclxuICAgIG91dGxpbmU6IDA7XHJcbn1cclxuXHJcbi5tYXQtY2FyZC10aXRsZSwgLm1hdC1jYXJkLXN1YnRpdGxlIHtcclxuICBvdmVyZmxvdy13cmFwOiBicmVhay13b3JkO1xyXG59XHJcblxyXG4jc2Vjb25kYXJ5e1xyXG4gICAgbWF4LXdpZHRoOiAzMjVweDtcclxuICAgIG1hcmdpbi10b3A6IGF1dG87XHJcbiAgICBtYXJnaW4tYm90dG9tOiBhdXRvO1xyXG4gICAgcGFkZGluZy1ib3R0b206IDE1cHg7XHJcbn1cclxuXHJcbiNzZWNvbmRhcnk6aG92ZXIge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGdyYXk7XHJcbn0iXX0= */\"","import { Component } from '@angular/core';\r\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\r\nimport { AuthService } from '../data-model-manager.service';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { ReqresAccount } from '../data-model-classes';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent {\r\n\r\n  private account: ReqresAccount;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthService,\r\n    private jwtHelper: JwtHelperService,\r\n    public route: ActivatedRoute\r\n  ) {\r\n    this.router.events.subscribe((ev) => {\r\n      if (ev instanceof NavigationEnd) { this.updateHeader(); } // Update the header if the user moves pages\r\n    });\r\n  }\r\n\r\n  updateHeader(): void {\r\n    let token = this.authService.getToken();\r\n    if (token)\r\n      try {\r\n        // First attempt a cached load\r\n        this.account = this.jwtHelper.decodeToken(localStorage.getItem('access_token'));\r\n        // If there was a cache, we can use that while we load any applicable updated data.\r\n        // If there was no cache, we'll just have to wait anyways.\r\n        this.authService.reqresAccountGetById(this.account._id).subscribe((data) => {\r\n          this.account = data;\r\n        });\r\n      } catch (err) {\r\n        this.account = undefined;\r\n        console.log(err);\r\n      }\r\n  }\r\n\r\n  navigate(notification: any): void {\r\n    this.router.navigate([notification.link]);\r\n    this.authService.popNotification(this.account._id, notification).subscribe((data) => {\r\n      this.updateHeader();\r\n    });\r\n  }\r\n\r\n  dismissNotif(notification: any): void {\r\n    if (notification == \"all\")\r\n      for (let index = 0; this.account.notifications.length > index; index++) {\r\n        this.authService.popNotification(this.account._id, { _id: this.account.notifications[index]._id}).subscribe((data) => {\r\n          if (this.account.notifications.length - 1 == index)\r\n            this.updateHeader();\r\n        });\r\n      }\r\n    else\r\n    this.authService.popNotification(this.account._id, notification).subscribe((data) => {\r\n      this.updateHeader();\r\n    });\r\n  }\r\n\r\n  logout(): void {\r\n    localStorage.clear();\r\n    this.account = undefined;\r\n    this.router.navigate(['/login']);\r\n  }\r\n}\r\n\r\nexport class notificationStruct {\r\n  _id: string;\r\n  title: string;\r\n  date: Date;\r\n  content: string;\r\n  link: string;\r\n  originEmail: string;\r\n  constructor(title: string, content: string, link: string = \"\", originEmail: string) {\r\n    this.title = title;\r\n    this.content = content;\r\n    this.link = link;\r\n    this.originEmail = originEmail;\r\n  }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit { ngOnInit() { } }","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\n\r\nimport { AuthService } from './data-model-manager.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class InterceptTokenService implements HttpInterceptor {\r\n\r\n    // Initialization\r\n    \r\n    constructor(private a: AuthService) { }\r\n\r\n    // Methods\r\n    \r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        request = request.clone({\r\n            setHeaders: {\r\n                Authorization: `JWT ${this.a.getToken()}`\r\n            }\r\n        });\r\n        return next.handle(request);\r\n    }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ludml0ZS9pbnZpdGUuY29tcG9uZW50LmNzcyJ9 */\"","import { Component } from '@angular/core';\r\nimport { AuthService } from '../data-model-manager.service';\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { Router } from '@angular/router';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { ReqresCanvas } from '../data-model-classes';\r\n\r\n@Component({\r\n  selector: 'app-invite',\r\n  templateUrl: './invite.component.html',\r\n  styleUrls: ['./invite.component.css']\r\n})\r\n\r\n\r\nexport class InviteComponent {\r\n\r\n  invite: CreateInvite;\r\n\r\n    private tempRoom: string;  //temp room is used to store the input of\r\n    private tokenDecoded;\r\n    private canvases;\r\n    private canvas1;\r\n    private id: string;\r\n    private email: string;\r\n    private request: boolean;\r\n    updateError: string;\r\n\r\n    // Initialization\r\n    \r\n    constructor(\r\n        private router: Router,\r\n        private a: AuthService,\r\n        private jwtHelper: JwtHelperService,\r\n        private route: ActivatedRoute\r\n    ) {\r\n      this.invite = new CreateInvite();\r\n      this.invite.email = \"\";\r\n      this.invite.id = \"\";\r\n      this.tokenDecoded = this.jwtHelper.decodeToken(localStorage.getItem('access_token'));\r\n      this.email = this.route.snapshot.params['email'];\r\n      this.id = this.route.snapshot.params['id'];\r\n      if (!this.id)\r\n        this.id = \"\";\r\n      if (!this.email) {\r\n        this.request = false;\r\n        this.email = this.tokenDecoded.email;\r\n      } else {\r\n        this.request = true;\r\n      }\r\n      this.a.reqresCanvasGetById(this.tokenDecoded._id).subscribe(data => {\r\n          if (data)\r\n            this.canvases = data;\r\n      });\r\n    }\r\n\r\n    onSubmit(): void {\r\n      this.a.reqresCanvasGetById(this.invite.id).subscribe(data => {\r\n        if (data){\r\n          console.log(data);\r\n          console.log(this.canvas1);\r\n          this.canvas1 = data;\r\n          console.log(this.canvas1);\r\n          this.a.updateCanvas(this.canvas1).subscribe(data => {\r\n              if (data) {\r\n                  this.router.navigate(['/library']).then( () => { location.reload(); } );\r\n              } else {\r\n                  this.updateError = localStorage.getItem('error');\r\n              }\r\n          });\r\n        }\r\n    });\r\n  }\r\n}\r\n\r\nexport class CreateInvite {\r\n  email: string;\r\n  id: string;\r\n}","export default \".mat-form-field {\\r\\n  display: inline;\\r\\n  margin-right: 12px;\\r\\n}\\r\\n\\r\\n.header-image {\\r\\n    background-image: url('no-avatar.png');\\r\\n    background-size: cover;\\r\\n}\\r\\n\\r\\n.mat-card-title, .mat-card-subtitle {\\r\\n  overflow-wrap: break-word;\\r\\n}\\r\\n\\r\\n#secondary{\\r\\n    max-width: 325px;\\r\\n    margin-top: auto;\\r\\n    margin-bottom: auto;\\r\\n    padding-bottom: 15px;\\r\\n}\\r\\n\\r\\n#secondary:hover {\\r\\n  background-color: gray;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGlicmFyeS9saWJyYXJ5LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFlO0VBQ2Ysa0JBQWtCO0FBQ3BCOztBQUVBO0lBQ0ksc0NBQW1EO0lBQ25ELHNCQUFzQjtBQUMxQjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsbUJBQW1CO0lBQ25CLG9CQUFvQjtBQUN4Qjs7QUFFQTtFQUNFLHNCQUFzQjtBQUN4QiIsImZpbGUiOiJzcmMvYXBwL2xpYnJhcnkvbGlicmFyeS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1mb3JtLWZpZWxkIHtcclxuICBkaXNwbGF5OiBpbmxpbmU7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxMnB4O1xyXG59XHJcblxyXG4uaGVhZGVyLWltYWdlIHtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vLi4vYXNzZXRzL25vLWF2YXRhci5wbmcnKTtcclxuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbn1cclxuXHJcbi5tYXQtY2FyZC10aXRsZSwgLm1hdC1jYXJkLXN1YnRpdGxlIHtcclxuICBvdmVyZmxvdy13cmFwOiBicmVhay13b3JkO1xyXG59XHJcblxyXG4jc2Vjb25kYXJ5e1xyXG4gICAgbWF4LXdpZHRoOiAzMjVweDtcclxuICAgIG1hcmdpbi10b3A6IGF1dG87XHJcbiAgICBtYXJnaW4tYm90dG9tOiBhdXRvO1xyXG4gICAgcGFkZGluZy1ib3R0b206IDE1cHg7XHJcbn1cclxuXHJcbiNzZWNvbmRhcnk6aG92ZXIge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGdyYXk7XHJcbn0iXX0= */\"","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { AuthService } from '../data-model-manager.service';\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { Router } from '@angular/router';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { SettingsDialog } from './../canvas/canvas.component';\r\nimport { Validators } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { NgForm } from '@angular/forms';\r\nimport { stringToKeyValue } from '@angular/flex-layout/extended/typings/style/style-transforms';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ReqresCanvas, ReqresAccount } from '../data-model-classes';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\n\r\nexport interface DialogData {\r\n    canvasName: string;\r\n    canvasParticipants: string[];\r\n}\r\n\r\nexport interface ParticipantElement {\r\n    userName: string;\r\n    email: string;\r\n    permissions: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'app-library',\r\n    templateUrl: './library.component.html',\r\n    styleUrls: ['./library.component.css']\r\n})\r\n\r\nexport class LibraryComponent implements OnInit {\r\n\r\n    // Properties\r\n\r\n    private account: ReqresAccount;\r\n    private accounts: ReqresAccount[];\r\n    private canvas: ReqresCanvas;\r\n    private canvases: ReqresCanvas[];\r\n    private library: String;\r\n    private options: string[];\r\n    private selected: any;\r\n    private participants: ReqresAccount[];\r\n    private friends: ReqresAccount[];\r\n    private displayedColumns: string[] = ['name', 'email', 'permissions', 'options'];\r\n    private dataSource;\r\n    private mail: mailCredentials;\r\n\r\n    myControl = new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(6),\r\n        Validators.email\r\n    ]);\r\n    filteredOptions: Observable<string[]>;\r\n\r\n    // Initialization\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private authService: AuthService,\r\n        private jwtHelper: JwtHelperService,\r\n        private route: ActivatedRoute,\r\n        public dialog: MatDialog,\r\n        private snackBar: MatSnackBar\r\n    ) { \r\n        let token = this.authService.getToken();\r\n        if (token)\r\n            try {\r\n                if (!this.jwtHelper.isTokenExpired(token))\r\n                    this.account = this.jwtHelper.decodeToken(token);\r\n                else throw \"Login token has expired\";\r\n                this.library = this.route.snapshot.params['email'];\r\n                if (!this.library)\r\n                    this.router.navigate(['/library/view', this.account.email]);\r\n            } catch (err) {\r\n                console.log(err);\r\n                this.router.navigate(['/login']);\r\n            }\r\n    }\r\n\r\n    ngOnInit() {\r\n        let token = this.authService.getToken();\r\n        try {\r\n            if (token)\r\n                this.canvases = [];\r\n            else { this.router.navigate(['/login']); }\r\n            this.canvas = new ReqresCanvas();\r\n            this.canvas.participants = [{ _id: \"\", permissions: \"\" }];\r\n            this.account = this.jwtHelper.decodeToken(token);\r\n            this.authService.reqresAccountGetById(this.account._id).subscribe((data1) => {\r\n                this.account = data1;\r\n                this.authService.reqresCanvasGetByParticipantId(this.account._id).subscribe((data2) => {\r\n                    this.canvases = data2;\r\n                    this.authService.reqresAccountGetAll().subscribe((data2) => {\r\n                        this.accounts = data2;\r\n                        if (this.library != this.account.email)\r\n                            this.process(this.library);\r\n                    });\r\n                });   \r\n\r\n                this.authService.reqresAccountGetByFriendId(this.account._id).subscribe((data2) => {\r\n                    this.friends = data2;\r\n                });\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n            this.router.navigate(['/login']);\r\n        }\r\n        \r\n\r\n        this.mail = new mailCredentials();\r\n        this.mail.id = '';\r\n        this.mail.subject = '';\r\n        this.mail.content = '';\r\n        this.filteredOptions = this.myControl.valueChanges.pipe(\r\n            startWith(''),\r\n            map(value => this._filter(value))\r\n        );\r\n    }\r\n\r\n    private _filter(value: string): string[] {\r\n        const filterValue = value.toLowerCase();\r\n        return this.options.filter(option => option.toLowerCase().indexOf(filterValue) === 0);\r\n    }\r\n\r\n    process(email: String) {\r\n        if (!this.accounts) {\r\n            this.snackBar.open(\"Unknown error\", \"Oops\", {\r\n                duration: 2500,\r\n            });\r\n            return;\r\n        }\r\n        this.accounts.forEach(account => {\r\n            if (account.email == email) {\r\n                let found = false;\r\n                this.account.friends.forEach(friend => {\r\n                    if (friend == account._id)\r\n                        found = true;\r\n                    // TODO: Add check to see if there's actually a request, or if we're being spoofed\r\n                })\r\n                this.authService.reqresAccountGetById(account._id).subscribe((data1) => {\r\n                    account = data1;\r\n                    if (this.router.url == `/accept/${this.library}` && !found) {\r\n                        this.account.friends.push(account._id);\r\n                        let response = this.authService.updateAccount(this.account).subscribe((data2) => {\r\n                            account.friends.push(this.account._id);\r\n                            response = this.authService.updateAccount(account).subscribe((data3) => {\r\n                                console.log(6)\r\n                                this.snackBar.open(`You and ${account.userName} are now friends!`, \"Thanks\", {\r\n                                    duration: 4000,\r\n                                });\r\n                                this.router.navigate(['/library/view', account.email]);\r\n                            });\r\n                        });\r\n                    } else if (this.router.url == `/library/sort/${this.library}`) {\r\n                        for (let index = 0; index < this.canvases.length; index++) {\r\n                            if (this.canvases[index].owner != account._id) {\r\n                                this.canvases.splice(index, 1);\r\n                                index--;\r\n                            }\r\n                        }\r\n                    } else if (this.router.url == `/accept/${this.library}`) {\r\n                        this.snackBar.open(account.userName + \" is already your friend!\", \"Oops\", {\r\n                            duration: 4000,\r\n                        });\r\n                        this.router.navigate(['/library']);\r\n                    } else\r\n                        this.router.navigate(['/library']);\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    addFriend() {\r\n        this.options = [];\r\n        this.accounts.forEach(account => {\r\n            this.options.push(account.email);\r\n        });\r\n        const dialogRef = this.dialog.open(AddFriendDialog, {\r\n            height: '250px',\r\n            width: '400px',\r\n            data: {\r\n                account: this.account,\r\n                accounts: this.accounts,\r\n                myControl: this.myControl,\r\n                filteredOptions: this.filteredOptions\r\n            }\r\n        });\r\n        dialogRef.afterClosed().subscribe(data => {\r\n            if (data) {\r\n                if (data.myControl)\r\n                    if (data.myControl.value != this.account.email) {\r\n                        this.accounts.forEach(account => {\r\n                            if (account.email == data.myControl.value) {\r\n                                let found = false;\r\n                                this.account.friends.forEach(friend => {\r\n                                    if (friend == account._id)\r\n                                        found = true;\r\n                                });\r\n                                if (!found) {\r\n                                    let response = this.authService.updateAccount(this.account).subscribe((data1) => {\r\n\r\n                                        this.authService.pushNotification(account._id, \"Friend Request\", `${this.account.email} has requested to add you as their friend.`, `/accept/${this.account.email}`, this.account.email).subscribe((data) => {\r\n                                            console.info(data)\r\n                                        });\r\n    \r\n                                        this.mail.id = account._id;\r\n                                        this.mail.subject = 'You have a friend request!';\r\n                                        this.mail.content = `\r\n                                        <p>Hey there, just letting you know that ${this.account.email} has requested to add you as a friend.<p>\r\n                                        <p><a href=\"https://inkshare-frontend.herokuapp.com/library/${data.myControl.value}\">Add them back!</a></p>\r\n                                        `;\r\n                                        this.authService.sendMail(this.mail).subscribe((data2) => {\r\n                                            this.snackBar.open(account.email + \" has been added as a friend, and an email has been sent!\", \"Thanks\", {\r\n                                                duration: 4000,\r\n                                            });\r\n                                        });\r\n                                    });\r\n                                    this.authService.reqresAccountGetById(this.account._id).subscribe((data1) => {\r\n                                        this.account = data1;\r\n                                    });\r\n                                }\r\n                                else {\r\n                                    this.snackBar.open(\"Sorry, you already appear to be friends!\", \"Oops\", {\r\n                                        duration: 4200,\r\n                                    });\r\n                                    this.addFriend();\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                    else if (data.myControl.value == this.account.email) {\r\n                        this.snackBar.open(\"You can't add yourself as a friend!\", \"Oops\", {\r\n                            duration: 5000,\r\n                        });\r\n                        this.addFriend();\r\n                    } else {\r\n                        this.snackBar.open(\"Sorry, something went wrong and we couldn't add your friend.\", \"Oops\", {\r\n                            duration: 5000,\r\n                        });\r\n                        this.addFriend();\r\n                    }\r\n                else {\r\n                    this.snackBar.open(\"Sorry, something went wrong and we couldn't add your friend.\", \"Oops\", {\r\n                        duration: 5000,\r\n                    });\r\n                    this.addFriend();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /*friendMail(email: string, content: string) {\r\n        this.mail.email = email;\r\n        this.mail.subject = \"You have a new friend!\";\r\n        this.mail.content = \"<p> Hey there, just letting you know that \" + content + \" has added you as a friend <p>\"\r\n        this.authService.sendMail(this.mail).subscribe(data => {\r\n            if (data) {\r\n\r\n            }\r\n        })\r\n    }*/\r\n\r\n    setSelected(canvas) {\r\n        this.selected = canvas;\r\n    }\r\n\r\n    newCanvas() {\r\n        let typesArray = [\r\n            { value: 'Private' },\r\n            { value: 'Public' },\r\n            { value: 'Locked' }\r\n        ];\r\n        if (this.account.isAdmin)\r\n            typesArray.push({ value: 'Featured' });\r\n        const dialogRef = this.dialog.open(CreateDialog, {\r\n            height: '300px',\r\n            width: '400px',\r\n            data: {\r\n                type: \"Private\",\r\n                canvasName: this.account.userName + \"'s Canvas\",\r\n                canvasParticipants: [],\r\n                canvasDimensions: {\r\n                    width: 700,\r\n                    height: 500\r\n                },\r\n                types: typesArray\r\n            }\r\n        });\r\n        dialogRef.afterClosed().subscribe(data => {\r\n            console.log(data)\r\n            if (data) {\r\n                if (data.canvasName) {\r\n                    this.canvas.name = data.canvasName;\r\n                    this.canvas.dimensions = data.canvasDimensions;\r\n                    this.canvas.type = data.type;\r\n                    this.canvas.participants[0] = { _id: this.account._id, permissions: \"Owner\" };\r\n                    for (let index = 0; index < data.canvasParticipants.length; index = index + 1)\r\n                        this.canvas.participants.push(data.canvasParticipants[index]);\r\n                    let dupeFlag = false;\r\n                    this.canvas.owner = this.account._id;\r\n                    this.canvases.forEach(canvas => {\r\n                        if (canvas.owner == this.account._id && canvas.name == this.canvas.name) {\r\n                            dupeFlag = true;\r\n                            return;\r\n                        }\r\n                    });\r\n                    if (dupeFlag) {\r\n                        this.snackBar.open(\"Sorry, \" + this.canvas.name + \" already exists on your account!\", \"Oops\", {\r\n                            duration: 3200,\r\n                        });\r\n                        this.newCanvas();\r\n                        return;\r\n                    } else {\r\n                        let response = this.authService.createCanvas(this.canvas).subscribe((data1) => {\r\n                            this.authService.reqresCanvasGetByParticipantId(this.account._id).subscribe((data2) => {\r\n                                this.canvases = data2;\r\n                                this.snackBar.open(\"Success, \" + this.canvas.name + \" was created!\", \"Thanks\", {\r\n                                    duration: 3200,\r\n                                });\r\n                            });\r\n                        });\r\n                    }\r\n                } else\r\n                    this.canvas.name = undefined;\r\n            } else\r\n                this.canvas.name = undefined;\r\n        });\r\n    }\r\n\r\n    applyFilter(filterValue: string) {\r\n        this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    }\r\n\r\n    test() {\r\n        this.authService.pushNotification(this.account._id, \"Friend Request\", `CrazyContraptionMC@gmail.com has requested to add you as their friend.`, `/accept/CrazyContraptionMC@gmail.com`, \"CrazyContraptionMC@gmail.com\").subscribe((data) => {\r\n            console.info(data)\r\n        });\r\n    }\r\n\r\n    editCanvas(canvas) {\r\n        localStorage.setItem('canvas', canvas._id); // insecure?\r\n        localStorage.setItem('width', canvas.dimensions.width);\r\n        localStorage.setItem('height', canvas.dimensions.height);\r\n        this.authService.reqresAccountGetById(canvas.owner).subscribe((data) => {\r\n            this.router.navigate([`/edit/${data.email}/${canvas.name}`]);\r\n        });\r\n    }\r\n\r\n    shareCanvas(canvas) {\r\n        this.options = [];\r\n        this.friends.forEach(friend => {\r\n            this.options.push(friend.email);\r\n        });\r\n        this.dataSource = new MatTableDataSource(this.friends)\r\n        const dialogRef = this.dialog.open(AddParticipantDialog, {\r\n            height: '300px',\r\n            width: '400px',\r\n            data: {\r\n                account: this.account,\r\n                friends: this.dataSource,\r\n                myControl: this.myControl,\r\n                permissions: [\r\n                    { value: 'Collaborator' },\r\n                    { value: 'Moderator' },\r\n                    { value: 'Visitor' }\r\n                ],\r\n                permission: \"\",\r\n                filteredOptions: this.filteredOptions\r\n            }\r\n        });\r\n        dialogRef.afterClosed().subscribe(data => {\r\n            if (data)\r\n                if (data.myControl)\r\n                    if (data.myControl.value) {\r\n                        let dupeFlag = true;\r\n                        if (data.myControl.value == this.account.email) {\r\n                            this.snackBar.open(\"Sorry, You can't add yourself to a canvas you're already in.\", \"Oops\", {\r\n                                duration: 4500,\r\n                            });\r\n                            this.shareCanvas(canvas)\r\n                            return;\r\n                        } else {\r\n                            this.accounts.forEach(account => {\r\n                                if (account.email == data.myControl.value) {\r\n                                    dupeFlag = false;\r\n                                    canvas.participants.forEach(participant => {\r\n                                        if (account._id == participant._id) {\r\n                                            dupeFlag = true;\r\n                                            this.snackBar.open(\"Sorry, That user is already a participant.\", \"Oops\", {\r\n                                                duration: 3500\r\n                                            });\r\n                                            return;\r\n                                        }\r\n                                    });\r\n                                    if (!dupeFlag) {\r\n                                        // TODO: Allow for different perms from dropdown\r\n                                        canvas.participants.push({ _id: account._id, permissions: \"Collaborator\" })\r\n                                        let response = this.authService.updateCanvas(canvas).subscribe((data1) => {\r\n                                            this.mail.id = account._id;\r\n                                            this.mail.subject = 'A canvas was shared with you.';\r\n                                            this.mail.content = `\r\n                                            <p>Hey there, just letting you know that ${this.account.userName} has invited you to participate in their ${this.canvas.name} canvas.<p>\r\n                                            <p><a href=\"https://inkshare-frontend.herokuapp.com/library/${data.myControl.value}\">View it here!</a></p>\r\n                                            `;\r\n                                            this.authService.sendMail(this.mail).subscribe((data2) => {\r\n                                                this.snackBar.open(\"Success, \" + data.myControl.value + \" was invited to be a \" + \"participant\" + \"!\", \"Thanks\", {\r\n                                                    duration: 3200\r\n                                                });\r\n                                            });\r\n                                        });\r\n                                    } else return;\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n        });\r\n    }\r\n\r\n    canvasSettings(canvas) {\r\n        if (canvas.owner != this.account._id) {\r\n            this.snackBar.open(\"Sorry, you can't modify what you don't own this! Moderators must join the canvas and edit settings directly.\", \"Oops\", {\r\n                duration: 6000\r\n            });\r\n            return;\r\n        }\r\n        let typesArray = [\r\n            { value: 'Private' },\r\n            { value: 'Public' },\r\n            { value: 'Locked' }\r\n        ];\r\n        if (this.account.isAdmin)\r\n            typesArray.push({ value: 'Featured' });\r\n        this.authService.reqresAccountGetByCanvasId(canvas._id).subscribe((data3) => {\r\n            this.participants = data3;\r\n            this.dataSource = new MatTableDataSource(this.participants);\r\n            const dialogRef = this.dialog.open(SettingsDialog, {\r\n                height: '550px',\r\n                width: '900px',\r\n                data: {\r\n                    displayedColumns: this.displayedColumns,\r\n                    canvas: canvas,\r\n                    type: this.canvas.type,\r\n                    types: typesArray,\r\n                    participants: this.participants,\r\n                    dataSource: this.dataSource\r\n                },\r\n            });\r\n            dialogRef.afterClosed().subscribe(data => {\r\n                if (data) {\r\n                    if (data.participants) {\r\n                        let dupeFlag = false;\r\n                        this.canvases.forEach(data1 => {\r\n                            if (data1.owner == this.account._id && data1.name == data.canvas.name)\r\n                                if (data1._id != this.canvas._id) {\r\n                                    dupeFlag = true;\r\n                                    return;\r\n                                }\r\n                        });\r\n                        if (dupeFlag) {\r\n                            this.authService.reqresCanvasGetById(this.canvas._id).subscribe((data1) => {\r\n                                this.canvas = data1;\r\n                                this.snackBar.open(\"Sorry, \" + data.canvas.name + \" already exists on your account!\", \"Oops\", {\r\n                                    duration: 3200\r\n                                });\r\n                            });\r\n                            return;\r\n                        } else {\r\n                            if (data.canvas.name)\r\n                                this.canvas.name = data.canvas.name;\r\n                            if (data.participants[0]._id == data.canvas.owner)\r\n                                this.canvas.participants = data.participants\r\n                            let response = this.authService.updateCanvas(this.canvas).subscribe((data1) => {\r\n                                this.snackBar.open(\"Success, canvas settings saved!\", \"Thanks\", {\r\n                                    duration: 4000\r\n                                });\r\n                            });\r\n                        }\r\n                    } else\r\n                        location.reload();\r\n                } else\r\n                    location.reload();\r\n            });\r\n        });\r\n    }\r\n\r\n    deleteCanvas(canvas) {\r\n        const dialogRef = this.dialog.open(DeleteDialog, {\r\n            height: '190px',\r\n            width: '400px',\r\n        });\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            if (result) {\r\n                this.authService.deleteCanvas(canvas).subscribe((data1) => {\r\n                    this.authService.reqresCanvasGetByParticipantId(this.account._id).subscribe((data2) => {\r\n                        this.canvases = data2;\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    viewLibrary(friend) {\r\n        this.router.navigate(['/library/sort', friend.email]);\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'create-canvas.dialog',\r\n    templateUrl: 'create-canvas.dialog.html',\r\n})\r\nexport class CreateDialog {\r\n\r\n    constructor(\r\n        public dialogRef: MatDialogRef<CreateDialog>,\r\n        @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\r\n\r\n    onNoClick(): void {\r\n        this.dialogRef.close();\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'delete-canvas.dialog',\r\n    templateUrl: 'delete-canvas.dialog.html',\r\n})\r\nexport class DeleteDialog {\r\n\r\n    constructor(\r\n        public dialogRef: MatDialogRef<DeleteDialog>,\r\n        @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\r\n\r\n    onNoClick(): void {\r\n        this.dialogRef.close();\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'add-friend.dialog',\r\n    templateUrl: 'add-friend.dialog.html',\r\n})\r\nexport class AddFriendDialog {\r\n\r\n    constructor(\r\n        public dialogRef: MatDialogRef<AddFriendDialog>,\r\n        @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\r\n\r\n    onNoClick(): void {\r\n        this.dialogRef.close();\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'add-participant.dialog',\r\n    templateUrl: 'add-participant.dialog.html',\r\n})\r\nexport class AddParticipantDialog {\r\n\r\n    constructor(\r\n        public dialogRef: MatDialogRef<AddParticipantDialog>,\r\n        @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\r\n\r\n    onNoClick(): void {\r\n        this.dialogRef.close();\r\n    }\r\n}\r\n\r\nexport class mailCredentials {\r\n    id: string;\r\n    subject: string;\r\n    content: string;\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, Output } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../data-model-manager.service';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ReqresCanvas, ReqresAccount } from '../data-model-classes';\r\nimport { NgLocalization } from '@angular/common';\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent {\r\n\r\n    // Properties\r\n    private account: ReqresAccount;\r\n    private credentials: LoginCredentials;\r\n    private loginError: string;\r\n\r\n    // Initialization\r\n    \r\n    constructor(\r\n        private router: Router,\r\n        private authService: AuthService,\r\n        private jwtHelper: JwtHelperService\r\n    ) {\r\n        if (localStorage.getItem('access_token'))\r\n            try {\r\n                this.account = new ReqresAccount();\r\n                this.account = this.jwtHelper.decodeToken(localStorage.getItem('access_token'));\r\n            } catch (err) { console.log(err); }\r\n        this.credentials = new LoginCredentials();\r\n        this.credentials.email = '';\r\n        this.credentials.password = '';\r\n        this.loginError = '';\r\n    }\r\n\r\n    // Methods\r\n    onSubmit(): void {\r\n        localStorage.clear();\r\n        this.authService.login(this.credentials).subscribe(data => {\r\n            if (data) {\r\n                localStorage.setItem('access_token', data.token);\r\n                this.account = this.jwtHelper.decodeToken(data.token);\r\n                document.getElementById('theme').classList.remove(\"dark-pink-theme\");\r\n                document.getElementById('theme').classList.add(this.account.theme.replace(/\\s+/g, '-').toLowerCase() + \"-theme\");\r\n                this.router.navigate(['/library']);\r\n            } else\r\n                this.loginError = localStorage.getItem('error');\r\n        });\r\n    }\r\n\r\n    reset(): void {\r\n        this.router.navigate(['/forgotpass']);\r\n    }\r\n\r\n    logout(): void {\r\n        document.getElementById('theme').classList.remove(this.account.theme.replace(/\\s+/g, '-').toLowerCase() + \"-theme\");\r\n        localStorage.clear();\r\n        document.getElementById('theme').classList.add(\"dark-pink-theme\");\r\n        this.router.navigate(['/home']);\r\n    }\r\n}\r\n\r\n// Email and password\r\nexport class LoginCredentials {\r\n    email: string;\r\n    password: string;\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc2V0L3Jlc2V0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component} from '@angular/core';\r\nimport { AuthService } from '../data-model-manager.service';\r\nimport { Router } from '@angular/router';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-reset',\r\n  templateUrl: './reset.component.html',\r\n  styleUrls: ['./reset.component.css']\r\n})\r\nexport class ResetComponent {\r\n\r\n  // Properties\r\n  \r\n  credentials: ResetCredentials;\r\n  resetError: string;\r\n\r\n  // Initialization\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private a: AuthService,\r\n    private jwtHelper: JwtHelperService\r\n  ) { \r\n    this.credentials = new ResetCredentials();\r\n    this.credentials.email = '';\r\n    this.credentials.password = '';\r\n    this.credentials.newPassword = '';\r\n    this.credentials.newPasswordConfirm = '';\r\n    this.resetError = '';\r\n  }\r\n\r\n  // Methods\r\n  onSubmit(): void {\r\n    if(this.credentials.newPassword != this.credentials.newPasswordConfirm)\r\n      this.resetError = \"Error - New Passwords do not match\";\r\n    else {\r\n      this.a.changePassword(this.credentials).subscribe(data => {\r\n        if (data)\r\n          this.router.navigate(['/home']);\r\n        else\r\n          this.resetError = localStorage.getItem('error');\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport class ResetCredentials {\r\n  email: string;\r\n  password: string;\r\n  newPassword: string;\r\n  newPasswordConfirm: string;\r\n}","export default \".mat-form-field {\\r\\n  display: inline;\\r\\n  margin-right: 12px;\\r\\n}\\r\\n.radio-group {\\r\\n  display: -webkit-box;\\r\\n  display: flex;\\r\\n  -webkit-box-orient: vertical;\\r\\n  -webkit-box-direction: normal;\\r\\n          flex-direction: column;\\r\\n  margin: 15px 0;\\r\\n}\\r\\n.radio-button {\\r\\n  margin: 5px;\\r\\n}\\r\\nh4, h3 {\\r\\n  overflow-wrap:break-word;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci1zZXR0aW5ncy91c2VyLXNldHRpbmdzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFlO0VBQ2Ysa0JBQWtCO0FBQ3BCO0FBQ0E7RUFDRSxvQkFBYTtFQUFiLGFBQWE7RUFDYiw0QkFBc0I7RUFBdEIsNkJBQXNCO1VBQXRCLHNCQUFzQjtFQUN0QixjQUFjO0FBQ2hCO0FBQ0E7RUFDRSxXQUFXO0FBQ2I7QUFDQTtFQUNFLHdCQUF3QjtBQUMxQiIsImZpbGUiOiJzcmMvYXBwL3VzZXItc2V0dGluZ3MvdXNlci1zZXR0aW5ncy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1mb3JtLWZpZWxkIHtcclxuICBkaXNwbGF5OiBpbmxpbmU7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxMnB4O1xyXG59XHJcbi5yYWRpby1ncm91cCB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIG1hcmdpbjogMTVweCAwO1xyXG59XHJcbi5yYWRpby1idXR0b24ge1xyXG4gIG1hcmdpbjogNXB4O1xyXG59XHJcbmg0LCBoMyB7XHJcbiAgb3ZlcmZsb3ctd3JhcDpicmVhay13b3JkO1xyXG59Il19 */\"","import { Component, Inject, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../data-model-manager.service';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ReqresAccount } from '../data-model-classes';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\nexport interface DialogData {\r\n    password: string\r\n}\r\n\r\n@Component({\r\n    selector: 'app-user-settings',\r\n    templateUrl: './user-settings.component.html',\r\n    styleUrls: ['./user-settings.component.css']\r\n})\r\n\r\nexport class UserSettingsComponent implements OnDestroy {\r\n\r\n    // Properties\r\n\r\n    private account: ReqresAccount;\r\n    private newAccount: ReqresAccount;\r\n    private friends: ReqresAccount[];\r\n    private panelOpenState = false;\r\n    private loginError: string;\r\n    private displayedColumns: string[] = ['userName', 'email', 'numCanvases', 'options'];\r\n    private themes: string[] = [\"Light Blue\", \"Light Orange\", \"Dark Pink\", \"Dark Purple\", \"Dark Green\"];\r\n    private theme: string;\r\n    private tempTheme: string;\r\n    private dataSource;\r\n    private deleteError: string;\r\n\r\n    // Initialization\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private authService: AuthService,\r\n        private jwtHelper: JwtHelperService,\r\n        public dialog: MatDialog,\r\n        private snackBar: MatSnackBar\r\n    ) {\r\n        if (localStorage.getItem('access_token').length > 50)\r\n            try {\r\n                this.account = this.jwtHelper.decodeToken(localStorage.getItem('access_token'));\r\n                this.theme = this.account.theme;\r\n                this.newAccount = this.account;\r\n                this.newAccount.password = \"\";\r\n                this.authService.reqresAccountGetById(this.account._id).subscribe((data1) => {\r\n                    this.account = data1;\r\n                    this.newAccount.friends = this.account.friends;\r\n                    this.authService.reqresAccountGetByFriendId(this.account._id).subscribe((data2) => {\r\n                        this.friends = data2;\r\n                        this.dataSource = new MatTableDataSource(this.friends)\r\n                    });\r\n                });\r\n            } catch (err) {\r\n                console.error(err);\r\n                this.router.navigate(['/login']); \r\n            }\r\n        else { this.router.navigate(['/login']); }\r\n        this.deleteError = '';\r\n    }\r\n\r\n    // Methods\r\n    applyFilter(filterValue: string) {\r\n        this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    }\r\n\r\n    removeFriend(friend) {\r\n        for (let index = 0; index < this.newAccount.friends.length; index++) {\r\n            if (friend._id == this.newAccount.friends[index]) {\r\n                this.newAccount.friends.splice(index, 1);\r\n                this.friends[index].marked = true;\r\n                this.dataSource = new MatTableDataSource(this.friends)\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    changeTheme(theme: string) {\r\n        if (theme == \"Light Blue\") {\r\n            //return \"candy-theme\";\r\n            this.tempTheme = this.account.theme.replace(/\\s+/g, '-').toLowerCase();\r\n            this.tempTheme += \"-theme\";\r\n            document.getElementById('theme').classList.remove(this.tempTheme);\r\n            document.getElementById('theme').classList.add(\"light-blue-theme\");\r\n            this.account.theme = \"Light Blue\";\r\n        }\r\n        else if(theme == \"Light Orange\") {\r\n            //return \"purple-theme\";\r\n            this.tempTheme = this.account.theme.replace(/\\s+/g, '-').toLowerCase();\r\n            this.tempTheme += \"-theme\";\r\n            document.getElementById('theme').classList.remove(this.tempTheme);\r\n            document.getElementById('theme').classList.add(\"light-orange-theme\");\r\n            this.account.theme = \"Light Orange\";\r\n        }\r\n        else if (theme == \"Dark Pink\") {\r\n            //return \"dark-pink-theme\";\r\n            this.tempTheme = this.account.theme.replace(/\\s+/g, '-').toLowerCase();\r\n            this.tempTheme += \"-theme\";\r\n            document.getElementById('theme').classList.remove(this.tempTheme);\r\n            document.getElementById('theme').classList.add(\"dark-pink-theme\");\r\n            this.account.theme = \"Dark Pink\";\r\n        }\r\n        else if (theme == \"Dark Purple\") {\r\n            //return \"dark-purple-theme\";\r\n            this.tempTheme = this.account.theme.replace(/\\s+/g, '-').toLowerCase();\r\n            this.tempTheme += \"-theme\";\r\n            document.getElementById('theme').classList.remove(this.tempTheme);\r\n            document.getElementById('theme').classList.add(\"dark-purple-theme\");\r\n            this.account.theme = \"Dark Purple\";\r\n        }\r\n        else if (theme == \"Dark Green\") {\r\n            //return \"dark-purple-theme\";\r\n            this.tempTheme = this.account.theme.replace(/\\s+/g, '-').toLowerCase();\r\n            this.tempTheme += \"-theme\";\r\n            document.getElementById('theme').classList.remove(this.tempTheme);\r\n            document.getElementById('theme').classList.add(\"dark-green-theme\");\r\n            this.account.theme = \"Dark Green\";\r\n        }\r\n    }\r\n\r\n    delete(): void {\r\n        const dialogRef = this.dialog.open(DeleteAccountDialog, {\r\n            height: '250px',\r\n            width: '400px',\r\n            data: { input: this.newAccount.password }\r\n        });\r\n        dialogRef.afterClosed().subscribe(password => {\r\n            if (password)\r\n                this.newAccount.password = password;\r\n            else\r\n                this.newAccount.password = undefined;\r\n            this.loginError = undefined;\r\n            if (this.newAccount.password)\r\n                this.authService.deleteAccount(this.newAccount).subscribe(data => {\r\n                    if (data) {\r\n                        localStorage.clear();\r\n                        this.account = undefined;\r\n                        this.router.navigate(['/home']).then(() => {\r\n                            this.snackBar.open(\"Your account has been removed\", \"Thanks\", {\r\n                                duration: 4000,\r\n                            }); });\r\n                    } else {\r\n                        this.loginError = localStorage.getItem('error');\r\n                    }\r\n                });\r\n            else {\r\n                this.loginError = \"You must enter your password to delete your account\";\r\n                this.newAccount.password = \"\";\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.account)\r\n            this.changeTheme(this.theme);\r\n    }\r\n\r\n    onSubmit(): void {\r\n        const dialogRef = this.dialog.open(PasswordDialog, {\r\n            height: '250px',\r\n            width: '400px',\r\n            data: { input: this.newAccount.password }\r\n        });\r\n        dialogRef.afterClosed().subscribe(password => {\r\n            this.applyFilter(\"\")\r\n            if (password)\r\n                this.newAccount.password = password;\r\n            else\r\n                this.newAccount.password = undefined;\r\n            this.loginError = undefined;\r\n            this.theme = this.newAccount.theme;\r\n            if (this.newAccount.password)\r\n                this.authService.updateAccount(this.newAccount).subscribe(data1 => {\r\n                    if (data1) {\r\n                        localStorage.setItem('access_token', data1.token);\r\n                        this.account = this.jwtHelper.decodeToken(data1.token);\r\n                        this.snackBar.open(\"Settings updated successfully!\", \"Thanks\", {\r\n                            duration: 3000,\r\n                        });\r\n                        this.authService.reqresAccountGetByFriendId(this.account._id).subscribe((data2) => {\r\n                            this.friends = data2;\r\n                            this.dataSource = new MatTableDataSource(this.friends)\r\n                        });\r\n                    } else {\r\n                        this.loginError = localStorage.getItem('error');\r\n                        this.snackBar.open(\"Settings could not be updated:\\n\" + this.loginError, \"Oops\", {\r\n                            duration: 6000,\r\n                        });\r\n                    }\r\n                });\r\n            else {\r\n                this.loginError = \"You must enter your password to save your settings\";\r\n                this.newAccount.password = \"\";\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// Email and password\r\nexport class LoginCredentials {\r\n    email: string;\r\n    userName: string;\r\n    password: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'account-password.dialog',\r\n    templateUrl: 'account-password.dialog.html',\r\n})\r\nexport class PasswordDialog {\r\n\r\n    constructor(\r\n        public dialogRef: MatDialogRef<PasswordDialog>,\r\n        @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\r\n\r\n    onNoClick(): void {\r\n        this.dialogRef.close();\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'account-delete.dialog',\r\n    templateUrl: 'account-delete.dialog.html',\r\n})\r\nexport class DeleteAccountDialog {\r\n\r\n    constructor(\r\n        public dialogRef: MatDialogRef<DeleteAccountDialog>,\r\n        @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\r\n\r\n    onNoClick(): void {\r\n        this.dialogRef.close();\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport * as io from 'socket.io-client';\r\nimport { Observable } from 'rxjs';\r\nimport { returnData } from './canvas/canvas.component'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WebSocketService {\r\n\r\n  //node js / socket io server url to connect to\r\n  //readonly url: string = \"http://localhost:8000/\" //https://socketio-webservice.herokuapp.com/\r\n  readonly url: string = 'https://socketio-webservice.herokuapp.com/'\r\n\r\n  constructor() {}\r\n\r\n  socket: any;\r\n\r\n  connect(){ this.socket = io(`${this.url}`); }\r\n\r\n  setRoom(data: string) { this.socket.emit('setRoom', data); }\r\n\r\n  leaveRoom(data: string) { this.socket.emit('leaveRoom', data); }\r\n\r\n  listen(eventName: string) {\r\n    return new Observable((user) => {\r\n      this.socket.on(eventName, (data) => {\r\n        user.next(data);\r\n      })\r\n    });\r\n  }\r\n\r\n  emit(eventName: string, data: any) { this.socket.emit(eventName, data); }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","/* (ignored) */"],"sourceRoot":"webpack:///","file":"main-es5.js"}