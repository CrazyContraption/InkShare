{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/about/about.component.html","./src/app/account-register/account-register.component.html","./src/app/app.component.html","./src/app/canvas/canvas-settings.dialog.html","./src/app/canvas/canvas.component.html","./src/app/forgot-password/forgot-password.component.html","./src/app/header/header.component.html","./src/app/home/home.component.html","./src/app/invite/invite.component.html","./src/app/library/add-friend.dialog.html","./src/app/library/add-participant.dialog.html","./src/app/library/create-canvas.dialog.html","./src/app/library/delete-canvas.dialog.html","./src/app/library/library.component.html","./src/app/login/login.component.html","./src/app/reset/reset.component.html","./src/app/user-settings/account-delete.dialog.html","./src/app/user-settings/account-password.dialog.html","./src/app/user-settings/user-settings.component.html","./node_modules/tslib/tslib.es6.js","./src/app/about/about.component.css","./src/app/about/about.component.ts","./src/app/account-register/account-register.component.css","./src/app/account-register/account-register.component.ts","./src/app/angular-materials.ts","./src/app/animations.ts","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/canvas/canvas.component.css","./src/app/canvas/canvas.component.ts","./src/app/data-model-classes.ts","./src/app/data-model-manager.service.ts","./src/app/forgot-password/forgot-password.component.css","./src/app/forgot-password/forgot-password.component.ts","./src/app/guard-auth.service.ts","./src/app/header/header.component.css","./src/app/header/header.component.ts","./src/app/home/home.component.css","./src/app/home/home.component.ts","./src/app/intercept-token.service.ts","./src/app/invite/invite.component.css","./src/app/invite/invite.component.ts","./src/app/library/library.component.css","./src/app/library/library.component.ts","./src/app/login/login.component.css","./src/app/login/login.component.ts","./src/app/reset/reset.component.css","./src/app/reset/reset.component.ts","./src/app/user-settings/user-settings.component.css","./src/app/user-settings/user-settings.component.ts","./src/app/web-socket.service.ts","./src/environments/environment.ts","./src/main.ts","ws (ignored)"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<div class=\\\"row\\\">\\r\\n    <div class='col-md-8 col-sm-12'>\\r\\n        <mat-card id=\\\"info\\\" class=\\\"mat-elevation-z8\\\">\\r\\n            <h2>BTS 630 - Capstone Major Project</h2>\\r\\n        </mat-card>\\r\\n        <br>\\r\\n        <mat-card id=\\\"border\\\" class=\\\"mat-elevation-z8\\\">\\r\\n            <h3>InkShare</h3>\\r\\n            <p>Welcome, and thank you for participating in using InkShare!</p>\\r\\n            <p>InkShare allows users to collaborate on drawing projects from anywhere via Socket.io and P5 integrations\\r\\n                with Angular.</p>\\r\\n            <p>InkShare uses five fundamental but seperate parts divided over three servers to operate.</p>\\r\\n            <p>Below you can find the three fundamental parts and how they losely operate.</p>\\r\\n        </mat-card>\\r\\n        <br>\\r\\n        <mat-card id=\\\"border\\\" class=\\\"mat-elevation-z8\\\">\\r\\n            Fundamental Parts\\r\\n            <ol>\\r\\n                <li>Website - Frontend user UI provided via Angular/cli encased in a Node.js wrapper.</li>\\r\\n                <li>Webservers - Connects canvases together in real time via Socket.io</li>\\r\\n                <li>Canvas App - Implemented via P5 and minor JavaScript black magic.</li>\\r\\n                <li>Webservice - Security bridge to the database using get and put requests.</li>\\r\\n                <li>Database - Backend data storage provided via a MongoDB service.</li>\\r\\n            </ol>\\r\\n            &nbsp;\\r\\n            Servers\\r\\n            <ol>\\r\\n                <li>Website - Heroku Server 1\\r\\n                    <ul>\\r\\n                        <li>Contains the frontend that the user sees and operates with.</li>\\r\\n                        <li>Uses Angular routing, forum validation to communicate with our webservice. This includes:\\r\\n                            <ul>\\r\\n                                <li>Creating accounts</li>\\r\\n                                <li>Logging in</li>\\r\\n                                <li>Canvas handoffs</li>\\r\\n                            </ul>\\r\\n                        </li>\\r\\n                        <li>Uses Socket.io and as js node wrapper to display a dynamic P5 canvas.</li>\\r\\n                        <li>Features authentication and privacy components.</li>\\r\\n                        <li>Dynamically generates additional Socket.io servers for every new canvas, hosted locally on\\r\\n                            the same server.</li>\\r\\n                    </ul>\\r\\n                </li>\\r\\n                <li>Webservice - Heroku Server 2\\r\\n                    <ul>\\r\\n                        <li>Uses get and put requests from the Website to securely communicate with the database for the\\r\\n                            Website.</li>\\r\\n                        <li>Handles the security of the database by not allowing clients to directly interact with the\\r\\n                            data.</li>\\r\\n                    </ul>\\r\\n                </li>\\r\\n                <li>Database - MongoDB Server\\r\\n                    <ul>\\r\\n                        <li>Hosts user accounts</li>\\r\\n                        <li>Hosts canvases</li>\\r\\n                        <li>Communicates with the webservice via a backend schema.</li>\\r\\n                    </ul>\\r\\n                </li>\\r\\n            </ol>\\r\\n        </mat-card>\\r\\n        <br>\\r\\n        <mat-card id=\\\"border\\\" class=\\\"mat-elevation-z8\\\">\\r\\n            <h3>Basic User Information</h3>\\r\\n            <dl *ngIf=\\\"account\\\" class=\\\"dl-horizontal\\\">\\r\\n                <dt>Encoded payload</dt>\\r\\n                <dd>{{ accountToken }}</dd>\\r\\n                <dt>&nbsp;</dt>\\r\\n                <dd>&nbsp;</dd>\\r\\n                <dt>Decoded Account</dt>\\r\\n                <dd>{{ account | json }}</dd>\\r\\n                <dt>&nbsp;</dt>\\r\\n                <dd>&nbsp;</dd>\\r\\n                <dt>Decoded Canvas</dt>\\r\\n                <dd>{{ canvas | json }}</dd>\\r\\n                <dt>&nbsp;</dt>\\r\\n                <dd>&nbsp;</dd>\\r\\n                <dt>Username</dt>\\r\\n                <dd>{{ account.userName }}</dd>\\r\\n                <dt>Email</dt>\\r\\n                <dd>{{ account.email }}</dd>\\r\\n                <dt>ID</dt>\\r\\n                <dd>{{ account._id }}</dd>\\r\\n                <dt>Theme</dt>\\r\\n                <dd>{{ account.theme }}</dd>\\r\\n                <dt>Admin Status</dt>\\r\\n                <dd>{{ account.isAdmin }}</dd>\\r\\n                <dt>&nbsp;</dt>\\r\\n                <dd>&nbsp;</dd>\\r\\n                <dt>Canvases</dt>\\r\\n                <dd>{{ account.canvases.length }}</dd>\\r\\n                <dt>Friends</dt>\\r\\n                <dd>{{ account.friends.length }}</dd>\\r\\n                <dt>&nbsp;</dt>\\r\\n                <dd>&nbsp;</dd>\\r\\n                <dt>Issued date-and-time</dt>\\r\\n                <dd>{{ accountTokenIssuedTimestamp }}</dd>\\r\\n            </dl>\\r\\n            <strong *ngIf=\\\"!account\\\">\\r\\n                No data to view, you're not logged in!\\r\\n            </strong>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n</div>\"","export default \"<div class=\\\"row\\\">\\r\\n    <div class='col-md-12'>\\r\\n        <mat-card id=\\\"info\\\" class=\\\"mat-elevation-z8\\\">\\r\\n            <h3>Want to join InkShare?</h3>\\r\\n        </mat-card>\\r\\n        <br>\\r\\n        <mat-card id=\\\"border\\\" class=\\\"mat-elevation-z8\\\">\\r\\n            <h4>Here's what you'll need:</h4>\\r\\n            <form [formGroup]=\\\"formGroup\\\">\\r\\n                <mat-horizontal-stepper formArrayName=\\\"formArray\\\" [linear]=\\\"true\\\" #stepper>\\r\\n                    <mat-step formGroupName=\\\"0\\\" [stepControl]=\\\"formArray.get([0])\\\">\\r\\n                        <ng-template matStepLabel>\\r\\n                            <div>Email</div>\\r\\n                        </ng-template>\\r\\n                        <mat-form-field>\\r\\n                            <mat-label>What's your email?</mat-label>\\r\\n                            <input matInput type=\\\"email\\\" formControlName=\\\"emailFormCtrl\\\">\\r\\n                            <mat-error>You'll need a valid email to log in with.</mat-error>\\r\\n                        </mat-form-field>\\r\\n                        <div>\\r\\n                            <button mat-raised-button color=\\\"warn\\\" matStepperPrevious disabled>Back</button>\\r\\n                            &nbsp;&nbsp;\\r\\n                            <button\\r\\n                                *ngIf=\\\"regTest('^[A-z0-9._%+-]+@[A-z0-9.-]+\\\\.[A-z]{2,}$',formArray.value[0].emailFormCtrl) && !existTest(formArray.value[0].emailFormCtrl)\\\"\\r\\n                                mat-raised-button color=\\\"primary\\\" matStepperNext>Next</button>\\r\\n                            <button\\r\\n                                *ngIf=\\\"!regTest('^[A-z0-9._%+-]+@[A-z0-9.-]+\\\\.[A-z]{2,}$',formArray.value[0].emailFormCtrl) || existTest(formArray.value[0].emailFormCtrl)\\\"\\r\\n                                mat-raised-button color=\\\"primary\\\" matStepperNext disabled>Next</button>\\r\\n                            &nbsp;&nbsp;\\r\\n                            <strong *ngIf=\\\"formArray.value[0].emailFormCtrl.length < 1\\\" class=\\\"text-danger\\\">\\r\\n                                You'll need a unique email to register</strong>\\r\\n                            <strong *ngIf=\\\"!regTest('^[A-z0-9._%+-]+@[A-z0-9.-]+\\\\.[A-z]{2,}$',formArray.value[0].emailFormCtrl) && formArray.value[0].emailFormCtrl.length > 0\\\"\\r\\n                                class=\\\"text-danger\\\">\\r\\n                                That doesn't appear to be a vaild email</strong>\\r\\n                            <strong *ngIf=\\\"existTest(formArray.value[0].emailFormCtrl)\\\" class=\\\"text-danger\\\">\\r\\n                                That email seems to already exists&nbsp;&nbsp;<a (click)='reset()'>Reset password?</a></strong>\\r\\n                            <span *ngIf=\\\"regTest('^[A-z0-9._%+-]+@[A-z0-9.-]+\\\\.[A-z]{2,}$',formArray.value[0].emailFormCtrl) && !existTest(formArray.value[0].emailFormCtrl)\\\">\\r\\n                                Email looks good!</span>\\r\\n                        </div>\\r\\n                    </mat-step>\\r\\n\\r\\n                    <mat-step formGroupName=\\\"1\\\" [stepControl]=\\\"formArray.get([1])\\\">\\r\\n                        <ng-template matStepLabel>Username</ng-template>\\r\\n                        <mat-form-field>\\r\\n                            <mat-label>What should we call you?</mat-label>\\r\\n                            <input matInput formControlName=\\\"userNameFormCtrl\\\" required>\\r\\n                            <mat-error>You'll need a valid username for others to see.</mat-error>\\r\\n                        </mat-form-field>\\r\\n                        <div>\\r\\n                            <button mat-raised-button color=\\\"warn\\\" matStepperPrevious>Back</button>\\r\\n                            &nbsp;&nbsp;\\r\\n                            <button *ngIf=\\\"formArray.value[1].userNameFormCtrl.length > 0\\\" mat-raised-button\\r\\n                                color=\\\"primary\\\" matStepperNext>Next</button>\\r\\n                            <button *ngIf=\\\"formArray.value[1].userNameFormCtrl.length < 1\\\" mat-raised-button\\r\\n                                color=\\\"primary\\\" matStepperNext disabled>Next</button>\\r\\n                            &nbsp;&nbsp;\\r\\n                            <strong *ngIf=\\\"formArray.value[1].userNameFormCtrl.length < 1\\\" class=\\\"text-danger\\\">\\r\\n                                Your username needs to contain at least 1 character</strong>\\r\\n                            <strong *ngIf=\\\"formArray.value[1].userNameFormCtrl.length > 50\\\" class=\\\"text-danger\\\">\\r\\n                                Woah chill out, try to keep your username under 50 characters</strong>\\r\\n                            <span *ngIf=\\\"formArray.value[1].userNameFormCtrl.length > 0 && formArray.value[1].userNameFormCtrl.length < 51\\\">\\r\\n                                Username is valid!</span>\\r\\n                        </div>\\r\\n                    </mat-step>\\r\\n\\r\\n                    <mat-step formGroupName=\\\"2\\\" [stepControl]=\\\"formArray?.get([2])\\\">\\r\\n                        <ng-template matStepLabel>Password</ng-template>\\r\\n                        <mat-form-field>\\r\\n                            <mat-label>What will your password be?</mat-label>\\r\\n                            <input matInput type=\\\"password\\\" formControlName=\\\"passwordFormCtrl\\\" required>\\r\\n                            <mat-error>You'll need a password to log in with.</mat-error>\\r\\n                        </mat-form-field>\\r\\n                        <mat-form-field>\\r\\n                            <mat-label>Can you confirm it once more?</mat-label>\\r\\n                            <input matInput type=\\\"password\\\" formControlName=\\\"passwordConfirmFormCtrl\\\" required>\\r\\n                            <mat-error>Please enter your above password again.</mat-error>\\r\\n                        </mat-form-field>\\r\\n                        <div>\\r\\n                            <button mat-raised-button color=\\\"warn\\\" matStepperPrevious>Back</button>\\r\\n                            &nbsp;&nbsp;\\r\\n                            <button\\r\\n                                *ngIf=\\\"formArray.value[2].passwordFormCtrl.length > 5 && formArray.value[2].passwordFormCtrl.length < 51 && formArray.value[2].passwordFormCtrl == formArray.value[2].passwordConfirmFormCtrl\\\"\\r\\n                                mat-raised-button color=\\\"primary\\\" matStepperNext>Next</button>\\r\\n                            <button\\r\\n                                *ngIf=\\\"formArray.value[2].passwordFormCtrl.length < 6 || formArray.value[2].passwordFormCtrl.length > 50 || formArray.value[2].passwordFormCtrl != formArray.value[2].passwordConfirmFormCtrl\\\"\\r\\n                                mat-raised-button color=\\\"primary\\\" matStepperNext disabled>Next</button>\\r\\n                            &nbsp;&nbsp;\\r\\n                            <strong *ngIf=\\\"formArray.value[2].passwordFormCtrl.length < 6\\\" class=\\\"text-danger\\\">Passwords\\r\\n                                can't be less than 6 characters.</strong>\\r\\n                            <strong *ngIf=\\\"formArray.value[2].passwordFormCtrl.length > 50\\\" class=\\\"text-danger\\\">Passwords\\r\\n                                can't be more than 50 characters.</strong>\\r\\n                            <strong\\r\\n                                *ngIf=\\\"formArray.value[2].passwordFormCtrl != formArray.value[2].passwordConfirmFormCtrl\\\"\\r\\n                                class=\\\"text-danger\\\">Your passwords must match!</strong>\\r\\n                            <span\\r\\n                                *ngIf=\\\"formArray.value[2].passwordFormCtrl.length > 5 && formArray.value[2].passwordFormCtrl.length < 51 && formArray.value[2].passwordFormCtrl == formArray.value[2].passwordConfirmFormCtrl\\\">\\r\\n                                Passwords match</span>\\r\\n                        </div>\\r\\n                    </mat-step>\\r\\n\\r\\n                    <mat-step>\\r\\n                        <ng-template matStepLabel>Confirm your information</ng-template>\\r\\n                        <p>Your email will be: <strong>{{formArray.value[0].emailFormCtrl}}</strong></p>\\r\\n                        <p>You will be seen as: <strong>{{formArray.value[1].userNameFormCtrl}}</strong></p>\\r\\n                        <p *ngIf=\\\"formArray.value[2].passwordFormCtrl != formArray.value[2].passwordConfirmFormCtrl\\\">\\r\\n                            Please ensure your passwords match!</p>\\r\\n                        <p *ngIf=\\\"formArray.value[2].passwordFormCtrl == formArray.value[2].passwordConfirmFormCtrl\\\">\\r\\n                            Passwords match!</p>\\r\\n                        <br>\\r\\n                        <p>Once you're sure everything is set, click to register below.</p>\\r\\n                        <div>\\r\\n                            <button mat-raised-button color=\\\"warn\\\" matStepperPrevious>Back</button>\\r\\n                            &nbsp;&nbsp;\\r\\n                            <button\\r\\n                                *ngIf=\\\"regTest('^[A-z0-9._%+-]+@[A-z0-9.-]+\\\\.[A-z]{2,}$',formArray.value[0].emailFormCtrl) && formArray.value[1].userNameFormCtrl.length > 0 && formArray.value[2].passwordFormCtrl.length > 5 && formArray.value[2].passwordFormCtrl.length < 51 && formArray.value[2].passwordFormCtrl == formArray.value[2].passwordConfirmFormCtrl\\\"\\r\\n                                mat-raised-button color=\\\"primary\\\" (click)=\\\"onSubmit()\\\">Register</button>\\r\\n                            <button\\r\\n                                *ngIf=\\\"!regTest('^[A-z0-9._%+-]+@[A-z0-9.-]+\\\\.[A-z]{2,}$',formArray.value[0].emailFormCtrl) || formArray.value[1].userNameFormCtrl.length < 1 || formArray.value[2].passwordFormCtrl.length < 6 || formArray.value[2].passwordFormCtrl.length > 50 || formArray.value[2].passwordFormCtrl != formArray.value[2].passwordConfirmFormCtrl\\\"\\r\\n                                mat-raised-button color=\\\"primary\\\" (click)=\\\"onSubmit()\\\" disabled>Register</button>\\r\\n                        </div>\\r\\n                    </mat-step>\\r\\n                </mat-horizontal-stepper>\\r\\n            </form>\\r\\n            <br>\\r\\n            &nbsp;&nbsp;\\r\\n            <button mat-stroked-button class=\\\"btn btn-default\\\" (click)=\\\"router.navigate(['home']);\\\">Back to home</button>\\r\\n            &nbsp;&nbsp;\\r\\n            <span *ngIf='creationError?.length>0' class=\\\"text-danger\\\">{{ creationError }}&nbsp;&nbsp;<a\\r\\n                    (click)='reset()'>Reset password?</a></span>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n</div>\"","export default \"<app-header></app-header>\\r\\n<br>\\r\\n<div id=\\\"routeBody\\\" [@routeAnimation]=\\\"getAnimationData(routerOutlet)\\\">\\r\\n  <router-outlet #routerOutlet=\\\"outlet\\\"></router-outlet>\\r\\n  <footer>\\r\\n    <br>\\r\\n    <mat-card class=\\\"mat-elevation-z8\\\">\\r\\n      <p>2020 - BTS 630 - <a href=\\\"https://github.com/SenecaCollegeBTSProjects/Group_10\\\" target=\\\"parent\\\">Group 10</a>\\r\\n      </p>\\r\\n    </mat-card>\\r\\n    <br>\\r\\n    <br>\\r\\n  </footer>\\r\\n</div>\"","export default \"<div class=\\\"row\\\">\\r\\n    <div class='col-sm-12'>\\r\\n        <h2 mat-dialog-title>Canvas Settings</h2>\\r\\n        <br>\\r\\n        <mat-form-field style=\\\"display: inline;\\\">\\r\\n            <mat-hint align=\\\"start\\\"><strong>Canvas name</strong></mat-hint>\\r\\n            <input\\r\\n                matInput\\r\\n                id=\\\"name\\\"\\r\\n                name=\\\"name\\\"\\r\\n                [(ngModel)]=\\\"data.canvas.name\\\"\\r\\n                #name=\\\"ngModel\\\"\\r\\n                required\\r\\n                minlength=\\\"1\\\"\\r\\n                maxlength=\\\"50\\\"\\r\\n                value=\\\"data.canvas.name\\\"\\r\\n                placeholder=\\\"Canvas Name\\\">\\r\\n            <mat-error *ngIf='name.errors?.required'>Please enter a name for your new canvas</mat-error>\\r\\n            <mat-error *ngIf='name.errors?.minlength'>Your canvas name can't be less than 1 character</mat-error>\\r\\n            <mat-error *ngIf='name.errors?.maxlength'>Your canvas name can't be more than 50 characters</mat-error>\\r\\n        </mat-form-field>\\r\\n        <br>\\r\\n        <mat-form-field>\\r\\n            <mat-label>Canvas Type</mat-label>\\r\\n            <mat-select [(value)]=\\\"data.type\\\">\\r\\n                <mat-option reqired *ngFor=\\\"let type of data.types\\\" [value]=\\\"type.value\\\">\\r\\n                    {{type.value}}\\r\\n                </mat-option>\\r\\n            </mat-select>\\r\\n        </mat-form-field>\\r\\n        <br>\\r\\n        <mat-form-field style=\\\"display: inline;\\\">\\r\\n            <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Find a participant...\\\">\\r\\n        </mat-form-field>\\r\\n        \\r\\n        <table mat-table [dataSource]=\\\"data.dataSource\\\" style=\\\"overflow: auto;\\\">\\r\\n            <ng-container matColumnDef=\\\"name\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef>&nbsp;&nbsp;Name&nbsp;&nbsp;</th>\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\">&nbsp;&nbsp;{{element.userName}}&nbsp;&nbsp;</td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"email\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef>&nbsp;&nbsp;Email&nbsp;&nbsp;</th>\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\">&nbsp;&nbsp;{{element.email}}&nbsp;&nbsp;</td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"permissions\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef>&nbsp;&nbsp;Permissions&nbsp;&nbsp;</th>\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\">&nbsp;&nbsp;{{element.permissions}}&nbsp;&nbsp;</td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"options\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef>&nbsp;&nbsp;Options&nbsp;&nbsp;</th>\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                    <button mat-button [disabled]=\\\"element._id == data.canvas.owner\\\" color=\\\"primary\\\" (click)=\\\"promoteParticipant(element)\\\">Promote</button>&nbsp;\\r\\n                    <button mat-button [disabled]=\\\"element._id == data.canvas.owner\\\" color=\\\"accent\\\" (click)=\\\"demoteParticipant(element)\\\">Demote</button>&nbsp;\\r\\n                    <button mat-button [disabled]=\\\"element._id == data.canvas.owner\\\" color=\\\"warn\\\" (click)=\\\"removeParticipant(element)\\\">Remove</button>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n        \\r\\n            <tr mat-header-row *matHeaderRowDef=\\\"data.displayedColumns\\\"></tr>\\r\\n            <tr mat-row *matRowDef=\\\"let row; columns: data.displayedColumns;\\\"></tr>\\r\\n        </table>\\r\\n        <div mat-dialog-actions>\\r\\n            <button mat-raised-button color=\\\"primary\\\" [mat-dialog-close]=\\\"data\\\" cdkFocusInitial>Save</button>\\r\\n            <button mat-stroked-button (click)=\\\"onNoClick()\\\">Cancel</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"<!--Everything is handled by the TS and JS-->\\r\\n<div class=\\\"row\\\">\\r\\n    <div class='col-sm-12'>\\r\\n        <div id='canvas-header' *ngIf='account && canvas'>\\r\\n            <mat-card id=\\\"info\\\" class=\\\"mat-elevation-z8\\\">\\r\\n                <h2>Welcome to <strong>\\\"{{canvas.name}}\\\"</strong>, {{account.userName}}</h2>\\r\\n            </mat-card>\\r\\n            <br>\\r\\n            <mat-card id=\\\"border\\\" class=\\\"mat-elevation-z8\\\">\\r\\n                <h3 *ngIf=\\\"permissions == 'Visitor'\\\">You're currently a visitor, ask for permission to edit!</h3>\\r\\n                <mat-card id=\\\"secondary\\\" class=\\\"mat-elevation-z8\\\" *ngIf=\\\"(asyncTabs | async) == null\\\">\\r\\n                    <mat-card-title align=\\\"center\\\" style=\\\"margin: auto;\\\">Loading toolkit...</mat-card-title>\\r\\n                    <mat-spinner align=\\\"center\\\" style=\\\"margin: auto;\\\"></mat-spinner>\\r\\n                </mat-card>\\r\\n                <mat-tab-group *ngIf=\\\"permissions != 'Visitor'\\\">\\r\\n                    <mat-tab *ngFor=\\\"let tab of asyncTabs | async\\\">\\r\\n                        <ng-template mat-tab-label>{{tab}}</ng-template>\\r\\n                        <br>\\r\\n                        <div *ngIf=\\\"tab=='File'\\\">\\r\\n                            <button class=\\\"btn btn-danger\\\" (click)=\\\"refreshBtnOnClick()\\\">Refresh Canvas\\r\\n                                (Global)</button> &nbsp;\\r\\n                            <button *ngIf=\\\"(+canvas.dimensions.height) + (+canvas.dimensions.width) <= 350 && disableDrawing != true\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveCanvas()\\\">Save Canvas (Global)</button>\\r\\n                            <button *ngIf=\\\"disableDrawing == true\\\" class=\\\"btn btn-primary\\\" disabled title=\\\"Canvas is busy at this time\\\">Save Canvas (Global)</button>\\r\\n                            <button *ngIf=\\\"(+canvas.dimensions.height) + (+canvas.dimensions.width) > 350\\\" class=\\\"btn btn-primary\\\" disabled title=\\\"Canvas is too large to save\\\">Save Canvas (Global)</button>\\r\\n                            &nbsp;\\r\\n                            <button class=\\\"btn btn-info\\\" (click)=\\\"shareCanvas()\\\">Share Canvas (Global)</button> &nbsp;\\r\\n                            <br>\\r\\n                            <br>\\r\\n                            <label for=\\\"canvas.dimensions.width\\\">Canvas Width: </label>&nbsp;\\r\\n                            <input type=\\\"number\\\" class=\\\"canvas.dimensions.width\\\" [value]=\\\"canvas.dimensions.width\\\"\\r\\n                                (input)='canvasWidthChange($event.target.value)' max='2000' min='1'/> &nbsp;\\r\\n                            <br>\\r\\n                            <label for=\\\"canvas.dimensions.height\\\">Canvas Height: </label>&nbsp;\\r\\n                            <input type=\\\"number\\\" class=\\\"canvasHeight\\\" [value]=\\\"canvas.dimensions.height\\\"\\r\\n                                (input)='canvasHeightChange($event.target.value)' max='2000' min='1'/> &nbsp;\\r\\n                            <br>\\r\\n                            <label for=\\\"backgroundColor\\\">Background Colour (refresh to change): </label> &nbsp;\\r\\n                            <input [value]=\\\"'rgb(' + backgroundR + ', ' + backgroundG + ', '+ backgroundB + ')'\\\" [colorPicker]=\\\"'rgb(' + backgroundR + ', ' + backgroundG + ', '+ backgroundB + ')'\\\" [cpAlphaChannel]=\\\"'disabled'\\\"\\r\\n                                [cpOutputFormat]=\\\"'rgba'\\\" [style.background]=\\\"color2\\\"\\r\\n                                (colorPickerChange)=\\\"color2=$event;\\\" (cpSliderDragEnd)=\\\"backgroundChange($event)\\\"\\r\\n                                (cpInputChange)=\\\"backgroundChange($event)\\\" class=\\\"backgroundColor\\\"/> &nbsp;\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"tab=='Tools'\\\">\\r\\n                            <label for=\\\"fillColor\\\">Fill Colour: </label> &nbsp;\\r\\n                            <input [value]=\\\"'rgb(' + selectedRed + ', ' + selectedGreen + ', '+ selectedBlue + ')'\\\" [colorPicker]=\\\"'rgb(' + selectedRed + ', ' + selectedGreen + ', '+ selectedBlue + ')'\\\" [cpAlphaChannel]=\\\"'disabled'\\\"\\r\\n                                [cpOutputFormat]=\\\"'rgba'\\\" [style.background]=\\\"color\\\" (colorPickerChange)=\\\"color=$event;\\\"\\r\\n                                (cpSliderDragEnd)=\\\"colorChange($event)\\\" (cpInputChange)=\\\"colorChange($event)\\\"\\r\\n                                [cpToggle]=\\\"true\\\" class=\\\"fillColor\\\" /> &nbsp;\\r\\n\\r\\n                            <button class=\\\"btn btn-primary\\\" (click)=\\\"brushChangebtn('rectangle')\\\">Square</button> &nbsp;\\r\\n                            <button class=\\\"btn btn-primary\\\" (click)=\\\"brushChangebtn('ellipse')\\\">Circle</button> &nbsp;\\r\\n                            <button class=\\\"btn btn-primary\\\" (click)=\\\"brushChangebtn('triangle')\\\">Triangle</button>\\r\\n                            &nbsp;\\r\\n                            <button class=\\\"btn btn-primary\\\" (click)=\\\"brushChangebtn('diamond')\\\">Diamond</button> &nbsp;\\r\\n                            <br>\\r\\n                            <label for=\\\"size\\\">Brush Size: </label>\\r\\n                            <mat-slider thumbLabel class=\\\"size\\\" min=\\\"1\\\" max=\\\"100\\\" step=\\\"1\\\" value=\\\"36\\\"\\r\\n                                [(ngModel)]='selectedSize'>\\r\\n                            </mat-slider>\\r\\n                            &nbsp;\\r\\n\\r\\n                            <label for=\\\"outlineColor\\\">Outline Colour: </label> &nbsp;\\r\\n                            <input [value]=\\\"'rgb(' + outlineRed + ', ' + outlineGreen + ', '+ outlineBlue + ')'\\\" [colorPicker]=\\\"'rgb(' + outlineRed + ', ' + outlineGreen + ', '+ outlineBlue + ')'\\\" [cpAlphaChannel]=\\\"'disabled'\\\"\\r\\n                                [cpOutputFormat]=\\\"'rgba'\\\" [style.background]=\\\"color1\\\"\\r\\n                                (colorPickerChange)=\\\"color1=$event;\\\" (cpSliderDragEnd)=\\\"outlineChange($event)\\\"\\r\\n                                (cpInputChange)=\\\"outlineChange($event)\\\" class=\\\"outlineColor\\\" /> &nbsp;\\r\\n                            <br>\\r\\n                            <label for=\\\"outWidth\\\">Outline Width: </label> &nbsp;\\r\\n                            <mat-slider thumbLabel class=\\\"outWidth\\\" min=\\\"1\\\" max=\\\"20\\\" step=\\\"1\\\" value=\\\"1\\\"\\r\\n                                [(ngModel)]='outlineWidth'>\\r\\n                            </mat-slider>\\r\\n                            &nbsp;\\r\\n                            <mat-slide-toggle [checked]=\\\"true\\\" [(ngModel)]='fillShape'>Fill</mat-slide-toggle> &nbsp;\\r\\n                            <mat-slide-toggle [(ngModel)]='showOutline'>Outline</mat-slide-toggle> &nbsp;\\r\\n                            <mat-slide-toggle [(ngModel)]='erase'>Erase</mat-slide-toggle>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"tab=='Insert'\\\">\\r\\n                            Copy + Paste + Export features will go here!\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"tab=='Canvas'\\\">\\r\\n                            <script type=\\\"text/javascript\\\">console.log(\\\"canvas\\\");</script>\\r\\n                            TODO: Make this auto-open\\r\\n                            <button class=\\\"btn btn-info\\\" (click)=\\\"canvasSettings(canvas)\\\">Settings</button>\\r\\n                        </div>\\r\\n                    </mat-tab>\\r\\n                </mat-tab-group>\\r\\n            </mat-card>\\r\\n        </div>\\r\\n        <hr>\\r\\n    </div>\\r\\n    <div class='col-sm-12' align=\\\"center\\\" style=\\\"margin: auto;\\\">\\r\\n        <div id=\\\"canvas-div\\\" class=\\\"mat-elevation-z24\\\"></div>\\r\\n        <div *ngIf='!canvas.image'>\\r\\n            <mat-card id=\\\"secondary\\\" class=\\\"mat-elevation-z8\\\">\\r\\n                <mat-card-title align=\\\"center\\\" style=\\\"margin: auto;\\\">Authenticating...</mat-card-title>\\r\\n                <mat-spinner align=\\\"center\\\" style=\\\"margin: auto;\\\"></mat-spinner>\\r\\n            </mat-card>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class='col-sm-12' *ngIf='canvas.image && !p'>\\r\\n        <mat-card id=\\\"secondary\\\" class=\\\"mat-elevation-z8\\\">\\r\\n            <mat-card-title align=\\\"center\\\" style=\\\"margin: auto;\\\">Loading canvas data...</mat-card-title>\\r\\n            <mat-spinner align=\\\"center\\\" style=\\\"margin: auto;\\\"></mat-spinner>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n</div>\"","export default \"<div class=\\\"row\\\">\\r\\n    <div class='col-md-8 col-sm-12'>\\r\\n        <h4>Password Request</h4>\\r\\n        <form (ngSubmit)='onSubmit()' #f='ngForm'>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"control-label\\\" for=\\\"email\\\">Email:</label>\\r\\n                <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"credentials.email\\\"\\r\\n                    #email=\\\"ngModel\\\" required minlength=\\\"6\\\" pattern=\\\"^[A-z0-9._%+-]+@[A-z0-9.-]+\\\\.[A-z]{2,}$\\\" value='{{email}}'autofocus>\\r\\n                <div *ngIf='email.invalid && (email.dirty || email.touched)' class='alert alert-danger'>\\r\\n                    <div *ngIf='email.errors?.required'>You'll need the email from the account can't log into</div>\\r\\n                    <div *ngIf='email.errors?.pattern'>That doesn't appear to be an email</div>\\r\\n                    <div *ngIf='email.errors?.minlength'>Your email can't possibly be less than 6 characters</div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <button\\r\\n            *ngIf='!email.invalid'\\r\\n            class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Request New Password</button>\\r\\n            <button class=\\\"btn btn-default\\\" routerLink=\\\"/home\\\">Back to home</button>&nbsp;&nbsp;\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","export default \"<header>\\r\\n    <h1>InkShare <span class=\\\"glyphicon glyphicon-blackboard\\\"></span></h1>\\r\\n</header>\\r\\n\\r\\n<mat-toolbar color=\\\"primary\\\" class=\\\"navbar mat-elevation-z8\\\">\\r\\n    <span>\\r\\n        <button mat-raised-button routerLink=\\\"/home\\\" routerLinkActive=\\\"active\\\">\\r\\n            <mat-icon>home</mat-icon>\\r\\n            Home&nbsp;\\r\\n        </button>&nbsp;\\r\\n        <button mat-raised-button routerLink=\\\"/library\\\" routerLinkActive=\\\"active\\\">\\r\\n            <mat-icon>book</mat-icon>\\r\\n            Library&nbsp;\\r\\n        </button>&nbsp;\\r\\n        <button mat-raised-button routerLink=\\\"/about\\\" routerLinkActive=\\\"active\\\">\\r\\n            <mat-icon>information</mat-icon>\\r\\n            About&nbsp;\\r\\n        </button>&nbsp;\\r\\n    </span>\\r\\n    <span class=\\\"fill-remaining-space\\\"></span>\\r\\n    <span *ngIf=\\\"account\\\">\\r\\n        <button mat-raised-button [matMenuTriggerFor]=\\\"notificationsMenu\\\" [disabled]=\\\"!account.notifications\\\">\\r\\n            <mat-icon>notifications</mat-icon>\\r\\n            Notifications&nbsp;\\r\\n        </button>\\r\\n        <mat-menu #notificationsMenu=\\\"matMenu\\\" xPosition=\\\"before\\\">\\r\\n            <div class=\\\"notification\\\" align=\\\"center\\\" *ngIf=\\\"account.notifications.length == 0\\\">\\r\\n                <h5>No new notifications!</h5>\\r\\n                <p>You're up to date~</p>\\r\\n            </div>\\r\\n            <div class=\\\"notification\\\" *ngFor=\\\"let notification of account.notifications\\\">\\r\\n                <mat-card id=\\\"secondary\\\" class=\\\"mat-elevation-z8\\\" *ngIf='!canvases'>\\r\\n                    <mat-card-title>{{notification.title}}</mat-card-title>\\r\\n                    <mat-card-subtitle>{{notification.date}}</mat-card-subtitle>\\r\\n                    <mat-card-content>{{notification.content}}</mat-card-content>\\r\\n                    <mat-card-actions>\\r\\n                        <button *ngIf= \\\"notification.title != 'Friend Request'\\\" mat-raised-button color=\\\"warn\\\" (click)=\\\"dismissNotif(notification)\\\">\\r\\n                            Dismiss\\r\\n                        </button>\\r\\n                        <button *ngIf= \\\"notification.title != 'Friend Request'\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"notification.link.length == 0\\\" (click)=\\\"navigate(notification)\\\">\\r\\n                            View\\r\\n                        </button>\\r\\n                        <button *ngIf= \\\"notification.title == 'Friend Request'\\\" button mat-raised-button color=\\\"warn\\\" (click)=\\\"dismissNotif(notification)\\\">\\r\\n                            Decline\\r\\n                        </button>\\r\\n                        <button *ngIf= \\\"notification.title == 'Friend Request'\\\" button mat-raised-button color=\\\"primary\\\" (click)=\\\"navigate(notification)\\\">\\r\\n                            Accept\\r\\n                        </button>\\r\\n                    </mat-card-actions>\\r\\n                </mat-card>\\r\\n            </div>\\r\\n            <span class=\\\"notification\\\" align=\\\"center\\\" *ngIf=\\\"account.notifications.length > 0\\\">\\r\\n                That's everything for now~\\r\\n                <button mat-button color=\\\"warn\\\" (click)=\\\"dismissNotif('all')\\\">\\r\\n                    Dismiss All Notifications\\r\\n                </button>\\r\\n            </span>\\r\\n        </mat-menu>\\r\\n    </span>\\r\\n    &nbsp;&nbsp;\\r\\n    <span>\\r\\n        <button mat-raised-button [matMenuTriggerFor]=\\\"accountMenu\\\" xPosition=\\\"after\\\">\\r\\n            <mat-icon>settings</mat-icon>\\r\\n            Account&nbsp;\\r\\n        </button>\\r\\n        <mat-menu #accountMenu=\\\"matMenu\\\">\\r\\n            <button *ngIf=\\\"!account\\\" mat-menu-item routerLink=\\\"/register\\\">Sign Up</button>\\r\\n            <button *ngIf=\\\"!account\\\" mat-menu-item routerLink=\\\"/login\\\">Login</button>\\r\\n            <button *ngIf=\\\"account\\\" mat-menu-item routerLink=\\\"/settings\\\">Settings</button>\\r\\n            <button *ngIf=\\\"account\\\" mat-menu-item (click)=\\\"logout()\\\">Logout</button>\\r\\n        </mat-menu>\\r\\n    </span>\\r\\n</mat-toolbar>\"","export default \"<div class=\\\"row\\\">\\r\\n    <div class='col-sm-12'>\\r\\n        <mat-card id=\\\"info\\\" class=\\\"mat-elevation-z8\\\">\\r\\n            <h2>BTS 630 - Capstone Major Project</h2>\\r\\n        </mat-card>\\r\\n        <br>\\r\\n        <mat-card id=\\\"border\\\" class=\\\"mat-elevation-z8\\\">\\r\\n            <img mat-card-image src=\\\"../../assets/home.jpg\\\" alt=canvas.name>\\r\\n            <p>Welcome to, and thank you for participating in the InkShare project with us!</p>\\r\\n            <p>InkShare aims to provide a stable and effortless tooling to let you and your team draw and make notes together in\\r\\n                real time.\\r\\n            </p>\\r\\n            <p>More importantly, we aim to do this for free. Just get started by creating an account, or logging in\\r\\n                below;</p>\\r\\n            <a class=\\\"btn btn-primary\\\" routerLink='/register'>I'm New!</a>&nbsp;&nbsp;\\r\\n            <a class=\\\"btn btn-success\\\" routerLink='/login'>I'm Returning!</a>\\r\\n            <p>&nbsp;</p>\\r\\n            <p>Then you can get started drawing below!</p>\\r\\n            <a class=\\\"btn btn-warning\\\" routerLink='/library'>Let's start drawing!</a>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n</div>\"","export default \"<div class=\\\"row\\\">\\r\\n    <div class='col-md-8 col-sm-12'>\\r\\n        <h4>User Settings</h4>\\r\\n        &nbsp;\\r\\n        <form (ngSubmit)='onSubmit()' #f='ngForm'>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"control-label\\\" for=\\\"email\\\">Email:</label>\\r\\n                <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"invite.email\\\"\\r\\n                    #email=\\\"ngModel\\\" required minlength=\\\"6\\\" pattern=\\\"^[A-z0-9._%+-]+@[A-z0-9.-]+\\\\.[A-z]{2,}$\\\" value='{{email}}'>\\r\\n                <div *ngIf='email.invalid && (email.dirty || email.touched)' class='alert alert-danger'>\\r\\n                    <div *ngIf='email.errors?.required'>You'll need an email to invite</div>\\r\\n                    <div *ngIf='email.errors?.pattern'>That doesn't appear to be an email</div>\\r\\n                    <div *ngIf='email.errors?.minlength'>The email can't possibly be less than 6 characters</div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"control-label\\\" for=\\\"id\\\">Canvas ID:</label>\\r\\n                <select class=\\\"form-control\\\" id=\\\"id\\\" name=\\\"id\\\" [(ngModel)]=\\\"invite.id\\\" #id=\\\"ngModel\\\">\\r\\n                    <option *ngFor=\\\"let canvas of canvases\\\" value = '{{canvas._id}}'>{{canvas._id}}</option>\\r\\n                </select>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\"","export default \"<h2 mat-dialog-title>Add a new Friend</h2>\\r\\n<br>\\r\\n<mat-form-field style=\\\"display: inline;\\\">\\r\\n    <mat-hint align=\\\"start\\\"><strong>Enter your friend's email to add them</strong></mat-hint>\\r\\n    <input\\r\\n        matInput\\r\\n        [formControl]=\\\"data.myControl\\\"\\r\\n        id=\\\"email\\\"\\r\\n        type=\\\"email\\\"\\r\\n        name=\\\"email\\\"\\r\\n        required\\r\\n        minlength=\\\"6\\\"\\r\\n        value=\\\"data.myControl.value\\\"\\r\\n        pattern=\\\"^[A-z0-9._%+-]+@[A-z0-9.-]+\\\\.[A-z]{2,}$\\\"\\r\\n        placeholder=\\\"Friend's Email\\\"\\r\\n        [matAutocomplete]=\\\"auto\\\">\\r\\n    <mat-autocomplete autoActiveFirstOption #auto=\\\"matAutocomplete\\\">\\r\\n        <ng-container *ngFor=\\\"let email of data.filteredOptions | async\\\">\\r\\n            <mat-option *ngIf=\\\"email != data.account.email\\\" [value]=\\\"email\\\">\\r\\n                {{email}}\\r\\n            </mat-option>\\r\\n        </ng-container>\\r\\n    </mat-autocomplete>\\r\\n    <mat-error *ngIf='data.myControl.errors?.required'>No email means no friends to add</mat-error>\\r\\n    <mat-error *ngIf='data.myControl.errors?.pattern'>That doesn't look like an email...</mat-error>\\r\\n    <mat-error *ngIf='data.myControl.errors?.minlength'>Your friend's email needs to be at least 6 characters to be valid</mat-error>\\r\\n</mat-form-field>\\r\\n<div mat-dialog-actions>\\r\\n    <button mat-raised-button color=\\\"primary\\\" [mat-dialog-close]=\\\"data\\\" [disabled]=\\\"data.myControl.errors\\\">Add</button>\\r\\n    <button mat-stroked-button (click)=\\\"onNoClick()\\\">Cancel</button>\\r\\n</div>\"","export default \"<h2 mat-dialog-title>Add a New Participant</h2>\\r\\n<br>\\r\\n<mat-form-field style=\\\"display: inline;\\\">\\r\\n    <mat-hint align=\\\"start\\\"><strong>Enter a user's email to add them to the canvas</strong></mat-hint>\\r\\n    <input\\r\\n        matInput\\r\\n        [formControl]=\\\"data.myControl\\\"\\r\\n        id=\\\"email\\\"\\r\\n        type=\\\"email\\\"\\r\\n        name=\\\"email\\\"\\r\\n        required\\r\\n        minlength=\\\"6\\\"\\r\\n        value=\\\"data.myControl.value\\\"\\r\\n        pattern=\\\"^[A-z0-9._%+-]+@[A-z0-9.-]+\\\\.[A-z]{2,}$\\\"\\r\\n        placeholder=\\\"Participant's Email\\\"\\r\\n        [matAutocomplete]=\\\"auto\\\">\\r\\n    <mat-autocomplete autoActiveFirstOption #auto=\\\"matAutocomplete\\\">\\r\\n        <ng-container *ngFor=\\\"let email of data.filteredOptions | async\\\">\\r\\n            <mat-option *ngIf=\\\"email != data.account.email\\\" [value]=\\\"email\\\">\\r\\n                {{email}}\\r\\n            </mat-option>\\r\\n        </ng-container>\\r\\n    </mat-autocomplete>\\r\\n    <mat-error *ngIf='data.myControl.errors?.required'>No email means nobody to add...</mat-error>\\r\\n    <mat-error *ngIf='data.myControl.errors?.pattern'>That doesn't look like an email...</mat-error>\\r\\n    <mat-error *ngIf='data.myControl.errors?.minlength'>The user's email needs to be at least 6 characters to be valid</mat-error>\\r\\n</mat-form-field>\\r\\n<mat-form-field>\\r\\n    <mat-label>User Permissions</mat-label>\\r\\n    <mat-select>\\r\\n        <mat-option reqired *ngFor=\\\"let permission of data.permissions\\\" [value]=\\\"permission.value\\\">\\r\\n            {{permission.value}}\\r\\n        </mat-option>\\r\\n    </mat-select>\\r\\n</mat-form-field>\\r\\n<div mat-dialog-actions>\\r\\n    <button mat-raised-button color=\\\"primary\\\" [mat-dialog-close]=\\\"data\\\" [disabled]=\\\"data.myControl.errors\\\">Add</button>\\r\\n    <button mat-stroked-button (click)=\\\"onNoClick()\\\">Cancel</button>\\r\\n</div>\"","export default \"<h2 mat-dialog-title>Canvas Setup</h2>\\r\\n<br>\\r\\n<mat-form-field>\\r\\n    <mat-hint align=\\\"start\\\"><strong>Name your new canvas</strong></mat-hint>\\r\\n    <input matInput id=\\\"canvasName\\\" name=\\\"canvasName\\\" [(ngModel)]=\\\"data.canvasName\\\" #canvasName=\\\"ngModel\\\" required\\r\\n        minlength=\\\"1\\\" maxlength=\\\"50\\\" value=\\\"data.canvasName\\\" placeholder=\\\"Canvas Name\\\">\\r\\n    <mat-error *ngIf='canvasName.errors?.required'>Please enter a name for your new canvas</mat-error>\\r\\n    <mat-error *ngIf='canvasName.errors?.minlength'>Your canvas name can't be less than 1 character</mat-error>\\r\\n    <mat-error *ngIf='canvasName.errors?.maxlength'>Your canvas name can't be more than 50 characters</mat-error>\\r\\n</mat-form-field>\\r\\n<mat-form-field>\\r\\n    <mat-label>Canvas Type</mat-label>\\r\\n    <mat-select [(value)]=\\\"data.type\\\">\\r\\n        <mat-option reqired *ngFor=\\\"let type of data.types\\\" [value]=\\\"type.value\\\">\\r\\n            {{type.value}}\\r\\n        </mat-option>\\r\\n    </mat-select>\\r\\n</mat-form-field>\\r\\n<div mat-dialog-actions>\\r\\n    <button mat-raised-button color=\\\"primary\\\" [mat-dialog-close]=\\\"data\\\" cdkFocusInitial>Create</button>\\r\\n    <button mat-stroked-button (click)=\\\"onNoClick()\\\">Cancel</button>\\r\\n</div>\"","export default \"<h2 mat-dialog-title>Delete Canvas?</h2>\\r\\n<br>\\r\\n<strong>This action cannot be undone!</strong>\\r\\n<div mat-dialog-actions>\\r\\n    <button mat-raised-button color=\\\"warn\\\" [mat-dialog-close]=\\\"true\\\" cdkFocusInitial>Delete</button>\\r\\n    <button mat-stroked-button (click)=\\\"onNoClick()\\\">Cancel</button>\\r\\n</div>\"","export default \"<div *ngIf='account' class=\\\"row\\\">\\r\\n    <div class='col-sm-12' *ngIf='router.url == \\\"/accept/\\\"+library'>\\r\\n        <mat-card id=\\\"secondary\\\" class=\\\"mat-elevation-z8\\\" align=\\\"center\\\" style=\\\"margin: auto;\\\">\\r\\n            <mat-card-title align=\\\"center\\\" style=\\\"margin: auto;\\\">Authenticating...</mat-card-title>\\r\\n            <mat-spinner align=\\\"center\\\" style=\\\"margin: auto;\\\"></mat-spinner>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n    <div class='col-sm-9' *ngIf='router.url != \\\"/accept/\\\"+library'>\\r\\n        <mat-card id=\\\"info\\\" class=\\\"mat-elevation-z8\\\">\\r\\n            <h4 *ngIf='account.email'>Logged in as {{account.userName}}.</h4>\\r\\n            <h4 *ngIf='account.email && router.url == \\\"/library/sort/\\\"+library'>Filtering canvases by \\\"{{library}}\\\".</h4>\\r\\n            <h4 *ngIf='account.email && router.url != \\\"/library/sort/\\\"+library'>Welcome back, what are we drawing today?</h4>\\r\\n        </mat-card>\\r\\n        <br>\\r\\n        <mat-card id=\\\"border\\\" class=\\\"mat-elevation-z8\\\" *ngIf=\\\"this.router.url != '/library/sort/'+library\\\">\\r\\n            <h3>Your Canvases</h3>\\r\\n            <br>\\r\\n            <div fxLayout=\\\"row wrap\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutGap=\\\"32px\\\" fxLayoutAlign=\\\"flex-start\\\">\\r\\n                <mat-card id=\\\"secondary\\\" class=\\\"mat-elevation-z8\\\" *ngIf=\\\"!canvases\\\">\\r\\n                    <mat-card-title align=\\\"center\\\" style=\\\"margin: auto;\\\">Loading canvases...</mat-card-title>\\r\\n                    <mat-spinner align=\\\"center\\\" style=\\\"margin: auto;\\\"></mat-spinner>\\r\\n                </mat-card>\\r\\n                <ng-container *ngFor=\\\"let canvas of canvases\\\">\\r\\n                    <mat-card id=\\\"secondary\\\" class=\\\"mat-elevation-z8\\\" *ngIf='account._id == canvas.owner'\\r\\n                        (mouseenter)=\\\"setSelected(canvas)\\\" (mouseleave)=\\\"setSelected(undefined)\\\">\\r\\n                        <mat-card-header>\\r\\n                            <div mat-card-avatar\\r\\n                                style=\\\"background-image: url('../../assets/no-avatar.png'); background-size: cover;\\\">\\r\\n                            </div>\\r\\n                            <mat-card-title>{{canvas.name}}</mat-card-title>\\r\\n                            <mat-card-subtitle>{{library}}</mat-card-subtitle>\\r\\n                        </mat-card-header>\\r\\n                        <img mat-card-image src=\\\"../../assets/no-canvas.jpg\\\" alt=canvas.name>\\r\\n                        <mat-card-content *ngIf='selected!=canvas' style=\\\"font-size: 92%;\\\">Last modified:<br>\\r\\n                            {{canvas.modified}}</mat-card-content>\\r\\n                        <mat-card-actions *ngIf='selected==canvas'>\\r\\n                            <button mat-raised-button color=\\\"primary\\\" title=\\\"Enter Canvas\\\"\\r\\n                                (click)=\\\"editCanvas(selected)\\\"><span class=\\\"glyphicon glyphicon-pencil\\\"></span></button>\\r\\n                            <button mat-raised-button title=\\\"Share Canvas\\\" (click)=\\\"shareCanvas(selected)\\\"><span\\r\\n                                    class=\\\"glyphicon glyphicon-duplicate\\\"></span></button>\\r\\n                            <button mat-raised-button color=\\\"accent\\\" title=\\\"Canvas Settings\\\"\\r\\n                                (click)=\\\"canvasSettings(selected)\\\"><span\\r\\n                                    class=\\\"glyphicon glyphicon-duplicate\\\"></span></button>\\r\\n                            <button mat-raised-button color=\\\"warn\\\" *ngIf='canvas.owner == account._id'\\r\\n                                title=\\\"Delete Canvas\\\" (click)=\\\"deleteCanvas(selected)\\\"><span\\r\\n                                    class=\\\"glyphicon glyphicon-erase\\\"></span></button>\\r\\n                        </mat-card-actions>\\r\\n                    </mat-card>\\r\\n                </ng-container>\\r\\n                <mat-card id=\\\"secondary\\\" class=\\\"mat-elevation-z8\\\" *ngIf='account.email == library && canvases != undefined'\\r\\n                    style=\\\"height: 230px; width: 190px;\\\">\\r\\n                    <mat-card-header>\\r\\n                        <mat-card-title>New Canvas?</mat-card-title>\\r\\n                    </mat-card-header>\\r\\n                    <mat-card-content>\\r\\n                        <a (click)=\\\"newCanvas()\\\" style=\\\"cursor: pointer;\\\">\\r\\n                            <mat-icon style=\\\"font-size: 1160%;\\\" aria-hidden=\\\"false\\\" aria-label=\\\"Create a new canvas\\\">\\r\\n                                add_photo_alternate</mat-icon>\\r\\n                        </a>\\r\\n                    </mat-card-content>\\r\\n                </mat-card>\\r\\n                <hr>\\r\\n            </div>\\r\\n        </mat-card>\\r\\n        <br>\\r\\n        <mat-card id=\\\"border\\\" class=\\\"mat-elevation-z8\\\">\\r\\n            <h3>Canvases shared with you</h3>\\r\\n            <br>\\r\\n            <div *ngIf='canvases && canvases.length < 1'>\\r\\n                No shared canvases!\\r\\n            </div>\\r\\n            <div fxLayout=\\\"row wrap\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutGap=\\\"32px\\\" fxLayoutAlign=\\\"flex-start\\\">\\r\\n                <mat-card id=\\\"secondary\\\" class=\\\"mat-elevation-z8\\\" *ngIf='!canvases'>\\r\\n                    <mat-card-title>Loading...</mat-card-title>\\r\\n                    &nbsp;<mat-spinner align=\\\"center\\\"></mat-spinner>\\r\\n                </mat-card>\\r\\n                <ng-container *ngFor=\\\"let canvas of canvases\\\">\\r\\n                    <mat-card id=\\\"secondary\\\" class=\\\"mat-elevation-z8\\\"\\r\\n                        *ngIf='account._id != canvas.owner && canvas.owner != \\\"\\\"' (mouseenter)=\\\"setSelected(canvas)\\\"\\r\\n                        (mouseleave)=\\\"setSelected(undefined)\\\">\\r\\n                        <mat-card-header>\\r\\n                            <div mat-card-avatar\\r\\n                                style=\\\"background-image: url('../../assets/no-avatar.png'); background-size: cover;\\\">\\r\\n                            </div>\\r\\n                            <mat-card-title>{{canvas.name}}</mat-card-title>\\r\\n                            <mat-card-subtitle>{{library}}</mat-card-subtitle>\\r\\n                        </mat-card-header>\\r\\n                        <img mat-card-image src=\\\"../../assets/no-canvas.jpg\\\" alt=canvas.name>\\r\\n                        <mat-card-content *ngIf='selected!=canvas' style=\\\"font-size: 92%;\\\">Last modified:<br>\\r\\n                            {{canvas.modified}}</mat-card-content>\\r\\n                        <mat-card-actions *ngIf='selected==canvas' align='center'>\\r\\n                            <button mat-raised-button color=\\\"primary\\\" title=\\\"Enter Canvas\\\" (click)=\\\"editCanvas(selected)\\\"><span\\r\\n                                    class=\\\"glyphicon glyphicon-pencil\\\"></span></button>\\r\\n                            <button mat-raised-button title=\\\"Share Canvas\\\" (click)=\\\"shareCanvas(selected)\\\"><span\\r\\n                                    class=\\\"glyphicon glyphicon-duplicate\\\"></span></button>\\r\\n                        </mat-card-actions>\\r\\n                    </mat-card>\\r\\n                </ng-container>\\r\\n                <hr>\\r\\n            </div>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n    <div class='col-sm-3' *ngIf='router.url == \\\"/library/view/\\\"+account.email'>\\r\\n        <mat-card id=\\\"info\\\" class=\\\"mat-elevation-z8\\\">\\r\\n            <h3>Friends</h3>\\r\\n        </mat-card>\\r\\n        <br>\\r\\n        <mat-card class=\\\"mat-elevation-z8\\\">\\r\\n            <div *ngIf='!friends'>\\r\\n                <mat-card-title>Loading friends...</mat-card-title>\\r\\n                &nbsp;<mat-spinner align=\\\"center\\\"></mat-spinner>\\r\\n            </div>\\r\\n            <ng-container *ngFor=\\\"let friend of friends\\\">\\r\\n                <mat-card id=\\\"secondary\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"viewLibrary(friend)\\\">\\r\\n                    <mat-card-title>{{friend.userName}}</mat-card-title>\\r\\n                    <mat-card-subtitle>{{friend.email}}</mat-card-subtitle>\\r\\n                </mat-card>\\r\\n                <br>\\r\\n            </ng-container>\\r\\n            <div *ngIf='friends && friends.length < 1'>\\r\\n                <mat-card id=\\\"secondary\\\">\\r\\n                    Sorry, you don't appear to have any friends...\\r\\n                </mat-card>\\r\\n            </div>\\r\\n            <br>\\r\\n            <div *ngIf='friends'>\\r\\n                <mat-card id=\\\"accent\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"addFriend('')\\\">\\r\\n                    Add a new friend\\r\\n                </mat-card>\\r\\n            </div>\\r\\n        </mat-card>\\r\\n        <br>\\r\\n        <button mat-raised-button color=\\\"primary\\\" title=\\\"TEST\\\" (click)=\\\"test()\\\">TEST</button>\\r\\n    </div>\\r\\n</div>\\r\\n<div *ngIf='!account'>\\r\\n    <mat-spinner></mat-spinner>\\r\\n</div>\"","export default \"<div class=\\\"row\\\">\\r\\n    <div *ngIf='!account' class='col-sm-12'>\\r\\n        <mat-card id=\\\"info\\\" class=\\\"mat-elevation-z8\\\">\\r\\n            <h4>Login - enter information, and click the login button</h4>\\r\\n        </mat-card>\\r\\n        <br>\\r\\n        <mat-card id=\\\"border\\\" class=\\\"mat-elevation-z8\\\">\\r\\n            <form (ngSubmit)='onSubmit()' #f='ngForm'>\\r\\n\\r\\n                <mat-form-field style=\\\"display: inline;\\\">\\r\\n                    <mat-hint align=\\\"start\\\"><strong>Enter your account's email</strong></mat-hint>\\r\\n                    <input\\r\\n                        matInput\\r\\n                        id=\\\"email\\\"\\r\\n                        type=\\\"email\\\"\\r\\n                        name=\\\"email\\\"\\r\\n                        [(ngModel)]=\\\"credentials.email\\\"\\r\\n                        #email=\\\"ngModel\\\"\\r\\n                        required\\r\\n                        minlength=\\\"6\\\"\\r\\n                        pattern=\\\"^[A-z0-9._%+-]+@[A-z0-9.-]+\\\\.[A-z]{2,}$\\\"\\r\\n                        placeholder=\\\"Email\\\">\\r\\n                    <mat-error *ngIf='email.errors?.required'>You'll need an email to log in with</mat-error>\\r\\n                    <mat-error *ngIf='email.errors?.pattern'>That doesn't appear to be an email</mat-error>\\r\\n                    <mat-error *ngIf='email.errors?.minlength'>Your email can't be less than 6 characters</mat-error>\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field style=\\\"display: inline;\\\">\\r\\n                    <mat-hint align=\\\"start\\\"><strong>Enter your account's password</strong></mat-hint>\\r\\n                    <input matInput\\r\\n                        id=\\\"password\\\"\\r\\n                        type=\\\"password\\\"\\r\\n                        name=\\\"password\\\"\\r\\n                        [(ngModel)]=\\\"credentials.password\\\"\\r\\n                        #password=\\\"ngModel\\\"\\r\\n                        required\\r\\n                        minlength=\\\"6\\\"\\r\\n                        maxlength=\\\"50\\\"\\r\\n                        placeholder=\\\"Password\\\">\\r\\n                    <mat-error *ngIf='password.errors?.required'>Password is required</mat-error>\\r\\n                    <mat-error *ngIf='password.errors?.minlength'>Password cannot be less than 6 characters</mat-error>\\r\\n                    <mat-error *ngIf='password.errors?.maxlength'>Password cannot be more than 50 characters</mat-error>\\r\\n                </mat-form-field>\\r\\n                <br>\\r\\n                <button\\r\\n                    mat-raised-button\\r\\n                    color=\\\"primary\\\"\\r\\n                    type=\\\"submit\\\"\\r\\n                    [disabled]=\\\"!f.valid && !authed\\\">\\r\\n                        Login\\r\\n                </button>\\r\\n                &nbsp;&nbsp;\\r\\n                <button class=\\\"btn btn-default\\\"  routerLink=\\\"/home\\\">Back to home</button>\\r\\n                &nbsp;&nbsp;\\r\\n                <span *ngIf='loginError?.length>0' class=\\\"text-danger\\\">{{ loginError }}\\r\\n                    &nbsp;&nbsp;<a (click)='reset()'>Reset password?</a></span>\\r\\n            </form>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n    <div *ngIf='account' class='col-sm-4'>\\r\\n        <mat-card id=\\\"border\\\"class=\\\"mat-elevation-z8\\\">\\r\\n            <h4>Would you like to log out first?</h4>\\r\\n            <button mat-raised-button color=\\\"warn\\\" (click)='logout()'>Logout</button>\\r\\n            &nbsp;&nbsp;\\r\\n            <button mat-stroked-button  routerLink=\\\"/home\\\">Back</button>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n    <div *ngIf='account' class='col-sm-8'>\\r\\n        <mat-card id=\\\"info\\\" class=\\\"mat-elevation-z8\\\">\\r\\n            <h3>You are currently logged in as \\\"{{ account.email }}\\\"</h3>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n</div>\"","export default \"<div class=\\\"row\\\">\\r\\n    <div class='col-md-8 col-sm-12'>\\r\\n        <h4>Change Password</h4>\\r\\n        <form (ngSubmit)='onSubmit()' #f='ngForm'>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"control-label\\\" for=\\\"email\\\">Email:</label>\\r\\n                <div *ngIf='email.invalid && (email.dirty || email.touched)' class='alert alert-danger'>\\r\\n                    <div *ngIf='email.errors?.required'>You'll need an email to reset your password</div>\\r\\n                    <div *ngIf='email.errors?.pattern'>That doesn't appear to be an email</div>\\r\\n                    <div *ngIf='email.errors?.minlength'>Your email can't be less than 6 characters</div>\\r\\n                </div>\\r\\n                <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"credentials.email\\\"\\r\\n                    #email=\\\"ngModel\\\" required minlength=\\\"6\\\" pattern=\\\"^[A-z0-9._%+-]+@[A-z0-9.-]+\\\\.[A-z]{2,}$\\\" value='{{email}}'autofocus>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"control-label\\\" for=\\\"password\\\">Password:</label>\\r\\n                <div *ngIf='password.invalid && (password.dirty || password.touched)' class='alert alert-danger'>\\r\\n                    <div *ngIf='password.errors?.required'>Password is required</div>\\r\\n                    <div *ngIf='password.errors?.minlength'>Password cannot be less than 6 characters</div>\\r\\n                    <div *ngIf='password.errors?.maxlength'>Password cannot be more than 50 characters</div>\\r\\n                </div>\\r\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" name=\\\"password\\\"\\r\\n                    [(ngModel)]=\\\"credentials.password\\\" #password=\\\"ngModel\\\" required minlength=\\\"6\\\" maxlength=\\\"50\\\">\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"control-label\\\" for=\\\"newPassword\\\">New Password:</label>\\r\\n                <div *ngIf='newPassword.invalid && (newPassword.dirty || newPassword.touched)' class='alert alert-danger'>\\r\\n                    <div *ngIf='newPassword.errors?.required'>You must enter a new password</div>\\r\\n                    <div *ngIf='newPassword==password'>You cannot use your previous password</div>\\r\\n                    <div *ngIf='newPassword.errors?.minlength'>Password cannot be less than 6 characters</div>\\r\\n                    <div *ngIf='newPassword.errors?.maxlength'>Password cannot be more than 50 characters</div>\\r\\n                </div>\\r\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"newPassword\\\" name=\\\"newPassword\\\"\\r\\n                    [(ngModel)]=\\\"credentials.newPassword\\\" #newPassword=\\\"ngModel\\\" required minlength=\\\"6\\\" maxlength=\\\"50\\\">\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"control-label\\\" for=\\\"newPasswordConfirm\\\">Confirm New Password:</label>\\r\\n                <div *ngIf='newPasswordConfirm.invalid && (newPasswordConfirm.dirty || newPasswordConfirm.touched)'\\r\\n                    class='alert alert-danger'>\\r\\n                    <div *ngIf='newPasswordConfirm.errors?.required'>Please retype your password to confirm it</div>\\r\\n                    <div *ngIf='newPassword!=newPasswordConfirm'>Passwords must match</div>\\r\\n                </div>\\r\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"newPasswordConfirm\\\" name=\\\"newPasswordConfirm\\\"\\r\\n                    [(ngModel)]=\\\"credentials.newPasswordConfirm\\\" #newPasswordConfirm=\\\"ngModel\\\" required minlength=\\\"6\\\" maxlength=\\\"50\\\">\\r\\n            </div>\\r\\n\\r\\n            <button *ngIf='!(email.invalid || password.invalid || newPassword.invalid || newPasswordConfirm.invalid)'\\r\\n                class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Change Password</button>\\r\\n            <button *ngIf='(email.invalid || password.invalid || newPassword.invalid || newPasswordConfirm.invalid)'\\r\\n                class=\\\"btn btn-primary\\\" type=\\\"submit\\\" disabled>Change Password</button>\\r\\n            &nbsp;&nbsp;\\r\\n            <a class=\\\"btn btn-default\\\" routerLink='home'>Back to home</a>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<h2 mat-dialog-title>Verify Password</h2>\\r\\n<br>\\r\\n<mat-form-field>\\r\\n    <mat-hint align=\\\"start\\\"><strong>Confirm your password</strong></mat-hint>\\r\\n    <input matInput type=\\\"password\\\" id=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"data.input\\\" #password=\\\"ngModel\\\" required\\r\\n        minlength=\\\"6\\\" maxlength=\\\"50\\\" value=\\\"data.input\\\" placeholder=\\\"Password\\\">\\r\\n    <mat-error *ngIf='password.errors?.required'>Please enter your password to confirm your settings</mat-error>\\r\\n    <mat-error *ngIf='password.errors?.minlength'>Your password can't be less than 6 characters</mat-error>\\r\\n    <mat-error *ngIf='password.errors?.maxlength'>Your password can't be more than 50 characters</mat-error>\\r\\n</mat-form-field>\\r\\n<div mat-dialog-actions>\\r\\n    <button mat-stroked-button (click)=\\\"onNoClick()\\\">Cancel</button>\\r\\n    <button mat-raised-button color=\\\"accent\\\" [mat-dialog-close]=\\\"data.input\\\" cdkFocusInitial>Confirm</button>\\r\\n</div>\"","export default \"<h2 mat-dialog-title>Verify Password</h2>\\r\\n<br>\\r\\n<mat-form-field>\\r\\n    <mat-hint align=\\\"start\\\"><strong>Confirm your password</strong></mat-hint>\\r\\n    <input matInput type=\\\"password\\\" id=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"data.input\\\" #password=\\\"ngModel\\\" required\\r\\n        minlength=\\\"6\\\" maxlength=\\\"50\\\" value=\\\"data.input\\\" placeholder=\\\"Password\\\">\\r\\n    <mat-error *ngIf='password.errors?.required'>Please enter your password to confirm your settings</mat-error>\\r\\n    <mat-error *ngIf='password.errors?.minlength'>Your password can't be less than 6 characters</mat-error>\\r\\n    <mat-error *ngIf='password.errors?.maxlength'>Your password can't be more than 50 characters</mat-error>\\r\\n</mat-form-field>\\r\\n<div mat-dialog-actions>\\r\\n    <button mat-stroked-button (click)=\\\"onNoClick()\\\">Cancel</button>\\r\\n    <button mat-raised-button color=\\\"accent\\\" [mat-dialog-close]=\\\"data.input\\\" cdkFocusInitial>Confirm</button>\\r\\n</div>\"","export default \"<div *ngIf='account' class=\\\"row\\\">\\r\\n    <div class='col-sm-9'>\\r\\n        <mat-card id=\\\"info\\\" class=\\\"mat-elevation-z8\\\">\\r\\n            <h4>User Settings</h4>\\r\\n        </mat-card>\\r\\n        <br>\\r\\n        <mat-card id=\\\"secondary\\\" class=\\\"mat-elevation-z8\\\">\\r\\n        <mat-accordion>\\r\\n            <mat-expansion-panel>\\r\\n                <mat-expansion-panel-header>\\r\\n                    <mat-panel-title>\\r\\n                        Account\\r\\n                    </mat-panel-title>\\r\\n                    <mat-panel-description>\\r\\n                        Change how your account looks and feels\\r\\n                    </mat-panel-description>\\r\\n                </mat-expansion-panel-header>\\r\\n                <hr>\\r\\n                <mat-form-field>\\r\\n                    <mat-hint align=\\\"start\\\"><strong>How others will see you</strong></mat-hint>\\r\\n                    <mat-hint align=\\\"end\\\">{{newAccount.userName.length}} / 25</mat-hint>\\r\\n                    <input matInput size=\\\"25\\\" id=\\\"userName\\\" name=\\\"userName\\\" [(ngModel)]=\\\"newAccount.userName\\\" #userName=\\\"ngModel\\\"\\r\\n                        maxlength=\\\"25\\\" value=\\\"{{account.userName}}\\\" placeholder=\\\"User Name\\\" required>\\r\\n                        <button mat-button *ngIf=\\\"newAccount.userName\\\" matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"newAccount.userName=''\\\">\\r\\n                            <mat-icon>close</mat-icon>\\r\\n                        </button>\\r\\n                    <mat-error *ngIf='userName.errors?.maxlength'>Woah there! Try to keep your name under 25 characters</mat-error>\\r\\n                    <mat-error *ngIf='userName.errors?.required'>You'll need a name that others can view</mat-error>\\r\\n                </mat-form-field>\\r\\n                <br>\\r\\n                <br>\\r\\n                <br>\\r\\n                <small>Profile pictures coming soon!</small>\\r\\n                <!--<mat-form-field>\\r\\n                    Profile Picture Input Placeholder\\r\\n                </mat-form-field>-->\\r\\n                <br>\\r\\n                <br>\\r\\n                <br>\\r\\n                <label id=\\\"theme-radio\\\">Choose your theme</label>\\r\\n                <br>\\r\\n                <mat-radio-group aria-labelledby=\\\"radio-group\\\" class=\\\"theme-radio\\\" [(ngModel)]=\\\"newAccount.theme\\\">\\r\\n                    <mat-radio-button (click)=changeTheme(selectedTheme) class=\\\"radio-button\\\" *ngFor=\\\"let selectedTheme of themes\\\" [value]=\\\"selectedTheme\\\">\\r\\n                        {{selectedTheme}}\\r\\n                    </mat-radio-button>\\r\\n                </mat-radio-group>\\r\\n            </mat-expansion-panel>\\r\\n\\r\\n            <mat-expansion-panel>\\r\\n                <mat-expansion-panel-header>\\r\\n                    <mat-panel-title>\\r\\n                        Security\\r\\n                    </mat-panel-title>\\r\\n                    <mat-panel-description>\\r\\n                        Change how you keep your account safe\\r\\n                    </mat-panel-description>\\r\\n                </mat-expansion-panel-header>\\r\\n                <hr>\\r\\n                <mat-form-field>\\r\\n                    <mat-hint align=\\\"start\\\"><strong>How you will log in</strong></mat-hint>\\r\\n                    <input matInput type=\\\"email\\\" id=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"newAccount.email\\\"\\r\\n                        #email=\\\"ngModel\\\" required minlength=\\\"6\\\" pattern=\\\"^[A-z0-9._%+-]+@[A-z0-9.-]+\\\\.[A-z]{2,}$\\\"\\r\\n                        value='{{account.email}}' placeholder=\\\"Email\\\">\\r\\n                        <button mat-button *ngIf=\\\"newAccount.email\\\" matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"newAccount.email=''\\\">\\r\\n                            <mat-icon>close</mat-icon>\\r\\n                        </button>\\r\\n                    <mat-error *ngIf='email.errors?.required'>You'll need a valid email to recover your account and log in</mat-error>\\r\\n                    <mat-error *ngIf='email.errors?.pattern'>That doesn't appear to be a valid email</mat-error>\\r\\n                    <mat-error *ngIf='email.errors?.minlength'>Your email can't be less than 6 characters</mat-error>\\r\\n                </mat-form-field>\\r\\n                <br>\\r\\n                <br>\\r\\n                <br>\\r\\n                <button class=\\\"btn btn-default\\\" (click)=\\\"router.navigate(['user/reset']);\\\">Change your password</button>\\r\\n                &nbsp;&nbsp;\\r\\n                <button mat-flat-button color=\\\"warn\\\" (click)=\\\"delete()\\\">Delete Account</button>\\r\\n            </mat-expansion-panel>\\r\\n\\r\\n            <mat-expansion-panel>\\r\\n                <mat-expansion-panel-header>\\r\\n                    <mat-panel-title>\\r\\n                        Friends\\r\\n                    </mat-panel-title>\\r\\n                    <mat-panel-description>\\r\\n                        Manage who you're friends with\\r\\n                    </mat-panel-description>\\r\\n                </mat-expansion-panel-header>\\r\\n                <hr>\\r\\n                <mat-form-field>\\r\\n                    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n                </mat-form-field>\\r\\n                \\r\\n                <table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n                    <ng-container matColumnDef=\\\"userName\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef>&nbsp;&nbsp;Name&nbsp;&nbsp;</th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\">&nbsp;&nbsp;{{element.userName}}&nbsp;&nbsp;</td>\\r\\n                    </ng-container>\\r\\n                    <ng-container matColumnDef=\\\"email\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef>&nbsp;&nbsp;Email&nbsp;&nbsp;</th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\">&nbsp;&nbsp;{{element.email}}&nbsp;&nbsp;</td>\\r\\n                    </ng-container>\\r\\n                    <ng-container matColumnDef=\\\"numCanvases\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef>&nbsp;&nbsp;&nbsp;&nbsp;</th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\">&nbsp;&nbsp;{{element.numCanvases}}&nbsp;&nbsp;</td>\\r\\n                    </ng-container>\\r\\n                    <ng-container matColumnDef=\\\"options\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef>&nbsp;&nbsp;Options&nbsp;&nbsp;</th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                            <button *ngIf=\\\"!element.marked\\\" mat-button color=\\\"warn\\\" (click)=\\\"removeFriend(element)\\\">Remove Friend</button>\\r\\n                            <button *ngIf=\\\"element.marked\\\" mat-button color=\\\"warn\\\" disabled>Marked for removal</button>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n                \\r\\n                    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n                </table>\\r\\n            </mat-expansion-panel>\\r\\n        </mat-accordion>\\r\\n        <br>\\r\\n        <mat-card id=\\\"border\\\" class=\\\"mat-elevation-z8\\\">\\r\\n        <form (ngSubmit)='onSubmit()' #f='ngForm'>\\r\\n            <button mat-raised-button color=\\\"accent\\\" type=\\\"submit\\\" [disabled]=\\\"userName.invalid || email.invalid || !account\\\">Apply Settings</button>\\r\\n            &nbsp;&nbsp;\\r\\n            <button mat-stroked-button class=\\\"btn btn-default\\\" type=\\\"button\\\" routerLink=\\\"/home\\\">Back to home</button>\\r\\n            &nbsp;&nbsp;\\r\\n            <strong *ngIf='loginError?.length>0' class=\\\"text-danger\\\">{{ loginError }}\\r\\n                &nbsp;&nbsp;<a>Reset password?</a></strong>\\r\\n        </form>\\r\\n        </mat-card>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n    <div class='col-sm-3'>\\r\\n        <mat-card id=\\\"info\\\" class=\\\"mat-elevation-z8\\\">\\r\\n            <h3>Your Current (Saved) Details</h3>\\r\\n        </mat-card>\\r\\n        <br>\\r\\n        <mat-card id=\\\"border\\\" class=\\\"mat-elevation-z8\\\">\\r\\n        <h4><strong>Email:</strong> {{account.email}}</h4>\\r\\n        <hr>\\r\\n        <h4><strong>UserName:</strong> {{account.userName}}</h4>\\r\\n        <hr>\\r\\n        <h4><strong>Theme:</strong> {{account.theme}}</h4>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n</div>\\r\\n<div *ngIf='!account'>\\r\\n    <mat-spinner></mat-spinner>\\r\\n</div>\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export default \"dd {\\r\\n    overflow-wrap:break-word;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWJvdXQvYWJvdXQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHdCQUF3QjtBQUM1QiIsImZpbGUiOiJzcmMvYXBwL2Fib3V0L2Fib3V0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJkZCB7XHJcbiAgICBvdmVyZmxvdy13cmFwOmJyZWFrLXdvcmQ7XHJcbn0iXX0= */\"","import { Component } from '@angular/core';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { ReqresAccount, ReqresCanvas } from '../data-model-classes';\r\nimport { AuthService } from '../data-model-manager.service';\r\n\r\n@Component({\r\n    selector: 'app-about',\r\n    templateUrl: './about.component.html',\r\n    styleUrls: ['./about.component.css']\r\n})\r\nexport class AboutComponent {\r\n\r\n    // Properties\r\n\r\n    private account: ReqresAccount;\r\n    private canvas: string;\r\n    private accountToken?: string;\r\n    private accountTokenIssuedTimestamp: any;\r\n\r\n    // Initialization\r\n\r\n    constructor(\r\n        private jwtHelper: JwtHelperService,\r\n        private authService: AuthService\r\n    ) {\r\n        this.account = undefined;\r\n        this.accountToken, \r\n            this.canvas,\r\n            this.accountTokenIssuedTimestamp = \"No Token\";\r\n        if (localStorage.getItem('access_token'))\r\n            try {\r\n                this.accountToken = localStorage.getItem('access_token')\r\n                this.account = this.jwtHelper.decodeToken(this.accountToken);\r\n                this.accountTokenIssuedTimestamp = new Date(this.jwtHelper.decodeToken(this.accountToken).iat * 1000);\r\n                this.canvas = localStorage.getItem('canvas');\r\n\r\n                this.authService.reqresAccountGetById(this.account._id).subscribe((data) => {\r\n                    this.account = data;\r\n\r\n                    /*this.authService.reqresCanvasGetByParticipantId(this.account._id).subscribe((data) => {\r\n                        this.canvases = data;\r\n                    });*/\r\n\r\n                    /*this.authService.reqresAccountGetByFriendId(this.account._id).subscribe((data) => {\r\n                        this.friends = data;\r\n                    });*/\r\n                });\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n    }\r\n\r\n}\r\n","export default \".mat-form-field {\\r\\n  display: inline;\\r\\n  margin-right: 12px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWNjb3VudC1yZWdpc3Rlci9hY2NvdW50LXJlZ2lzdGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFlO0VBQ2Ysa0JBQWtCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvYWNjb3VudC1yZWdpc3Rlci9hY2NvdW50LXJlZ2lzdGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWZvcm0tZmllbGQge1xyXG4gIGRpc3BsYXk6IGlubGluZTtcclxuICBtYXJnaW4tcmlnaHQ6IDEycHg7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../data-model-manager.service';\r\nimport { ReqresAccount, ReqresCanvas } from '../data-model-classes'\r\n\r\nimport { Router } from '@angular/router';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n    selector: 'app-account-register',\r\n    templateUrl: './account-register.component.html',\r\n    styleUrls: ['./account-register.component.css']\r\n})\r\nexport class AccountRegisterComponent implements OnInit {\r\n\r\n    // Properties\r\n\r\n    private account: ReqresAccount;\r\n    private accounts: ReqresAccount[];\r\n    private canvas: ReqresCanvas;\r\n    private creationError: string;\r\n    private formGroup: FormGroup;\r\n    private emailFormGroup: FormGroup;\r\n    private userNameFormGroup: FormGroup;\r\n    private passwordFormGroup: FormGroup;\r\n\r\n    // Initialization\r\n\r\n    get formArray(): AbstractControl | null { return this.formGroup.get('formArray'); }\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private authService: AuthService,\r\n        private jwtHelper: JwtHelperService,\r\n        private formBuilder: FormBuilder,\r\n        private snackBar: MatSnackBar\r\n    ) {\r\n        this.account = new ReqresAccount();\r\n        this.account.email = '';\r\n        this.account.userName = '';\r\n        this.account.password = '';\r\n        this.account.passwordConfirm = '';\r\n        this.account.isAdmin = false;\r\n        this.creationError = '';\r\n        this.accounts = undefined;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.authService.reqresAccountGetAll().subscribe(data => {\r\n            if (data)\r\n                this.accounts = data;\r\n        });\r\n\r\n        this.emailFormGroup = this.formBuilder.group({\r\n            emailFormCtrl: ['', [Validators.required, Validators.pattern(\"^[A-z0-9._%+-]+@[A-z0-9.-]+\\.[A-z]{2,}$\")]]\r\n        });\r\n\r\n        this.userNameFormGroup = this.formBuilder.group({\r\n            userNameFormCtrl: ['', [Validators.required, Validators.maxLength(50)]]\r\n        });\r\n\r\n        this.passwordFormGroup = this.formBuilder.group({\r\n            passwordFormCtrl: ['', Validators.required],\r\n            passwordConfirmFormCtrl: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(50)]]\r\n        });\r\n\r\n        this.formGroup = this.formBuilder.group({\r\n            formArray: this.formBuilder.array([\r\n                this.emailFormGroup,\r\n                this.userNameFormGroup,\r\n                this.passwordFormGroup\r\n            ])\r\n        });\r\n    }\r\n\r\n    regTest(expression, test): boolean {\r\n        return RegExp(expression).test(test);\r\n    }\r\n\r\n    existTest(email): boolean {\r\n        try {\r\n            let flag = false;\r\n            this.accounts.forEach(element => {\r\n                if (!flag && element.email == email)\r\n                    flag = true;\r\n            });\r\n            return flag;\r\n        } catch (error) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    onSubmit(): void {\r\n        this.account.email = this.formGroup.get('formArray').value[0].emailFormCtrl;\r\n        this.account.userName = this.formGroup.get('formArray').value[1].userNameFormCtrl;\r\n        this.account.password = this.formGroup.get('formArray').value[2].passwordFormCtrl;\r\n        this.account.passwordConfirm = this.formGroup.get('formArray').value[2].passwordConfirmFormCtrl;\r\n        this.authService.createAccount(this.account).subscribe(data => {\r\n            if (data) {\r\n                this.snackBar.open(this.account.email + \" created successfully, you can now log in!\", \"Thanks\", {\r\n                    duration: 8000,\r\n                });\r\n                this.router.navigate(['/login']);\r\n            }\r\n            else this.creationError = localStorage.getItem('error');\r\n        });\r\n    }\r\n\r\n    reset(): void {\r\n        this.router.navigate(['/forgotpass']);\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { A11yModule } from '@angular/cdk/a11y';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { CdkStepperModule } from '@angular/cdk/stepper';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { CdkTreeModule } from '@angular/cdk/tree';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\n\r\n@NgModule({\r\n    exports: [\r\n        A11yModule,\r\n        CdkStepperModule,\r\n        CdkTableModule,\r\n        CdkTreeModule,\r\n        DragDropModule,\r\n        MatAutocompleteModule,\r\n        MatBadgeModule,\r\n        MatBottomSheetModule,\r\n        MatButtonModule,\r\n        MatButtonToggleModule,\r\n        MatCardModule,\r\n        MatCheckboxModule,\r\n        MatChipsModule,\r\n        MatStepperModule,\r\n        MatDatepickerModule,\r\n        MatDialogModule,\r\n        MatDividerModule,\r\n        MatExpansionModule,\r\n        MatGridListModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatListModule,\r\n        MatMenuModule,\r\n        MatNativeDateModule,\r\n        MatPaginatorModule,\r\n        MatProgressBarModule,\r\n        MatProgressSpinnerModule,\r\n        MatRadioModule,\r\n        MatRippleModule,\r\n        MatSelectModule,\r\n        MatSidenavModule,\r\n        MatSliderModule,\r\n        MatSlideToggleModule,\r\n        MatSnackBarModule,\r\n        MatSortModule,\r\n        MatTableModule,\r\n        MatTabsModule,\r\n        MatToolbarModule,\r\n        MatTooltipModule,\r\n        MatTreeModule,\r\n        PortalModule,\r\n        ScrollingModule,\r\n    ]\r\n})\r\nexport class AngularMaterials { }","import {\r\n    trigger, animateChild, group, stagger,\r\n    transition, animate, style, query\r\n} from '@angular/animations';\r\n\r\n// Animations come in many types;\r\n// - pageAnimations defines loading the page, in Angular this should only be used once if routes are effectively used to navigate\r\n// - routeAnimation defines loading router transitions through the angular router\r\n\r\n// Routable animations\r\nexport const animations = [\r\n    trigger('pageAnimations', [\r\n        transition(':enter', [\r\n            query('#routeBody, header, footer', [style({ opacity: 0 })], { optional: true }),\r\n            query('header', [\r\n                style({ opacity: 0, transform: 'translateX(-150px)' }),\r\n                stagger(-30, [\r\n                    animate('700ms cubic-bezier(0.35, 0, 0.25, 1)', style({ opacity: 1, transform: 'none' }))\r\n                ])\r\n            ], { optional: true }), // This simply means if no DOM element is found matching, it's safe to skip the animation\r\n            query('#routeBody', [\r\n                style({ opacity: 0, transform: 'translateX(80px)' }),\r\n                stagger(-30, [\r\n                    animate('700ms cubic-bezier(0.35, 0, 0.25, 1)', style({ opacity: 1, transform: 'none' }))\r\n                ])\r\n            ], { optional: true }),\r\n        ])\r\n    ]),\r\n    trigger('routeAnimation', [ // Routes work on a first-match basis. * means any state, <=> means between 2 states, => means to state. Other states include void, or css selectors\r\n        transition('* => *', [\r\n            // REQUIRED BY ANGULAR SPECIFICATIONS\r\n            // Prevents unintended behaviour of static versus dynamic elements\r\n            style({ position: 'relative' }),\r\n            query(':leave, footer', [\r\n                style({\r\n                    position: 'absolute',\r\n                    width: '100%',\r\n                    right: '0%'\r\n                })\r\n            ], { optional: true }),\r\n\r\n            // Of note: ':enter' must remain of type position 'relative' and width '100%' to ensure no footer clipping\r\n\r\n            query(':enter', [style({ position: 'absolute', width: '100%', right: '0%', opacity: 0 })], { optional: true }),\r\n            query('footer', [style({ opacity: 0 })], { optional: true }),\r\n            group([\r\n                query(':leave', [\r\n                    style({ top: '0%', right: '-80%', opacity: 1, transform: 'translateX(-80%)' }),\r\n                    animate('700ms cubic-bezier(0.35, 0, 0.25, 1)', style({ opacity: 0, transform: 'none' })),\r\n                    animateChild()\r\n                ], { optional: true }),\r\n                query(':enter', [ // works when set to absolute positioning?\r\n                    style({ top: '0%', opacity: 0, transform: 'translateX(16%)' }),\r\n                    stagger(50, [\r\n                        animate('700ms cubic-bezier(0.35, 0, 0.25, 1)', style({ opacity: 1, position: 'relative', transform: 'none' })),\r\n                    ]),\r\n                    animateChild()\r\n                ], { optional: true }),\r\n            ]),\r\n            query('footer', [\r\n                style({ opacity: 0, transform: 'translateY(100px)' }),\r\n                stagger(50, [\r\n                    animate('1000ms cubic-bezier(0.35, 0, 0.25, 1)', style({ opacity: 1, transform: 'none' }))\r\n                ])\r\n            ])\r\n        ])\r\n    ])\r\n];","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { CanvasComponent } from './canvas/canvas.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { AboutComponent } from './about/about.component';\r\nimport { GuardAuthService } from './guard-auth.service';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { AccountRegisterComponent } from './account-register/account-register.component';\r\nimport { LibraryComponent } from './library/library.component';\r\nimport { UserSettingsComponent } from './user-settings/user-settings.component';\r\nimport { ResetComponent } from './reset/reset.component';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component'\r\nimport { InviteComponent } from './invite/invite.component'\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/home', pathMatch: 'full'},\r\n  { path: 'home', component: HomeComponent, data: { animation: 'home' } },\r\n  { path: 'about', component: AboutComponent, data: { animation: 'about' } },\r\n  { path: 'register', component: AccountRegisterComponent, data: { animation: 'register' } },\r\n  { path: 'login', component: LoginComponent, data: { animation: 'login' } },\r\n  { path: 'settings', component: UserSettingsComponent, canActivate: [GuardAuthService], data: { animation: 'settings' } },\r\n  { path: 'library', component: LibraryComponent, canActivate: [GuardAuthService], data: { animation: 'library' } },\r\n  { path: 'accept/:email', component: LibraryComponent, canActivate: [GuardAuthService], data: { animation: 'library' } },\r\n  { path: 'library/view/:email', component: LibraryComponent, canActivate: [GuardAuthService], data: { animation: 'library' } },\r\n  { path: 'library/sort/:email', component: LibraryComponent, canActivate: [GuardAuthService], data: { animation: 'library' } },\r\n  { path: 'edit/:email/:canvas', component: CanvasComponent, canActivate: [GuardAuthService], data: { animation: 'library' } },\r\n  { path: 'user/reset', component: ResetComponent, canActivate: [GuardAuthService], data: { animation: 'account' } },\r\n  { path: 'forgotpass', component: ForgotPasswordComponent, data: { animation: 'account' } },\r\n  { path: 'invite', component: InviteComponent, canActivate: [GuardAuthService], data: { animation: 'account' } },\r\n  { path: 'invite/:email', component: InviteComponent, canActivate: [GuardAuthService], data: { animation: 'account' } }\r\n];  \r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {onSameUrlNavigation: 'reload'})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","// Library imports\r\nimport { Component, HostBinding, OnInit } from '@angular/core';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { transition } from '@angular/animations'\r\nimport { AuthService } from './data-model-manager.service';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { ReqresAccount, ReqresCanvasCollectionPackage, ReqresAccountCollectionPackage } from './data-model-classes';\r\nimport {UserSettingsComponent} from './user-settings/user-settings.component'\r\n\r\n// Component imports\r\nimport { animations } from './animations';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n  animations: animations\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  private account: ReqresAccount\r\n  private tempTheme: string;\r\n  constructor(\r\n    private authService: AuthService,\r\n    private jwtHelper: JwtHelperService,\r\n  ) {\r\n    let token = this.authService.getToken();\r\n    try {\r\n      if (token) {\r\n        this.account = this.jwtHelper.decodeToken(token);\r\n        this.authService.reqresAccountGetById(this.account._id).subscribe((data) => {\r\n          this.account = data;\r\n        });\r\n      }\r\n    } catch (err) {\r\n      localStorage.clear()\r\n      console.log(err);\r\n    }\r\n  }\r\n  ngOnInit() {\r\n    if (this.account)\r\n      this.tempTheme = this.account.theme.replace(/\\s+/g, '-').toLowerCase();\r\n    else \r\n      this.tempTheme = \"dark-pink\";\r\n    this.tempTheme += \"-theme\";\r\n    document.getElementById('theme').classList.add(this.tempTheme);\r\n  }\r\n\r\n  @HostBinding('@pageAnimations')\r\n  public animatePage = true;\r\n  public title = 'Inkshare';\r\n\r\n  getAnimationData(outlet: RouterOutlet) {\r\n    return outlet && outlet.activatedRouteData && outlet.activatedRouteData['animation'];\r\n  }\r\n}","import { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { JwtModule } from \"@auth0/angular-jwt\";\r\nimport { ColorPickerModule } from 'ngx-color-picker';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { CanvasComponent, SettingsDialog } from './canvas/canvas.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { AboutComponent } from './about/about.component';\r\nimport { AuthService } from './data-model-manager.service';\r\nimport { GuardAuthService } from './guard-auth.service';\r\nimport { InterceptTokenService } from \"./intercept-token.service\";\r\nimport { AccountRegisterComponent } from './account-register/account-register.component';\r\nimport { LibraryComponent, CreateDialog, DeleteDialog, AddFriendDialog, AddParticipantDialog } from './library/library.component';\r\nimport { UserSettingsComponent, PasswordDialog, DeleteAccountDialog } from './user-settings/user-settings.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ResetComponent } from './reset/reset.component';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { InviteComponent } from './invite/invite.component';\r\nimport { AngularMaterials } from './angular-materials';\r\n\r\nexport function tokenGetter() { return localStorage.getItem('access_token'); }\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    HeaderComponent,\r\n    CanvasComponent,\r\n    LoginComponent,\r\n    AccountRegisterComponent,\r\n    LibraryComponent,\r\n    AboutComponent,\r\n    UserSettingsComponent,\r\n    ResetComponent,\r\n    ForgotPasswordComponent,\r\n    InviteComponent,\r\n    PasswordDialog,\r\n    CreateDialog,\r\n    DeleteDialog,\r\n    DeleteAccountDialog,\r\n    SettingsDialog,\r\n    AddFriendDialog,\r\n    AddParticipantDialog\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    ColorPickerModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    BrowserModule,\r\n    FlexLayoutModule,\r\n    AngularMaterials,\r\n    ReactiveFormsModule,\r\n    JwtModule.forRoot({\r\n      config: {\r\n        tokenGetter: tokenGetter,\r\n        authScheme: 'JWT'\r\n      }\r\n    }),\r\n    BrowserAnimationsModule\r\n  ],\r\n  exports: [\r\n    PasswordDialog,\r\n    CreateDialog,\r\n    DeleteDialog,\r\n    DeleteAccountDialog,\r\n    SettingsDialog,\r\n    AddFriendDialog,\r\n    AddParticipantDialog\r\n  ],\r\n  providers:[\r\n    AuthService,\r\n    GuardAuthService,\r\n    LoginComponent,\r\n    {\r\n        provide: HTTP_INTERCEPTORS,\r\n        useClass: InterceptTokenService,\r\n        multi: true\r\n    }\r\n],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [\r\n    PasswordDialog,\r\n    CreateDialog,\r\n    DeleteDialog,\r\n    DeleteAccountDialog,\r\n    SettingsDialog,\r\n    AddFriendDialog,\r\n    AddParticipantDialog\r\n  ]\r\n})\r\nexport class AppModule { }\r\n","export default \"mat-slider {\\r\\n    width: 300px;\\r\\n}\\r\\n\\r\\nmat-slider.outWidth {\\r\\n    width: 150px;\\r\\n}\\r\\n\\r\\nimg.preview {\\r\\n    width: 50px;\\r\\n    height: 50px;\\r\\n}\\r\\n\\r\\n#canvas-div {\\r\\n    border: 3px;\\r\\n    border-style: hidden;\\r\\n    border-color: rgb(51, 51, 51);\\r\\n    overflow: auto;\\r\\n}\\r\\n\\r\\ninput {\\r\\n    color: black;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2FudmFzL2NhbnZhcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtBQUNoQjs7QUFFQTtJQUNJLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLFdBQVc7SUFDWCxvQkFBb0I7SUFDcEIsNkJBQTZCO0lBQzdCLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxZQUFZO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvY2FudmFzL2NhbnZhcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LXNsaWRlciB7XHJcbiAgICB3aWR0aDogMzAwcHg7XHJcbn1cclxuXHJcbm1hdC1zbGlkZXIub3V0V2lkdGgge1xyXG4gICAgd2lkdGg6IDE1MHB4O1xyXG59XHJcblxyXG5pbWcucHJldmlldyB7XHJcbiAgICB3aWR0aDogNTBweDtcclxuICAgIGhlaWdodDogNTBweDtcclxufVxyXG5cclxuI2NhbnZhcy1kaXYge1xyXG4gICAgYm9yZGVyOiAzcHg7XHJcbiAgICBib3JkZXItc3R5bGU6IGhpZGRlbjtcclxuICAgIGJvcmRlci1jb2xvcjogcmdiKDUxLCA1MSwgNTEpO1xyXG4gICAgb3ZlcmZsb3c6IGF1dG87XHJcbn1cclxuXHJcbmlucHV0IHtcclxuICAgIGNvbG9yOiBibGFjaztcclxufSJdfQ== */\"","import { Component, OnInit, OnDestroy, Inject } from '@angular/core';\r\nimport { WebSocketService } from '../web-socket.service';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../data-model-manager.service';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { AddParticipantDialog } from '../library/library.component'\r\nimport { FormControl } from '@angular/forms';\r\nimport { Validators } from '@angular/forms';\r\nimport { ReqresCanvas, ReqresAccount } from '../data-model-classes';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Observable, Observer } from 'rxjs';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport * as p5 from 'p5'\r\nimport 'hammerjs';\r\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\n\r\n@Component({\r\n  selector: 'app-canvas',\r\n  templateUrl: './canvas.component.html',\r\n  styleUrls: ['./canvas.component.css']\r\n})\r\n\r\nexport class CanvasComponent implements OnInit, OnDestroy {\r\n\r\n  private account: ReqresAccount;\r\n  private participants: ReqresAccount[];\r\n  private canvas: ReqresCanvas;\r\n  private canvases: ReqresCanvas[];\r\n\r\n  private asyncTabs: Observable<string[]>;\r\n  private backgroundR: number;\r\n  private backgroundG: number;\r\n  private backgroundB: number;\r\n  private erase: boolean;\r\n  private fillShape: boolean;\r\n  private showOutline: boolean;\r\n  private outlineWidth: number;\r\n  private selectedRed: number;\r\n  private selectedGreen: number;\r\n  private selectedBlue: number;\r\n  private outlineRed: number;\r\n  private outlineGreen: number;\r\n  private outlineBlue: number;\r\n  private selectedBrush: string;\r\n  private selectedSize: number;\r\n  private room: string;\r\n  private image: any;\r\n  private p: any;\r\n  private permissions: string;\r\n  private disableDrawing: boolean;\r\n\r\n  myControl = new FormControl('', [\r\n    Validators.required,\r\n    Validators.minLength(6),\r\n    Validators.email\r\n  ]);\r\n  filteredOptions: Observable<string[]>;\r\n\r\n  private displayedColumns: string[] = ['name', 'email', 'permissions', 'options'];\r\n  private dataSource;\r\n\r\n\r\n  //Button listeners\r\n  colorChange(obj: any) {\r\n    //console.log(obj) //obj format: Object { slider: \"saturation-lightness\", color: \"rgb(197,63,63)\" }\r\n    var rgb = obj.color.slice(4, -1).split(',', 3); //slice and split the 'color' property of the returned obj from the color picker\r\n    if (obj.color.slice(0, 3) === \"rgb\") {\r\n      this.selectedRed = rgb[0];\r\n      this.selectedGreen = rgb[1];\r\n      this.selectedBlue = rgb[2];\r\n    }\r\n  }\r\n\r\n  outlineChange(obj: any) {\r\n    //console.log(obj) //obj format: Object { slider: \"saturation-lightness\", color: \"rgb(197,63,63)\" }\r\n    var rgb = obj.color.slice(4, -1).split(',', 3);\r\n    if (obj.color.slice(0, 3) === \"rgb\") {\r\n      this.outlineRed = rgb[0];\r\n      this.outlineGreen = rgb[1];\r\n      this.outlineBlue = rgb[2];\r\n    }\r\n  }\r\n\r\n  backgroundChange(obj: any) {\r\n    console.log(obj) //obj format: Object { slider: \"saturation-lightness\", color: \"rgb(197,63,63)\" }\r\n    var rgb = obj.color.slice(4, -1).split(',', 3); //slice and split the 'color' property of the returned obj from the color picker\r\n    if (obj.color.slice(0, 3) === \"rgb\") {\r\n      this.backgroundR = rgb[0];\r\n      this.backgroundG = rgb[1];\r\n      this.backgroundB = rgb[2];\r\n    }\r\n  }\r\n\r\n  canvasWidthChange(value: number) {\r\n    if (value)\r\n      if (value <= 10000)\r\n        this.canvas.dimensions.width = value;\r\n  }\r\n\r\n  canvasNameChange(value: string) {\r\n    if (value)\r\n      this.canvas.name = value;\r\n  }\r\n\r\n  canvasHeightChange(value: number) {\r\n    if (value)\r\n      if (value <= 10000)\r\n        this.canvas.dimensions.height = value;\r\n  }\r\n\r\n  saveCanvas() {\r\n    if (this.disableDrawing) {\r\n      this.snackBar.open(\"Sorry, the canvas is busy at this time. Try again in a moment.\", \"Oops\", {\r\n        duration: 4000,\r\n      });\r\n    }\r\n    this.disableDrawing = true;\r\n    this.image = this.p.get();\r\n    this.canvas.image = [undefined];\r\n    this.canvas.image.pop();\r\n    for (let row = 0; row < this.canvas.dimensions.height; row++) {\r\n      this.p.copy(this.image, row, 0, this.canvas.dimensions.width, row, row, 0, this.canvas.dimensions.width, row);\r\n      this.canvas.image.push(\r\n        btoa(\r\n          new Uint8Array(this.image.pixels)\r\n          .reduce(function (data, byte) {\r\n              return data + String.fromCharCode(byte);\r\n            }, ''\r\n          )\r\n        )\r\n      );\r\n    }\r\n    this.authService.updateCanvas(this.canvas).subscribe((data) => {\r\n      this.snackBar.open(\"Success, your canvas was saved successfully.\", \"Thanks\", {\r\n        duration: 3200,\r\n      });\r\n    });\r\n    this.disableDrawing = false;\r\n  }\r\n\r\n  loadCanvas() {\r\n    this.disableDrawing = true;\r\n    let index = 0; //(this.canvas.dimensions.height * this.canvas.dimensions.width * 4) - 1;\r\n    for (let row = 0; row < this.canvas.dimensions.height; row++) {\r\n      let pixels = new Uint8Array(atob(this.canvas.image[row]).split(\"\").map(function (c) {\r\n        return c.charCodeAt(0);\r\n      }));\r\n      for (let col = 0; col < this.canvas.dimensions.width; col++) {\r\n        //console.log(`${index} (${row}, ${col}) - [${pixels[index - 3]}, ${pixels[index - 2]},${pixels[index - 1]}, ${pixels[index - 0]}]`)\r\n        let color;\r\n        if (pixels[index] != undefined)\r\n          color = this.p.color(pixels[index+0], pixels[index+1], pixels[index+2], pixels[index+3]);\r\n        else\r\n          color = this.p.color(0, 0, 0, 0);\r\n        index+=4;\r\n        this.p.set(col, row, color);\r\n      }\r\n    }\r\n    this.p.updatePixels();\r\n    this.disableDrawing = false;\r\n  }\r\n\r\n  refreshBtnOnClick() {\r\n    if (this.permissions == \"Visitor\")\r\n      return;\r\n    var retData: returnData = new returnData();\r\n    retData.refresh = true;\r\n    retData.room = this.room;\r\n    retData.backgroundR = this.backgroundR;\r\n    retData.backgroundG = this.backgroundG;\r\n    retData.backgroundB = this.backgroundB;\r\n    retData.canvasWidth = this.canvas.dimensions.width;\r\n    retData.canvasHeight = this.canvas.dimensions.height;\r\n    this.webSocketService.emit('refresh', retData)\r\n    /*let response = this.authService.updateCanvas(this.canvas).subscribe(() => { // Too laggy\r\n      this.snackBar.open(\"Success, canvas size  and background updated!\", \"Thanks\", {\r\n        duration: 2000\r\n     });\r\n    });*/\r\n    \r\n  }\r\n\r\n  brushChangebtn(brush: string) {\r\n    this.selectedBrush = brush;\r\n  }\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private webSocketService: WebSocketService,\r\n    private jwtHelper: JwtHelperService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private dialog: MatDialog,\r\n    private snackBar: MatSnackBar\r\n  ) {\r\n    this.canvas = new ReqresCanvas();\r\n\r\n    this.init();\r\n\r\n    this.room = `${this.route.snapshot.params['email']}/${this.route.snapshot.params['canvas']}`; //initalize room to email + room name (pseudo private room as emails are unique)\r\n    this.selectedRed = 255;\r\n    this.selectedGreen = 255;\r\n    this.selectedBlue = 255;\r\n    this.outlineRed = 100;\r\n    this.outlineGreen = 100;\r\n    this.outlineBlue = 100;\r\n    this.backgroundR = 200;\r\n    this.backgroundG = 200;\r\n    this.backgroundB = 200;\r\n    this.selectedBrush = 'ellipse';\r\n    this.selectedSize = 36;\r\n    this.fillShape = true;\r\n    this.showOutline = false;\r\n    this.erase = false;\r\n    this.outlineWidth = 1;\r\n    this.disableDrawing = false;\r\n\r\n    this.webSocketService.connect();\r\n    this.webSocketService.setRoom(this.room);\r\n  }\r\n\r\n  init() {\r\n    if (localStorage.getItem('access_token') && localStorage.getItem('canvas'))\r\n      try {\r\n        this.authService.reqresCanvasGetById(localStorage.getItem('canvas')).subscribe((data1) => {\r\n          this.canvas = data1;\r\n          console.log(this.canvas)\r\n          this.account = this.jwtHelper.decodeToken(localStorage.getItem('access_token'));\r\n          this.authService.reqresAccountGetById(this.account._id).subscribe((data2) => {\r\n            this.account = data2;\r\n            this.authService.reqresCanvasGetAll().subscribe((data3) => {\r\n              this.canvases = data3;\r\n            });\r\n            if (this.canvas.name == this.route.snapshot.params['canvas'] || (this.canvas.type == \"Locked\" && this.account._id != this.canvas.owner)) {\r\n              this.permissions = undefined;\r\n              this.canvas.participants.forEach(participant => {\r\n                if (participant._id == this.account._id) {\r\n                  this.permissions = participant.permissions;\r\n                  let tabs = [\r\n                    \"File\",\r\n                    \"Tools\",\r\n                    \"Insert\"\r\n                  ];\r\n                  if (this.permissions == \"Owner\" || this.permissions == \"Moderator\")\r\n                    tabs.push(\"Canvas\");\r\n                  this.asyncTabs = new Observable((observer: Observer<string[]>) => {\r\n                    setTimeout(() => {\r\n                      observer.next(tabs);\r\n                    }, 2000); // Timeout in ms\r\n                  });\r\n                  return;\r\n                }\r\n              });\r\n              if (!this.permissions && this.canvas.type != \"Public\" && this.canvas.type != \"Featured\")\r\n                this.router.navigate(['/library', this.account.email]); // TODO: Make this lead to a request access page?\r\n              else if (!this.permissions && this.canvas.type == \"Public\")\r\n                this.permissions = \"Collaborator\";\r\n              else if (!this.permissions && this.canvas.type == \"Featured\")\r\n                this.permissions = \"Visitor\";\r\n              this.authService.reqresAccountGetByCanvasId(this.canvas._id).subscribe((data3) => {\r\n                this.participants = data3;\r\n              });\r\n            } else { // ID DOESNT MATCH URL // DOUBLE VERIFICATION SYSTEM\r\n              this.router.navigate(['/library', this.account.email]);\r\n            }\r\n          });\r\n        });\r\n      } catch (err) { console.error(err); }\r\n    else if (!localStorage.getItem('access_token'))\r\n      this.router.navigate(['/login']);\r\n    else\r\n      this.router.navigate(['/library', this.account.email]);\r\n  }\r\n\r\n  shareCanvas(canvas) {\r\n    /*this.options = [];\r\n    this.friends.forEach(friend => {\r\n      this.options.push(friend.email);\r\n    });*/\r\n    this.disableDrawing = true;\r\n    this.dataSource = new MatTableDataSource(/*this.friends*/)\r\n    const dialogRef = this.dialog.open(AddParticipantDialog, {\r\n      height: '300px',\r\n      width: '400px',\r\n      data: {\r\n        account: this.account,\r\n        friends: this.dataSource,\r\n        myControl: this.myControl,\r\n        permissions: [\r\n          { value: 'Collaborator' },\r\n          { value: 'Moderator' },\r\n          { value: 'Visitor' }\r\n        ],\r\n        permission: \"\",\r\n        filteredOptions: this.filteredOptions\r\n      }\r\n    });\r\n    dialogRef.afterClosed().subscribe(data => {\r\n      this.disableDrawing = false;\r\n      if (data)\r\n        if (data.myControl)\r\n          if (data.myControl.value) {\r\n            let dupeFlag = true;\r\n            if (data.myControl.value == this.account.email) {\r\n              this.snackBar.open(\"Sorry, You can't add yourself to a canvas you're already in.\", \"Oops\", {\r\n                duration: 4500,\r\n              });\r\n              this.shareCanvas(canvas)\r\n              return;\r\n            } else {\r\n              /*this.accounts.forEach(account => {\r\n                if (account.email == data.myControl.value) {\r\n                  dupeFlag = false;\r\n                  canvas.participants.forEach(participant => {\r\n                    if (account._id == participant._id) {\r\n                      dupeFlag = true;\r\n                      this.snackBar.open(\"Sorry, That user is already a participant.\", \"Oops\", {\r\n                        duration: 3500\r\n                      });\r\n                      return;\r\n                    }\r\n                  });\r\n                  if (!dupeFlag) {\r\n                    // TODO: Allow for different perms from dropdown\r\n                    canvas.participants.push({ _id: account._id, permissions: \"Collaborator\" })\r\n                    let response = this.authService.updateCanvas(canvas).subscribe((data1) => {\r\n                      this.mail.id = account._id;\r\n                      this.mail.subject = 'A canvas was shared with you.';\r\n                      this.mail.content = `\r\n                                            <p>Hey there, just letting you know that ${this.account.userName} has invited you to ${this.canvas.name}.<p>\r\n                                            <p><a href=\"https://inkshare-frontend.herokuapp.com/library/${data.myControl.value}\">View it here!</a></p>\r\n                                            `;\r\n                      this.authService.sendMail(this.mail).subscribe((data2) => {\r\n                        this.snackBar.open(\"Success, \" + data.myControl.value + \" was invited to be a \" + \"participant\" + \"!\", \"Thanks\", {\r\n                          duration: 3200\r\n                        });\r\n                      });\r\n                    });\r\n                  } else return;\r\n                }\r\n              });*/\r\n            }\r\n          }\r\n    });\r\n  }\r\n\r\n  canvasSettings() {\r\n    if (this.permissions != \"Owner\" && this.permissions != \"Moderator\") {\r\n      this.snackBar.open(\"Sorry, you can't modify this!\", \"Oops\", {\r\n        duration: 3200\r\n      });\r\n      return;\r\n    }\r\n    this.disableDrawing = true;\r\n    this.dataSource = new MatTableDataSource(this.participants)\r\n    let typesArray = [\r\n      { value: 'Private' },\r\n      { value: 'Public' },\r\n      { value: 'Locked' }\r\n    ];\r\n    if (this.account.isAdmin)\r\n      typesArray.push({ value: 'Featured' });\r\n    this.dataSource = new MatTableDataSource(this.participants);\r\n    const dialogRef = this.dialog.open(SettingsDialog, {\r\n      height: '550px',\r\n      width: '900px',\r\n      data: {\r\n        displayedColumns: this.displayedColumns,\r\n        canvas: this.canvas,\r\n        type: this.canvas.type,\r\n        types: typesArray,\r\n        participants: this.participants,\r\n        dataSource: this.dataSource\r\n      },\r\n    });\r\n    dialogRef.afterClosed().subscribe(data => {\r\n      this.disableDrawing = false;\r\n      if (data) {\r\n        if (data.participants) {\r\n          let dupeFlag = false;\r\n          this.canvases.forEach(data1 => {\r\n            if (data1.owner == this.account._id && data1.name == data.canvas.name)\r\n              if (data1._id != this.canvas._id) {\r\n                dupeFlag = true;\r\n                return;\r\n              }\r\n          });\r\n          if (dupeFlag) {\r\n            this.authService.reqresCanvasGetById(this.canvas._id).subscribe((data1) => {\r\n              this.canvas = data1;\r\n              this.snackBar.open(\"Sorry, \" + data.canvas.name + \" already exists on your account!\", \"Oops\", {\r\n                duration: 3200\r\n              });\r\n            });\r\n            return;\r\n          } else {\r\n            if (data.canvas.name)\r\n              this.canvas.name = data.canvas.name;\r\n            if (data.participants[0]._id == data.canvas.owner)\r\n              this.canvas.participants = data.participants\r\n            let response = this.authService.updateCanvas(this.canvas).subscribe((data1) => {\r\n              this.snackBar.open(\"Success, canvas settings saved!\", \"Thanks\", {\r\n                duration: 4000\r\n              });\r\n            });\r\n          }\r\n        } else\r\n          this.init();\r\n      } else\r\n        this.init();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() { // save the canvas\r\n    localStorage.removeItem('canvas');\r\n    localStorage.removeItem('width');\r\n    localStorage.removeItem('height');\r\n    console.log(\"Canvas Destroyed\");\r\n  }\r\n\r\n  ngOnInit() {\r\n    try {\r\n      this.authService.reqresCanvasGetById(localStorage.getItem('canvas')).subscribe((data1) => {\r\n        this.canvas = data1;\r\n        //implement p5.js functions and socket.io listeners/emitters inside the const s variable \r\n        const s = (p) => {\r\n\r\n          let canvas\r\n          p.preload = () => { console.log('Preload Complete'); }\r\n\r\n          p.setup = () => {\r\n            try {\r\n              console.log('Canvas Setup');\r\n              canvas = p.createCanvas(this.canvas.dimensions.width, this.canvas.dimensions.height);\r\n              canvas.parent('canvas-div');\r\n              p.background(this.backgroundR, this.backgroundG, this.backgroundB);\r\n              this.p = p;\r\n              this.loadCanvas();\r\n            } catch (error) {\r\n              this.disableDrawing = false;\r\n              console.log(error)\r\n              //location.reload(); // Temp solution to null canvases\r\n            }\r\n          }\r\n\r\n          //called when mouse is being held down and dragged\r\n          p.mouseDragged = () => {\r\n            if (this.permissions == \"Visitor\" || this.disableDrawing)\r\n              return;\r\n\r\n            var retData: returnData = new returnData();\r\n            retData.x = p.mouseX;\r\n            if (retData.x > this.canvas.dimensions.width || retData.x < 0)\r\n              return;\r\n            retData.y = p.mouseY;\r\n            if (retData.y > this.canvas.dimensions.height || retData.y < 0)\r\n              return;\r\n            retData.r = this.selectedRed;\r\n            retData.g = this.selectedGreen;\r\n            retData.b = this.selectedBlue;\r\n            retData.backgroundR = this.backgroundR;\r\n            retData.backgroundG = this.backgroundG;\r\n            retData.backgroundB = this.backgroundB;\r\n            retData.room = this.room;\r\n            retData.brush = this.selectedBrush;\r\n            retData.brushSize = this.selectedSize;\r\n            retData.fillShape = this.fillShape;\r\n            retData.outlineWidth = this.outlineWidth;\r\n            retData.outlineRed = this.outlineRed;\r\n            retData.outlineGreen = this.outlineGreen;\r\n            retData.outlineBlue = this.outlineBlue;\r\n            retData.showOutline = this.showOutline;\r\n            retData.eraser = this.erase;\r\n\r\n            if (this.fillShape) {\r\n              if (this.erase)\r\n                p.fill(this.backgroundR, this.backgroundG, this.backgroundB)\r\n              else\r\n                p.fill(this.selectedRed, this.selectedGreen, this.selectedBlue)\r\n            } else {\r\n              p.noFill()\r\n            }\r\n\r\n            if (this.showOutline == true) {\r\n              p.strokeWeight(this.outlineWidth)\r\n              if (this.erase) {\r\n                p.stroke(this.backgroundR, this.backgroundG, this.backgroundB)\r\n              } else {\r\n                p.stroke(this.outlineRed, this.outlineGreen, this.outlineBlue)\r\n              }\r\n            } else {\r\n              p.noStroke()\r\n            }\r\n\r\n            if (this.selectedBrush == 'ellipse') {\r\n              p.ellipse(p.mouseX, p.mouseY, this.selectedSize, this.selectedSize)\r\n            } else if (this.selectedBrush == 'rectangle') {\r\n              p.rect(p.mouseX, p.mouseY, this.selectedSize, this.selectedSize)\r\n            } else if (this.selectedBrush == 'triangle') {\r\n              p.triangle(p.mouseX, p.mouseY, (p.mouseX + (this.selectedSize / 2)), p.mouseY - this.selectedSize, (p.mouseX + this.selectedSize), p.mouseY)\r\n            } else if (this.selectedBrush == 'diamond') {\r\n              p.quad(p.mouseX, p.mouseY, (p.mouseX + (this.selectedSize / 2)), p.mouseY - this.selectedSize,\r\n                (p.mouseX + this.selectedSize), p.mouseY, (p.mouseX + (this.selectedSize / 2)), p.mouseY + this.selectedSize)\r\n            }\r\n\r\n            //emit mouse data to socket.io server\r\n            this.webSocketService.emit('mouse', retData);\r\n            this.p = p;\r\n          }\r\n\r\n          //called when the mouse is pressed initially (mouse velocity = 0)\r\n          p.mousePressed = () => {\r\n            if (this.permissions == \"Visitor\" || this.disableDrawing)\r\n              return;\r\n            var retData: returnData = new returnData();\r\n            retData.x = p.mouseX;\r\n            if (retData.x > this.canvas.dimensions.width || retData.x < 0)\r\n              return;\r\n            retData.y = p.mouseY;\r\n            if (retData.y > this.canvas.dimensions.height || retData.y < 0)\r\n              return;\r\n            retData.r = this.selectedRed;\r\n            retData.g = this.selectedGreen;\r\n            retData.b = this.selectedBlue;\r\n            retData.backgroundR = this.backgroundR;\r\n            retData.backgroundG = this.backgroundG;\r\n            retData.backgroundB = this.backgroundB;\r\n            retData.room = this.room;\r\n            retData.brush = this.selectedBrush;\r\n            retData.brushSize = this.selectedSize;\r\n            retData.fillShape = this.fillShape;\r\n            retData.outlineWidth = this.outlineWidth;\r\n            retData.outlineRed = this.outlineRed;\r\n            retData.outlineGreen = this.outlineGreen;\r\n            retData.outlineBlue = this.outlineBlue;\r\n            retData.showOutline = this.showOutline;\r\n            retData.eraser = this.erase;\r\n\r\n            if (this.fillShape) {\r\n              if (this.erase) {\r\n                p.fill(this.backgroundR, this.backgroundG, this.backgroundB)\r\n              } else {\r\n                p.fill(this.selectedRed, this.selectedGreen, this.selectedBlue)\r\n              }\r\n            } else {\r\n              p.noFill()\r\n            }\r\n\r\n            if (this.showOutline == true) {\r\n              p.strokeWeight(this.outlineWidth)\r\n              if (this.erase) {\r\n                p.stroke(this.backgroundR, this.backgroundG, this.backgroundB)\r\n              } else {\r\n                p.stroke(this.outlineRed, this.outlineGreen, this.outlineBlue)\r\n              }\r\n            } else {\r\n              p.noStroke()\r\n            }\r\n\r\n            if (this.selectedBrush == 'ellipse') {\r\n              p.ellipse(p.mouseX, p.mouseY, this.selectedSize, this.selectedSize)\r\n            } else if (this.selectedBrush == 'rectangle') {\r\n              p.rect(p.mouseX, p.mouseY, this.selectedSize, this.selectedSize)\r\n            } else if (this.selectedBrush == 'triangle') {\r\n              p.triangle(p.mouseX, p.mouseY, (p.mouseX + (this.selectedSize / 2)), p.mouseY - this.selectedSize, (p.mouseX + this.selectedSize), p.mouseY)\r\n            } else if (this.selectedBrush == 'diamond') {\r\n              p.quad(p.mouseX, p.mouseY, (p.mouseX + (this.selectedSize / 2)), p.mouseY - this.selectedSize,\r\n                (p.mouseX + this.selectedSize), p.mouseY, (p.mouseX + (this.selectedSize / 2)), p.mouseY + this.selectedSize)\r\n            }\r\n\r\n            //emit mouse data to socket.io server\r\n            //console.log(p.get().pixels);\r\n            this.webSocketService.emit('mouse', retData);\r\n            this.p = p;\r\n          }\r\n\r\n\r\n          //socket.io event listeners\r\n          //listen for an event from the socket.io server i.e: another user draws on the canvas\r\n          this.webSocketService.listen('mouse').subscribe((data: returnData) => {\r\n            //do something with the data sent from the socket.io server\r\n            if (data.showOutline == true) {\r\n              p.strokeWeight(data.outlineWidth)\r\n              if (data.eraser) {\r\n                p.stroke(data.backgroundR, data.backgroundG, data.backgroundB)\r\n              } else {\r\n                p.stroke(data.outlineRed, data.outlineGreen, data.outlineBlue)\r\n              }\r\n            } else {\r\n              p.noStroke()\r\n            }\r\n\r\n            if (data.fillShape) {\r\n              if (data.eraser) {\r\n                p.fill(data.backgroundR, data.backgroundG, data.backgroundB)\r\n              } else {\r\n                p.fill(data.r, data.g, data.b)\r\n              }\r\n            } else {\r\n              p.noFill()\r\n            }\r\n\r\n            if (data.brush == 'ellipse') {\r\n              p.ellipse(data.x, data.y, data.brushSize, data.brushSize)\r\n            } else if (data.brush == 'rectangle') {\r\n              p.rect(data.x, data.y, data.brushSize, data.brushSize)\r\n            } else if (data.brush == 'triangle') {\r\n              p.triangle(data.x, data.y, (data.x + (data.brushSize / 2)), data.y - data.brushSize, (data.x + data.brushSize), data.y)\r\n            } else if (data.brush == 'diamond') {\r\n              p.quad(data.x, data.y, (data.x + (data.brushSize / 2)), data.y - data.brushSize,\r\n                (data.x + data.brushSize), data.y, (data.x + (data.brushSize / 2)), data.y + data.brushSize)\r\n            }\r\n\r\n          })\r\n\r\n          this.webSocketService.listen('refresh').subscribe((data: returnData) => {\r\n            //do something with the data sent from the socket.io server\r\n            if (data.refresh) {\r\n              p.resizeCanvas(data.canvasWidth, data.canvasHeight)\r\n              //canvas = p.createCanvas(data.canvasWidth, data.canvasHeight) //don't call createCanvas multiple times\r\n              p.background(data.backgroundR, data.backgroundG, data.backgroundB)\r\n              this.backgroundR = data.backgroundR\r\n              this.backgroundG = data.backgroundG\r\n              this.backgroundB = data.backgroundB\r\n              this.canvas.dimensions.height = data.canvasHeight\r\n              this.canvas.dimensions.width = data.canvasWidth\r\n            }\r\n            this.p = p;\r\n          })\r\n\r\n        }\r\n        let player = new p5(s);\r\n      });\r\n    } catch (err) { console.error(err); }\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'canvas-settings.dialog',\r\n  templateUrl: 'canvas-settings.dialog.html',\r\n})\r\nexport class SettingsDialog {\r\n\r\n  public dataSource;\r\n  public participants;\r\n  public canvas;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<SettingsDialog>,\r\n    @Inject(MAT_DIALOG_DATA) public data: SettingsDialog) { }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.data.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  findParticipant(account): number {\r\n    for (let index = 0; index < this.data.participants.length; index++) {\r\n      if (this.data.participants[index]._id == account._id)\r\n        return index;\r\n    }\r\n    return -1;\r\n  }\r\n\r\n  promoteParticipant(account) {\r\n    let index = this.findParticipant(account);\r\n    if (index >= 0) {\r\n      switch (this.data.participants[index].permissions) {\r\n        case \"Collaborator\": this.data.participants[index].permissions = \"Moderator\"; break;\r\n        case \"Visitor\": this.data.participants[index].permissions = \"Collaborator\"; break;\r\n        default: break;\r\n      }\r\n      this.finalize();\r\n    }\r\n  }\r\n\r\n  demoteParticipant(account) {\r\n    let index = this.findParticipant(account);\r\n    if (index >= 0) {\r\n      switch (this.data.participants[index].permissions) {\r\n        case \"Moderator\": this.data.participants[index].permissions = \"Collaborator\"; break;\r\n        case \"Collaborator\": this.data.participants[index].permissions = \"Visitor\"; break;\r\n        default: break;\r\n      }\r\n      this.finalize();\r\n    }\r\n  }\r\n\r\n  removeParticipant(account) {\r\n    let index = this.findParticipant(account);\r\n    if (index >= 0) {\r\n      this.data.participants.splice(index, 1)\r\n      this.finalize();\r\n    }\r\n  }\r\n\r\n  finalize() {\r\n    this.data.dataSource = new MatTableDataSource(this.data.participants)\r\n  }\r\n}\r\n\r\nexport class returnData {\r\n  canvasHeight: number;\r\n  canvasWidth: number;\r\n  x: number;\r\n  y: number;\r\n  refresh: boolean;\r\n  fillShape: boolean;\r\n  r: number;\r\n  g: number;\r\n  b: number;\r\n  backgroundR: number;\r\n  backgroundG: number;\r\n  backgroundB: number;\r\n  showOutline: boolean;\r\n  outlineRed: number;\r\n  outlineGreen: number;\r\n  outlineBlue: number;\r\n  outlineWidth: number;\r\n  room: string;\r\n  brush: string;\r\n  brushSize: number;\r\n  eraser: boolean;\r\n}","// Account\r\nexport class ReqresAccount {\r\n    _id: string;\r\n    userName: string;\r\n    password: string;\r\n    email: string;\r\n    passwordConfirm: string;\r\n    canvases: string[];\r\n    friends: string[];\r\n    isAdmin: boolean;\r\n    avatar: string;\r\n    theme: string;\r\n    permissions?: string;\r\n    notifications: [{ _id?: string, source: string, date: string, content: string, link: string, friendEmail: string}];\r\n    marked?: boolean;\r\n}\r\n\r\n// Canvas\r\nexport class ReqresCanvas {\r\n    _id: string;\r\n    name: string;\r\n    type: string;\r\n    owner: string;\r\n    modified: string;\r\n    dimensions: { width: number, height: number }\r\n    participants: [{_id: string, permissions: string}];\r\n    image: [string];\r\n}\r\n\r\n// Package that delivers a collection of Accounts\r\nexport class ReqresAccountCollectionPackage {\r\n    page?: number;\r\n    per_page?: number;\r\n    total?: number;\r\n    total_pages?: number;\r\n    data: ReqresAccount[];\r\n}\r\n\r\n// Package that delivers a collection of Canvases\r\nexport class ReqresCanvasCollectionPackage {\r\n    page?: number;\r\n    per_page?: number;\r\n    total?: number;\r\n    total_pages?: number;\r\n    data: ReqresCanvas[];\r\n}\r\n\r\n// Package that delivers one Account\r\nexport class ReqresAccountSinglePackage {\r\n    page?: number;\r\n    per_page?: number;\r\n    total?: number;\r\n    total_pages?: number;\r\n    data: ReqresAccount;\r\n}\r\n\r\n// Response from \"add/edit\" POST/PUT request\r\nexport class ReqresAccountCreateResponse {\r\n    id?: number;\r\n    name: string;\r\n    job: string;\r\n    createdAt: string;  // ISO8601 date and time string\r\n}\r\n\r\n// Package that delivers one Canvas\r\nexport class ReqresCanvasSinglePackage {\r\n    page?: number; //depriciate\r\n    per_page?: number;//depriciate\r\n    total?: number;//depriciate\r\n    total_pages?: number;//depriciate\r\n    data: ReqresAccount;\r\n    _id: string;\r\n    participants: string[];\r\n    name: string;\r\n    owner: string;\r\n}\r\n\r\n// Response from \"add/edit\" POST/PUT request\r\nexport class ReqresCanvasCreateResponse {\r\n    id?: number;\r\n    name: string;\r\n    job: string;\r\n    createdAt: string;  // ISO8601 date and time string\r\n}\r\n\r\nexport class Active {\r\n    isActive: boolean;\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n\r\nimport { Observable, of } from \"rxjs\";\r\nimport { map, tap, catchError } from 'rxjs/operators';\r\nimport { LoginCredentials } from './login/login.component';\r\nimport { ResetCredentials } from './reset/reset.component';\r\nimport { ForgotPasswordCredentials } from './forgot-password/forgot-password.component';\r\nimport { mailCredentials } from './library/library.component'\r\nimport { notificationStruct } from './header/header.component'\r\n\r\nimport { Active, ReqresAccount, ReqresCanvas, ReqresAccountCollectionPackage, ReqresCanvasCollectionPackage, ReqresAccountSinglePackage, ReqresAccountCreateResponse, ReqresCanvasSinglePackage, ReqresCanvasCreateResponse } from \"./data-model-classes\";\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthService {\r\n\r\n    // Properties\r\n\r\n    // Webservice API\r\n\r\n    //private urlWebservice: string = \"https://inkshare-webservice.herokuapp.com\";\r\n\r\n    // Local API\r\n    private urlWebservice = \"http://localhost:8080\";\r\n    \r\n    private httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*', 'Source': 'InkShareHeaderOrigin'}) };\r\n\r\n    // Initialization\r\n    \r\n    constructor(\r\n        private http: HttpClient,\r\n        private jwtHelper: JwtHelperService\r\n    ) { }\r\n\r\n    // Methods\r\n    \r\n    private handleError<T>(operation = 'operation', result?: T) {\r\n        return (error: any): Observable<T> => {\r\n            console.error(error.error);\r\n            localStorage.setItem('error', error.error.error);\r\n            return of(result as T);\r\n        };\r\n    }\r\n\r\n    // Get one\r\n    reqresAccountGetById(id: string): Observable<ReqresAccount> {\r\n        return this.http.get<ReqresAccount>(`${this.urlWebservice}/accounts/${id}`, this.httpOptions);\r\n    }\r\n\r\n    reqresCanvasGetById(id: string): Observable<ReqresCanvas> {\r\n        return this.http.get<ReqresCanvas>(`${this.urlWebservice}/canvases/${id}`, this.httpOptions);\r\n    }\r\n\r\n    // Get many\r\n    reqresAccountGetAll(): Observable<ReqresAccount[]> {\r\n        return this.http.get<ReqresAccount[]>(`${this.urlWebservice}/accounts`, this.httpOptions);\r\n    }\r\n\r\n    reqresCanvasGetAll(): Observable<ReqresCanvas[]> {\r\n        return this.http.get<ReqresCanvas[]>(`${this.urlWebservice}/canvases`, this.httpOptions);\r\n    }\r\n\r\n\r\n    reqresAccountGetByFriendId(id: string): Observable<ReqresAccount[]> {\r\n        return this.http.get<ReqresAccount[]>(`${this.urlWebservice}/accounts/friends/${id}`, this.httpOptions);\r\n    }\r\n\r\n    reqresAccountGetByCanvasId(id: string): Observable<ReqresAccount[]> {\r\n        return this.http.get<ReqresAccount[]>(`${this.urlWebservice}/accounts/participates/${id}`, this.httpOptions);\r\n    }\r\n\r\n    reqresCanvasGetByParticipantId(id: string): Observable<ReqresCanvas[]> {\r\n        return this.http.get<ReqresCanvas[]>(`${this.urlWebservice}/canvases/viewable/${id}`, this.httpOptions);\r\n    }\r\n\r\n    login(credentials: LoginCredentials): Observable<any> {\r\n        return this.http.post<any>(this.urlWebservice + '/accounts/login', credentials, this.httpOptions).pipe(\r\n            //Change this console log\r\n            tap(() => console.log(`Login successful`)),\r\n            catchError(this.handleError<any>('Failed to login'))\r\n        );\r\n    }\r\n\r\n    createAccount(credentials: ReqresAccount): Observable<any> {\r\n        return this.http.post<any>(this.urlWebservice + '/accounts/create', credentials, this.httpOptions).pipe(\r\n            //Change this console log\r\n            tap(() => console.log(`Creation successful`)),\r\n            catchError(this.handleError<any>())\r\n        );\r\n    }\r\n\r\n    createCanvas(canvas: ReqresCanvas): Observable<any> {\r\n        return this.http.post<any>(this.urlWebservice + '/canvases/create', canvas, this.httpOptions).pipe(\r\n            //Change this console log\r\n            tap(() => console.log(`Creation successful`)),\r\n            catchError(this.handleError<any>())\r\n        );\r\n    }\r\n\r\n    updateAccount(account: ReqresAccount): Observable<any> {\r\n        return this.http.put<any>(this.urlWebservice + '/accounts/update', account, this.httpOptions).pipe(\r\n            //Change this console log\r\n            tap(() => console.log(`Update successful`)),\r\n            catchError(this.handleError<any>())\r\n        );\r\n    }\r\n\r\n    updateCanvas(canvas: ReqresCanvas): Observable<any> {\r\n        return this.http.put<any>(this.urlWebservice + '/canvases/update', canvas, this.httpOptions).pipe(\r\n            //Change this console log\r\n            tap(() => console.log(`Update successful`)),\r\n            catchError(this.handleError<any>())\r\n        );\r\n    }\r\n\r\n    deleteAccount(account: ReqresAccount): Observable<any> {\r\n        return this.http.put<any>(this.urlWebservice + '/accounts/delete', account, this.httpOptions).pipe(\r\n            //Change this console log\r\n            tap(() => console.log(`Deletion successful`)),\r\n            catchError(this.handleError<any>())\r\n        );\r\n    }\r\n\r\n    deleteCanvas(canvas: ReqresCanvas): Observable<any> {\r\n        return this.http.put<any>(this.urlWebservice + '/canvases/delete', canvas, this.httpOptions).pipe(\r\n            //Change this console log\r\n            tap(() => console.log(`Deletion successful`)),\r\n            catchError(this.handleError<any>())\r\n        );\r\n    }\r\n\r\n    changePassword(credentials: ResetCredentials): Observable<any> {\r\n        return this.http.put<any>(this.urlWebservice + '/accounts/reset', credentials, this.httpOptions).pipe(\r\n            //Change this console log\r\n            tap(() => console.log('Password Change Successful')),\r\n            catchError(this.handleError<any>('Password Change Failed'))\r\n        );\r\n    }\r\n\r\n    requestNewPassword(credentials: ForgotPasswordCredentials): Observable<any> {\r\n        return this.http.post<any>(this.urlWebservice + '/accounts/recovery', credentials, this.httpOptions).pipe(\r\n            //Change this console log\r\n            tap(() => console.log('Password Request Successful')),\r\n            catchError(this.handleError<any>('Password Request Failed'))\r\n        );\r\n    }\r\n\r\n    sendMail(mailObject: mailCredentials) : Observable<any> {\r\n        return this.http.post<any>(this.urlWebservice + '/accounts/email', mailObject, this.httpOptions).pipe(\r\n            tap(() => console.log('Email Delivery Successful')),\r\n            catchError(this.handleError<any>('Email Delivery Failed'))\r\n        );\r\n    }\r\n\r\n    pushNotification(id: string, title: string, content: string, link: string = \"\", originEmail: string = \"\"): Observable<any> {\r\n        let notification = new notificationStruct(title, content, link, originEmail);\r\n        return this.http.post<any>(`${this.urlWebservice}/accounts/notifications/${id}`, notification, this.httpOptions).pipe(\r\n            tap(() => console.log('Notification successfully bound')),\r\n            catchError(this.handleError<any>('Notification failed to bind'))\r\n        );\r\n    }\r\n\r\n    popNotification(id: string, notification: { _id: string, date?: string, content?: string, link?: string}): Observable<any> {\r\n        return this.http.put<any>(`${this.urlWebservice}/accounts/notifications/${id}`, notification, this.httpOptions).pipe(\r\n            tap(() => console.log('Notification successfully unbound')),\r\n            catchError(this.handleError<any>('Notification failed to unbind'))\r\n        );\r\n    }\r\n\r\n    public getToken(): string { return localStorage.getItem('access_token'); }\r\n\r\n    isAuthenticated(): boolean {\r\n        const token = localStorage.getItem('access_token');\r\n        if (token) {\r\n            //console.log('Token provided');\r\n            return true;\r\n        } else {\r\n            //console.log('No token provided');\r\n            return false;\r\n        }\r\n    }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZvcmdvdC1wYXNzd29yZC9mb3Jnb3QtcGFzc3dvcmQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component } from '@angular/core';\r\nimport { AuthService } from '../data-model-manager.service';\r\nimport { Router } from '@angular/router';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.css']\r\n})\r\nexport class ForgotPasswordComponent {\r\n\r\n  // Properties\r\n  credentials: ForgotPasswordCredentials;\r\n  forgotPassError: string;\r\n\r\n  // Initialization\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthService,\r\n    private jwtHelper: JwtHelperService\r\n  ) {\r\n    this.credentials = new ForgotPasswordCredentials();\r\n    this.credentials.email = '';\r\n    this.forgotPassError = '';\r\n  }\r\n\r\n  // Methods\r\n  onSubmit(): void {\r\n    this.authService.requestNewPassword(this.credentials).subscribe(data => {\r\n      if (data) {\r\n        this.router.navigate(['/login']);\r\n      }\r\n      else {\r\n        this.forgotPassError = localStorage.getItem('error');\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\nexport class ForgotPasswordCredentials {\r\n  email: string;\r\n}","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\n\r\nimport { AuthService } from './data-model-manager.service';\r\n\r\n@Injectable()\r\nexport class GuardAuthService implements CanActivate {\r\n    \r\n    // Initialization\r\n\r\n    constructor(\r\n        private auth: AuthService,\r\n        private router: Router\r\n    ) { }\r\n\r\n    // Methods\r\n\r\n    canActivate(): boolean {\r\n        if (!this.auth.isAuthenticated()) {\r\n            this.router.navigate(['/login']);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}","export default \".notification {\\r\\n    min-width: 270px;\\r\\n    max-width: 270px;\\r\\n    width: -webkit-max-content;\\r\\n    width: -moz-max-content;\\r\\n    width: max-content;\\r\\n    height: -webkit-max-content;\\r\\n    height: -moz-max-content;\\r\\n    height: max-content;\\r\\n    overflow: auto;\\r\\n    -webkit-overflow-scrolling: touch;\\r\\n    max-height: calc(100vh - 48px);\\r\\n    border-radius: 4px;\\r\\n    margin: 5px;\\r\\n    outline: 0;\\r\\n}\\r\\n\\r\\n.mat-card-title, .mat-card-subtitle {\\r\\n  overflow-wrap: break-word;\\r\\n}\\r\\n\\r\\n#secondary{\\r\\n    max-width: 325px;\\r\\n    margin-top: auto;\\r\\n    margin-bottom: auto;\\r\\n    padding-bottom: 15px;\\r\\n}\\r\\n\\r\\n#secondary:hover {\\r\\n  background-color: gray;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQiwwQkFBa0I7SUFBbEIsdUJBQWtCO0lBQWxCLGtCQUFrQjtJQUNsQiwyQkFBbUI7SUFBbkIsd0JBQW1CO0lBQW5CLG1CQUFtQjtJQUNuQixjQUFjO0lBQ2QsaUNBQWlDO0lBQ2pDLDhCQUE4QjtJQUM5QixrQkFBa0I7SUFDbEIsV0FBVztJQUNYLFVBQVU7QUFDZDs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsbUJBQW1CO0lBQ25CLG9CQUFvQjtBQUN4Qjs7QUFFQTtFQUNFLHNCQUFzQjtBQUN4QiIsImZpbGUiOiJzcmMvYXBwL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5ub3RpZmljYXRpb24ge1xyXG4gICAgbWluLXdpZHRoOiAyNzBweDtcclxuICAgIG1heC13aWR0aDogMjcwcHg7XHJcbiAgICB3aWR0aDogbWF4LWNvbnRlbnQ7XHJcbiAgICBoZWlnaHQ6IG1heC1jb250ZW50O1xyXG4gICAgb3ZlcmZsb3c6IGF1dG87XHJcbiAgICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2g7XHJcbiAgICBtYXgtaGVpZ2h0OiBjYWxjKDEwMHZoIC0gNDhweCk7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgICBtYXJnaW46IDVweDtcclxuICAgIG91dGxpbmU6IDA7XHJcbn1cclxuXHJcbi5tYXQtY2FyZC10aXRsZSwgLm1hdC1jYXJkLXN1YnRpdGxlIHtcclxuICBvdmVyZmxvdy13cmFwOiBicmVhay13b3JkO1xyXG59XHJcblxyXG4jc2Vjb25kYXJ5e1xyXG4gICAgbWF4LXdpZHRoOiAzMjVweDtcclxuICAgIG1hcmdpbi10b3A6IGF1dG87XHJcbiAgICBtYXJnaW4tYm90dG9tOiBhdXRvO1xyXG4gICAgcGFkZGluZy1ib3R0b206IDE1cHg7XHJcbn1cclxuXHJcbiNzZWNvbmRhcnk6aG92ZXIge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGdyYXk7XHJcbn0iXX0= */\"","import { Component } from '@angular/core';\r\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\r\nimport { AuthService } from '../data-model-manager.service';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { ReqresAccount } from '../data-model-classes';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent {\r\n\r\n  private account: ReqresAccount;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthService,\r\n    private jwtHelper: JwtHelperService,\r\n    public route: ActivatedRoute\r\n  ) {\r\n    this.router.events.subscribe((ev) => {\r\n      if (ev instanceof NavigationEnd) { this.updateHeader(); } // Update the header if the user moves pages\r\n    });\r\n  }\r\n\r\n  updateHeader(): void {\r\n    let token = this.authService.getToken();\r\n    if (token)\r\n      try {\r\n        // First attempt a cached load\r\n        this.account = this.jwtHelper.decodeToken(localStorage.getItem('access_token'));\r\n        // If there was a cache, we can use that while we load any applicable updated data.\r\n        // If there was no cache, we'll just have to wait anyways.\r\n        this.authService.reqresAccountGetById(this.account._id).subscribe((data) => {\r\n          this.account = data;\r\n        });\r\n      } catch (err) {\r\n        this.account = undefined;\r\n        console.log(err);\r\n      }\r\n  }\r\n\r\n  navigate(notification: any): void {\r\n    this.router.navigate([notification.link]);\r\n    this.authService.popNotification(this.account._id, notification).subscribe((data) => {\r\n      this.updateHeader();\r\n    });\r\n  }\r\n\r\n  dismissNotif(notification: any): void {\r\n    if (notification == \"all\")\r\n      for (let index = 0; this.account.notifications.length > index; index++) {\r\n        this.authService.popNotification(this.account._id, { _id: this.account.notifications[index]._id}).subscribe((data) => {\r\n          if (this.account.notifications.length - 1 == index)\r\n            this.updateHeader();\r\n        });\r\n      }\r\n    else\r\n    this.authService.popNotification(this.account._id, notification).subscribe((data) => {\r\n      this.updateHeader();\r\n    });\r\n  }\r\n\r\n  logout(): void {\r\n    localStorage.clear();\r\n    this.account = undefined;\r\n    this.router.navigate(['/login']);\r\n  }\r\n}\r\n\r\nexport class notificationStruct {\r\n  _id: string;\r\n  title: string;\r\n  date: Date;\r\n  content: string;\r\n  link: string;\r\n  originEmail: string;\r\n  constructor(title: string, content: string, link: string = \"\", originEmail: string) {\r\n    this.title = title;\r\n    this.content = content;\r\n    this.link = link;\r\n    this.originEmail = originEmail;\r\n  }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit { ngOnInit() { } }","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\n\r\nimport { AuthService } from './data-model-manager.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class InterceptTokenService implements HttpInterceptor {\r\n\r\n    // Initialization\r\n    \r\n    constructor(private a: AuthService) { }\r\n\r\n    // Methods\r\n    \r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        request = request.clone({\r\n            setHeaders: {\r\n                Authorization: `JWT ${this.a.getToken()}`\r\n            }\r\n        });\r\n        return next.handle(request);\r\n    }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ludml0ZS9pbnZpdGUuY29tcG9uZW50LmNzcyJ9 */\"","import { Component } from '@angular/core';\r\nimport { AuthService } from '../data-model-manager.service';\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { Router } from '@angular/router';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { ReqresCanvas } from '../data-model-classes';\r\n\r\n@Component({\r\n  selector: 'app-invite',\r\n  templateUrl: './invite.component.html',\r\n  styleUrls: ['./invite.component.css']\r\n})\r\n\r\n\r\nexport class InviteComponent {\r\n\r\n  invite: CreateInvite;\r\n\r\n    private tempRoom: string;  //temp room is used to store the input of\r\n    private tokenDecoded;\r\n    private canvases;\r\n    private canvas1;\r\n    private id: string;\r\n    private email: string;\r\n    private request: boolean;\r\n    updateError: string;\r\n\r\n    // Initialization\r\n    \r\n    constructor(\r\n        private router: Router,\r\n        private a: AuthService,\r\n        private jwtHelper: JwtHelperService,\r\n        private route: ActivatedRoute\r\n    ) {\r\n      this.invite = new CreateInvite();\r\n      this.invite.email = \"\";\r\n      this.invite.id = \"\";\r\n      this.tokenDecoded = this.jwtHelper.decodeToken(localStorage.getItem('access_token'));\r\n      this.email = this.route.snapshot.params['email'];\r\n      this.id = this.route.snapshot.params['id'];\r\n      if (!this.id)\r\n        this.id = \"\";\r\n      if (!this.email) {\r\n        this.request = false;\r\n        this.email = this.tokenDecoded.email;\r\n      } else {\r\n        this.request = true;\r\n      }\r\n      this.a.reqresCanvasGetById(this.tokenDecoded._id).subscribe(data => {\r\n          if (data)\r\n            this.canvases = data;\r\n      });\r\n    }\r\n\r\n    onSubmit(): void {\r\n      this.a.reqresCanvasGetById(this.invite.id).subscribe(data => {\r\n        if (data){\r\n          console.log(data);\r\n          console.log(this.canvas1);\r\n          this.canvas1 = data;\r\n          console.log(this.canvas1);\r\n          this.a.updateCanvas(this.canvas1).subscribe(data => {\r\n              if (data) {\r\n                  this.router.navigate(['/library']).then( () => { location.reload(); } );\r\n              } else {\r\n                  this.updateError = localStorage.getItem('error');\r\n              }\r\n          });\r\n        }\r\n    });\r\n  }\r\n}\r\n\r\nexport class CreateInvite {\r\n  email: string;\r\n  id: string;\r\n}","export default \".mat-form-field {\\r\\n  display: inline;\\r\\n  margin-right: 12px;\\r\\n}\\r\\n\\r\\n.header-image {\\r\\n    background-image: url('no-avatar.png');\\r\\n    background-size: cover;\\r\\n}\\r\\n\\r\\n.mat-card-title, .mat-card-subtitle {\\r\\n  overflow-wrap: break-word;\\r\\n}\\r\\n\\r\\n#secondary{\\r\\n    max-width: 325px;\\r\\n    margin-top: auto;\\r\\n    margin-bottom: auto;\\r\\n    padding-bottom: 15px;\\r\\n}\\r\\n\\r\\n#secondary:hover {\\r\\n  background-color: gray;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGlicmFyeS9saWJyYXJ5LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFlO0VBQ2Ysa0JBQWtCO0FBQ3BCOztBQUVBO0lBQ0ksc0NBQW1EO0lBQ25ELHNCQUFzQjtBQUMxQjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsbUJBQW1CO0lBQ25CLG9CQUFvQjtBQUN4Qjs7QUFFQTtFQUNFLHNCQUFzQjtBQUN4QiIsImZpbGUiOiJzcmMvYXBwL2xpYnJhcnkvbGlicmFyeS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1mb3JtLWZpZWxkIHtcclxuICBkaXNwbGF5OiBpbmxpbmU7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxMnB4O1xyXG59XHJcblxyXG4uaGVhZGVyLWltYWdlIHtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vLi4vYXNzZXRzL25vLWF2YXRhci5wbmcnKTtcclxuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbn1cclxuXHJcbi5tYXQtY2FyZC10aXRsZSwgLm1hdC1jYXJkLXN1YnRpdGxlIHtcclxuICBvdmVyZmxvdy13cmFwOiBicmVhay13b3JkO1xyXG59XHJcblxyXG4jc2Vjb25kYXJ5e1xyXG4gICAgbWF4LXdpZHRoOiAzMjVweDtcclxuICAgIG1hcmdpbi10b3A6IGF1dG87XHJcbiAgICBtYXJnaW4tYm90dG9tOiBhdXRvO1xyXG4gICAgcGFkZGluZy1ib3R0b206IDE1cHg7XHJcbn1cclxuXHJcbiNzZWNvbmRhcnk6aG92ZXIge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGdyYXk7XHJcbn0iXX0= */\"","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { AuthService } from '../data-model-manager.service';\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { Router } from '@angular/router';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { SettingsDialog } from './../canvas/canvas.component';\r\nimport { Validators } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { NgForm } from '@angular/forms';\r\nimport { stringToKeyValue } from '@angular/flex-layout/extended/typings/style/style-transforms';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ReqresCanvas, ReqresAccount } from '../data-model-classes';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\n\r\nexport interface DialogData {\r\n    canvasName: string;\r\n    canvasParticipants: string[];\r\n}\r\n\r\nexport interface ParticipantElement {\r\n    userName: string;\r\n    email: string;\r\n    permissions: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'app-library',\r\n    templateUrl: './library.component.html',\r\n    styleUrls: ['./library.component.css']\r\n})\r\n\r\nexport class LibraryComponent implements OnInit {\r\n\r\n    // Properties\r\n\r\n    private account: ReqresAccount;\r\n    private accounts: ReqresAccount[];\r\n    private canvas: ReqresCanvas;\r\n    private canvases: ReqresCanvas[];\r\n    private library: String;\r\n    private options: string[];\r\n    private selected: any;\r\n    private participants: ReqresAccount[];\r\n    private friends: ReqresAccount[];\r\n    private displayedColumns: string[] = ['name', 'email', 'permissions', 'options'];\r\n    private dataSource;\r\n    private mail: mailCredentials;\r\n\r\n    myControl = new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(6),\r\n        Validators.email\r\n    ]);\r\n    filteredOptions: Observable<string[]>;\r\n\r\n    // Initialization\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private authService: AuthService,\r\n        private jwtHelper: JwtHelperService,\r\n        private route: ActivatedRoute,\r\n        public dialog: MatDialog,\r\n        private snackBar: MatSnackBar\r\n    ) { \r\n        let token = this.authService.getToken();\r\n        if (token)\r\n            try {\r\n                if (!this.jwtHelper.isTokenExpired(token))\r\n                    this.account = this.jwtHelper.decodeToken(token);\r\n                else throw \"Login token has expired\";\r\n                this.library = this.route.snapshot.params['email'];\r\n                if (!this.library)\r\n                    this.router.navigate(['/library/view', this.account.email]);\r\n            } catch (err) {\r\n                console.log(err);\r\n                this.router.navigate(['/login']);\r\n            }\r\n    }\r\n\r\n    ngOnInit() {\r\n        let token = this.authService.getToken();\r\n        try {\r\n            if (token)\r\n                this.canvases = [];\r\n            else { this.router.navigate(['/login']); }\r\n            this.canvas = new ReqresCanvas();\r\n            this.canvas.participants = [{ _id: \"\", permissions: \"\" }];\r\n            this.account = this.jwtHelper.decodeToken(token);\r\n            this.authService.reqresAccountGetById(this.account._id).subscribe((data1) => {\r\n                this.account = data1;\r\n                this.authService.reqresCanvasGetByParticipantId(this.account._id).subscribe((data2) => {\r\n                    this.canvases = data2;\r\n                    this.authService.reqresAccountGetAll().subscribe((data2) => {\r\n                        this.accounts = data2;\r\n                        if (this.library != this.account.email)\r\n                            this.process(this.library);\r\n                    });\r\n                });   \r\n\r\n                this.authService.reqresAccountGetByFriendId(this.account._id).subscribe((data2) => {\r\n                    this.friends = data2;\r\n                });\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n            this.router.navigate(['/login']);\r\n        }\r\n        \r\n\r\n        this.mail = new mailCredentials();\r\n        this.mail.id = '';\r\n        this.mail.subject = '';\r\n        this.mail.content = '';\r\n        this.filteredOptions = this.myControl.valueChanges.pipe(\r\n            startWith(''),\r\n            map(value => this._filter(value))\r\n        );\r\n    }\r\n\r\n    private _filter(value: string): string[] {\r\n        const filterValue = value.toLowerCase();\r\n        return this.options.filter(option => option.toLowerCase().indexOf(filterValue) === 0);\r\n    }\r\n\r\n    process(email: String) {\r\n        if (!this.accounts) {\r\n            this.snackBar.open(\"Unknown error\", \"Oops\", {\r\n                duration: 2500,\r\n            });\r\n            return;\r\n        }\r\n        this.accounts.forEach(account => {\r\n            if (account.email == email) {\r\n                let found = false;\r\n                this.account.friends.forEach(friend => {\r\n                    if (friend == account._id)\r\n                        found = true;\r\n                    // TODO: Add check to see if there's actually a request, or if we're being spoofed\r\n                })\r\n                this.authService.reqresAccountGetById(account._id).subscribe((data1) => {\r\n                    account = data1;\r\n                    if (this.router.url == `/accept/${this.library}` && !found) {\r\n                        this.account.friends.push(account._id);\r\n                        let response = this.authService.updateAccount(this.account).subscribe((data2) => {\r\n                            account.friends.push(this.account._id);\r\n                            response = this.authService.updateAccount(account).subscribe((data3) => {\r\n                                console.log(6)\r\n                                this.snackBar.open(`You and ${account.userName} are now friends!`, \"Thanks\", {\r\n                                    duration: 4000,\r\n                                });\r\n                                this.router.navigate(['/library/view', account.email]);\r\n                            });\r\n                        });\r\n                    } else if (this.router.url == `/library/sort/${this.library}`) {\r\n                        for (let index = 0; index < this.canvases.length; index++) {\r\n                            if (this.canvases[index].owner != account._id) {\r\n                                this.canvases.splice(index, 1);\r\n                                index--;\r\n                            }\r\n                        }\r\n                    } else if (this.router.url == `/accept/${this.library}`) {\r\n                        this.snackBar.open(account.userName + \" is already your friend!\", \"Oops\", {\r\n                            duration: 4000,\r\n                        });\r\n                        this.router.navigate(['/library']);\r\n                    } else\r\n                        this.router.navigate(['/library']);\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    addFriend() {\r\n        this.options = [];\r\n        this.accounts.forEach(account => {\r\n            this.options.push(account.email);\r\n        });\r\n        const dialogRef = this.dialog.open(AddFriendDialog, {\r\n            height: '250px',\r\n            width: '400px',\r\n            data: {\r\n                account: this.account,\r\n                accounts: this.accounts,\r\n                myControl: this.myControl,\r\n                filteredOptions: this.filteredOptions\r\n            }\r\n        });\r\n        dialogRef.afterClosed().subscribe(data => {\r\n            if (data) {\r\n                if (data.myControl)\r\n                    if (data.myControl.value != this.account.email) {\r\n                        this.accounts.forEach(account => {\r\n                            if (account.email == data.myControl.value) {\r\n                                let found = false;\r\n                                this.account.friends.forEach(friend => {\r\n                                    if (friend == account._id)\r\n                                        found = true;\r\n                                });\r\n                                if (!found) {\r\n                                    let response = this.authService.updateAccount(this.account).subscribe((data1) => {\r\n\r\n                                        this.authService.pushNotification(account._id, \"Friend Request\", `${this.account.email} has requested to add you as their friend.`, `/accept/${this.account.email}`, this.account.email).subscribe((data) => {\r\n                                            console.info(data)\r\n                                        });\r\n    \r\n                                        this.mail.id = account._id;\r\n                                        this.mail.subject = 'You have a friend request!';\r\n                                        this.mail.content = `\r\n                                        <p>Hey there, just letting you know that ${this.account.email} has requested to add you as a friend.<p>\r\n                                        <p><a href=\"https://inkshare-frontend.herokuapp.com/library/${data.myControl.value}\">Add them back!</a></p>\r\n                                        `;\r\n                                        this.authService.sendMail(this.mail).subscribe((data2) => {\r\n                                            this.snackBar.open(account.email + \" has been added as a friend, and an email has been sent!\", \"Thanks\", {\r\n                                                duration: 4000,\r\n                                            });\r\n                                        });\r\n                                    });\r\n                                    this.authService.reqresAccountGetById(this.account._id).subscribe((data1) => {\r\n                                        this.account = data1;\r\n                                    });\r\n                                }\r\n                                else {\r\n                                    this.snackBar.open(\"Sorry, you already appear to be friends!\", \"Oops\", {\r\n                                        duration: 4200,\r\n                                    });\r\n                                    this.addFriend();\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                    else if (data.myControl.value == this.account.email) {\r\n                        this.snackBar.open(\"You can't add yourself as a friend!\", \"Oops\", {\r\n                            duration: 5000,\r\n                        });\r\n                        this.addFriend();\r\n                    } else {\r\n                        this.snackBar.open(\"Sorry, something went wrong and we couldn't add your friend.\", \"Oops\", {\r\n                            duration: 5000,\r\n                        });\r\n                        this.addFriend();\r\n                    }\r\n                else {\r\n                    this.snackBar.open(\"Sorry, something went wrong and we couldn't add your friend.\", \"Oops\", {\r\n                        duration: 5000,\r\n                    });\r\n                    this.addFriend();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /*friendMail(email: string, content: string) {\r\n        this.mail.email = email;\r\n        this.mail.subject = \"You have a new friend!\";\r\n        this.mail.content = \"<p> Hey there, just letting you know that \" + content + \" has added you as a friend <p>\"\r\n        this.authService.sendMail(this.mail).subscribe(data => {\r\n            if (data) {\r\n\r\n            }\r\n        })\r\n    }*/\r\n\r\n    setSelected(canvas) {\r\n        this.selected = canvas;\r\n    }\r\n\r\n    newCanvas() {\r\n        let typesArray = [\r\n            { value: 'Private' },\r\n            { value: 'Public' },\r\n            { value: 'Locked' }\r\n        ];\r\n        if (this.account.isAdmin)\r\n            typesArray.push({ value: 'Featured' });\r\n        const dialogRef = this.dialog.open(CreateDialog, {\r\n            height: '300px',\r\n            width: '400px',\r\n            data: {\r\n                type: \"Private\",\r\n                canvasName: this.account.userName + \"'s Canvas\",\r\n                canvasParticipants: [],\r\n                canvasDimensions: {\r\n                    width: 700,\r\n                    height: 500\r\n                },\r\n                types: typesArray\r\n            }\r\n        });\r\n        dialogRef.afterClosed().subscribe(data => {\r\n            console.log(data)\r\n            if (data) {\r\n                if (data.canvasName) {\r\n                    this.canvas.name = data.canvasName;\r\n                    this.canvas.dimensions = data.canvasDimensions;\r\n                    this.canvas.type = data.type;\r\n                    this.canvas.participants[0] = { _id: this.account._id, permissions: \"Owner\" };\r\n                    for (let index = 0; index < data.canvasParticipants.length; index = index + 1)\r\n                        this.canvas.participants.push(data.canvasParticipants[index]);\r\n                    let dupeFlag = false;\r\n                    this.canvas.owner = this.account._id;\r\n                    this.canvases.forEach(canvas => {\r\n                        if (canvas.owner == this.account._id && canvas.name == this.canvas.name) {\r\n                            dupeFlag = true;\r\n                            return;\r\n                        }\r\n                    });\r\n                    if (dupeFlag) {\r\n                        this.snackBar.open(\"Sorry, \" + this.canvas.name + \" already exists on your account!\", \"Oops\", {\r\n                            duration: 3200,\r\n                        });\r\n                        this.newCanvas();\r\n                        return;\r\n                    } else {\r\n                        let response = this.authService.createCanvas(this.canvas).subscribe((data1) => {\r\n                            this.authService.reqresCanvasGetByParticipantId(this.account._id).subscribe((data2) => {\r\n                                this.canvases = data2;\r\n                                this.snackBar.open(\"Success, \" + this.canvas.name + \" was created!\", \"Thanks\", {\r\n                                    duration: 3200,\r\n                                });\r\n                            });\r\n                        });\r\n                    }\r\n                } else\r\n                    this.canvas.name = undefined;\r\n            } else\r\n                this.canvas.name = undefined;\r\n        });\r\n    }\r\n\r\n    applyFilter(filterValue: string) {\r\n        this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    }\r\n\r\n    test() {\r\n        this.authService.pushNotification(this.account._id, \"Friend Request\", `CrazyContraptionMC@gmail.com has requested to add you as their friend.`, `/accept/CrazyContraptionMC@gmail.com`, \"CrazyContraptionMC@gmail.com\").subscribe((data) => {\r\n            console.info(data)\r\n        });\r\n    }\r\n\r\n    editCanvas(canvas) {\r\n        localStorage.setItem('canvas', canvas._id); // insecure?\r\n        localStorage.setItem('width', canvas.dimensions.width);\r\n        localStorage.setItem('height', canvas.dimensions.height);\r\n        this.authService.reqresAccountGetById(canvas.owner).subscribe((data) => {\r\n            this.router.navigate([`/edit/${data.email}/${canvas.name}`]);\r\n        });\r\n    }\r\n\r\n    shareCanvas(canvas) {\r\n        this.options = [];\r\n        this.friends.forEach(friend => {\r\n            this.options.push(friend.email);\r\n        });\r\n        this.dataSource = new MatTableDataSource(this.friends)\r\n        const dialogRef = this.dialog.open(AddParticipantDialog, {\r\n            height: '300px',\r\n            width: '400px',\r\n            data: {\r\n                account: this.account,\r\n                friends: this.dataSource,\r\n                myControl: this.myControl,\r\n                permissions: [\r\n                    { value: 'Collaborator' },\r\n                    { value: 'Moderator' },\r\n                    { value: 'Visitor' }\r\n                ],\r\n                permission: \"\",\r\n                filteredOptions: this.filteredOptions\r\n            }\r\n        });\r\n        dialogRef.afterClosed().subscribe(data => {\r\n            if (data)\r\n                if (data.myControl)\r\n                    if (data.myControl.value) {\r\n                        let dupeFlag = true;\r\n                        if (data.myControl.value == this.account.email) {\r\n                            this.snackBar.open(\"Sorry, You can't add yourself to a canvas you're already in.\", \"Oops\", {\r\n                                duration: 4500,\r\n                            });\r\n                            this.shareCanvas(canvas)\r\n                            return;\r\n                        } else {\r\n                            this.accounts.forEach(account => {\r\n                                if (account.email == data.myControl.value) {\r\n                                    dupeFlag = false;\r\n                                    canvas.participants.forEach(participant => {\r\n                                        if (account._id == participant._id) {\r\n                                            dupeFlag = true;\r\n                                            this.snackBar.open(\"Sorry, That user is already a participant.\", \"Oops\", {\r\n                                                duration: 3500\r\n                                            });\r\n                                            return;\r\n                                        }\r\n                                    });\r\n                                    if (!dupeFlag) {\r\n                                        // TODO: Allow for different perms from dropdown\r\n                                        canvas.participants.push({ _id: account._id, permissions: \"Collaborator\" })\r\n                                        let response = this.authService.updateCanvas(canvas).subscribe((data1) => {\r\n                                            this.mail.id = account._id;\r\n                                            this.mail.subject = 'A canvas was shared with you.';\r\n                                            this.mail.content = `\r\n                                            <p>Hey there, just letting you know that ${this.account.userName} has invited you to participate in their ${this.canvas.name} canvas.<p>\r\n                                            <p><a href=\"https://inkshare-frontend.herokuapp.com/library/${data.myControl.value}\">View it here!</a></p>\r\n                                            `;\r\n                                            this.authService.sendMail(this.mail).subscribe((data2) => {\r\n                                                this.snackBar.open(\"Success, \" + data.myControl.value + \" was invited to be a \" + \"participant\" + \"!\", \"Thanks\", {\r\n                                                    duration: 3200\r\n                                                });\r\n                                            });\r\n                                        });\r\n                                    } else return;\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n        });\r\n    }\r\n\r\n    canvasSettings(canvas) {\r\n        if (canvas.owner != this.account._id) {\r\n            this.snackBar.open(\"Sorry, you can't modify what you don't own this! Moderators must join the canvas and edit settings directly.\", \"Oops\", {\r\n                duration: 6000\r\n            });\r\n            return;\r\n        }\r\n        let typesArray = [\r\n            { value: 'Private' },\r\n            { value: 'Public' },\r\n            { value: 'Locked' }\r\n        ];\r\n        if (this.account.isAdmin)\r\n            typesArray.push({ value: 'Featured' });\r\n        this.authService.reqresAccountGetByCanvasId(canvas._id).subscribe((data3) => {\r\n            this.participants = data3;\r\n            this.dataSource = new MatTableDataSource(this.participants);\r\n            const dialogRef = this.dialog.open(SettingsDialog, {\r\n                height: '550px',\r\n                width: '900px',\r\n                data: {\r\n                    displayedColumns: this.displayedColumns,\r\n                    canvas: canvas,\r\n                    type: this.canvas.type,\r\n                    types: typesArray,\r\n                    participants: this.participants,\r\n                    dataSource: this.dataSource\r\n                },\r\n            });\r\n            dialogRef.afterClosed().subscribe(data => {\r\n                if (data) {\r\n                    if (data.participants) {\r\n                        let dupeFlag = false;\r\n                        this.canvases.forEach(data1 => {\r\n                            if (data1.owner == this.account._id && data1.name == data.canvas.name)\r\n                                if (data1._id != this.canvas._id) {\r\n                                    dupeFlag = true;\r\n                                    return;\r\n                                }\r\n                        });\r\n                        if (dupeFlag) {\r\n                            this.authService.reqresCanvasGetById(this.canvas._id).subscribe((data1) => {\r\n                                this.canvas = data1;\r\n                                this.snackBar.open(\"Sorry, \" + data.canvas.name + \" already exists on your account!\", \"Oops\", {\r\n                                    duration: 3200\r\n                                });\r\n                            });\r\n                            return;\r\n                        } else {\r\n                            if (data.canvas.name)\r\n                                this.canvas.name = data.canvas.name;\r\n                            if (data.participants[0]._id == data.canvas.owner)\r\n                                this.canvas.participants = data.participants\r\n                            let response = this.authService.updateCanvas(this.canvas).subscribe((data1) => {\r\n                                this.snackBar.open(\"Success, canvas settings saved!\", \"Thanks\", {\r\n                                    duration: 4000\r\n                                });\r\n                            });\r\n                        }\r\n                    } else\r\n                        location.reload();\r\n                } else\r\n                    location.reload();\r\n            });\r\n        });\r\n    }\r\n\r\n    deleteCanvas(canvas) {\r\n        const dialogRef = this.dialog.open(DeleteDialog, {\r\n            height: '190px',\r\n            width: '400px',\r\n        });\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            if (result) {\r\n                this.authService.deleteCanvas(canvas).subscribe((data1) => {\r\n                    this.authService.reqresCanvasGetByParticipantId(this.account._id).subscribe((data2) => {\r\n                        this.canvases = data2;\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    viewLibrary(friend) {\r\n        this.router.navigate(['/library/sort', friend.email]);\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'create-canvas.dialog',\r\n    templateUrl: 'create-canvas.dialog.html',\r\n})\r\nexport class CreateDialog {\r\n\r\n    constructor(\r\n        public dialogRef: MatDialogRef<CreateDialog>,\r\n        @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\r\n\r\n    onNoClick(): void {\r\n        this.dialogRef.close();\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'delete-canvas.dialog',\r\n    templateUrl: 'delete-canvas.dialog.html',\r\n})\r\nexport class DeleteDialog {\r\n\r\n    constructor(\r\n        public dialogRef: MatDialogRef<DeleteDialog>,\r\n        @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\r\n\r\n    onNoClick(): void {\r\n        this.dialogRef.close();\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'add-friend.dialog',\r\n    templateUrl: 'add-friend.dialog.html',\r\n})\r\nexport class AddFriendDialog {\r\n\r\n    constructor(\r\n        public dialogRef: MatDialogRef<AddFriendDialog>,\r\n        @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\r\n\r\n    onNoClick(): void {\r\n        this.dialogRef.close();\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'add-participant.dialog',\r\n    templateUrl: 'add-participant.dialog.html',\r\n})\r\nexport class AddParticipantDialog {\r\n\r\n    constructor(\r\n        public dialogRef: MatDialogRef<AddParticipantDialog>,\r\n        @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\r\n\r\n    onNoClick(): void {\r\n        this.dialogRef.close();\r\n    }\r\n}\r\n\r\nexport class mailCredentials {\r\n    id: string;\r\n    subject: string;\r\n    content: string;\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, Output } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../data-model-manager.service';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ReqresCanvas, ReqresAccount } from '../data-model-classes';\r\nimport { NgLocalization } from '@angular/common';\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent {\r\n\r\n    // Properties\r\n    private account: ReqresAccount;\r\n    private credentials: LoginCredentials;\r\n    private loginError: string;\r\n\r\n    // Initialization\r\n    \r\n    constructor(\r\n        private router: Router,\r\n        private authService: AuthService,\r\n        private jwtHelper: JwtHelperService\r\n    ) {\r\n        if (localStorage.getItem('access_token'))\r\n            try {\r\n                this.account = new ReqresAccount();\r\n                this.account = this.jwtHelper.decodeToken(localStorage.getItem('access_token'));\r\n            } catch (err) { console.log(err); }\r\n        this.credentials = new LoginCredentials();\r\n        this.credentials.email = '';\r\n        this.credentials.password = '';\r\n        this.loginError = '';\r\n    }\r\n\r\n    // Methods\r\n    onSubmit(): void {\r\n        localStorage.clear();\r\n        this.authService.login(this.credentials).subscribe(data => {\r\n            if (data) {\r\n                localStorage.setItem('access_token', data.token);\r\n                this.account = this.jwtHelper.decodeToken(data.token);\r\n                document.getElementById('theme').classList.remove(\"dark-pink-theme\");\r\n                document.getElementById('theme').classList.add(this.account.theme.replace(/\\s+/g, '-').toLowerCase() + \"-theme\");\r\n                this.router.navigate(['/library']);\r\n            } else\r\n                this.loginError = localStorage.getItem('error');\r\n        });\r\n    }\r\n\r\n    reset(): void {\r\n        this.router.navigate(['/forgotpass']);\r\n    }\r\n\r\n    logout(): void {\r\n        document.getElementById('theme').classList.remove(this.account.theme.replace(/\\s+/g, '-').toLowerCase() + \"-theme\");\r\n        localStorage.clear();\r\n        document.getElementById('theme').classList.add(\"dark-pink-theme\");\r\n        this.router.navigate(['/home']);\r\n    }\r\n}\r\n\r\n// Email and password\r\nexport class LoginCredentials {\r\n    email: string;\r\n    password: string;\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc2V0L3Jlc2V0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component} from '@angular/core';\r\nimport { AuthService } from '../data-model-manager.service';\r\nimport { Router } from '@angular/router';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-reset',\r\n  templateUrl: './reset.component.html',\r\n  styleUrls: ['./reset.component.css']\r\n})\r\nexport class ResetComponent {\r\n\r\n  // Properties\r\n  \r\n  credentials: ResetCredentials;\r\n  resetError: string;\r\n\r\n  // Initialization\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private a: AuthService,\r\n    private jwtHelper: JwtHelperService\r\n  ) { \r\n    this.credentials = new ResetCredentials();\r\n    this.credentials.email = '';\r\n    this.credentials.password = '';\r\n    this.credentials.newPassword = '';\r\n    this.credentials.newPasswordConfirm = '';\r\n    this.resetError = '';\r\n  }\r\n\r\n  // Methods\r\n  onSubmit(): void {\r\n    if(this.credentials.newPassword != this.credentials.newPasswordConfirm)\r\n      this.resetError = \"Error - New Passwords do not match\";\r\n    else {\r\n      this.a.changePassword(this.credentials).subscribe(data => {\r\n        if (data)\r\n          this.router.navigate(['/home']);\r\n        else\r\n          this.resetError = localStorage.getItem('error');\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport class ResetCredentials {\r\n  email: string;\r\n  password: string;\r\n  newPassword: string;\r\n  newPasswordConfirm: string;\r\n}","export default \".mat-form-field {\\r\\n  display: inline;\\r\\n  margin-right: 12px;\\r\\n}\\r\\n.radio-group {\\r\\n  display: -webkit-box;\\r\\n  display: flex;\\r\\n  -webkit-box-orient: vertical;\\r\\n  -webkit-box-direction: normal;\\r\\n          flex-direction: column;\\r\\n  margin: 15px 0;\\r\\n}\\r\\n.radio-button {\\r\\n  margin: 5px;\\r\\n}\\r\\nh4, h3 {\\r\\n  overflow-wrap:break-word;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci1zZXR0aW5ncy91c2VyLXNldHRpbmdzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFlO0VBQ2Ysa0JBQWtCO0FBQ3BCO0FBQ0E7RUFDRSxvQkFBYTtFQUFiLGFBQWE7RUFDYiw0QkFBc0I7RUFBdEIsNkJBQXNCO1VBQXRCLHNCQUFzQjtFQUN0QixjQUFjO0FBQ2hCO0FBQ0E7RUFDRSxXQUFXO0FBQ2I7QUFDQTtFQUNFLHdCQUF3QjtBQUMxQiIsImZpbGUiOiJzcmMvYXBwL3VzZXItc2V0dGluZ3MvdXNlci1zZXR0aW5ncy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1mb3JtLWZpZWxkIHtcclxuICBkaXNwbGF5OiBpbmxpbmU7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxMnB4O1xyXG59XHJcbi5yYWRpby1ncm91cCB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIG1hcmdpbjogMTVweCAwO1xyXG59XHJcbi5yYWRpby1idXR0b24ge1xyXG4gIG1hcmdpbjogNXB4O1xyXG59XHJcbmg0LCBoMyB7XHJcbiAgb3ZlcmZsb3ctd3JhcDpicmVhay13b3JkO1xyXG59Il19 */\"","import { Component, Inject, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../data-model-manager.service';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ReqresAccount } from '../data-model-classes';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\nexport interface DialogData {\r\n    password: string\r\n}\r\n\r\n@Component({\r\n    selector: 'app-user-settings',\r\n    templateUrl: './user-settings.component.html',\r\n    styleUrls: ['./user-settings.component.css']\r\n})\r\n\r\nexport class UserSettingsComponent implements OnDestroy {\r\n\r\n    // Properties\r\n\r\n    private account: ReqresAccount;\r\n    private newAccount: ReqresAccount;\r\n    private friends: ReqresAccount[];\r\n    private panelOpenState = false;\r\n    private loginError: string;\r\n    private displayedColumns: string[] = ['userName', 'email', 'numCanvases', 'options'];\r\n    private themes: string[] = [\"Light Blue\", \"Light Orange\", \"Dark Pink\", \"Dark Purple\", \"Dark Green\"];\r\n    private theme: string;\r\n    private tempTheme: string;\r\n    private dataSource;\r\n    private deleteError: string;\r\n\r\n    // Initialization\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private authService: AuthService,\r\n        private jwtHelper: JwtHelperService,\r\n        public dialog: MatDialog,\r\n        private snackBar: MatSnackBar\r\n    ) {\r\n        if (localStorage.getItem('access_token').length > 50)\r\n            try {\r\n                this.account = this.jwtHelper.decodeToken(localStorage.getItem('access_token'));\r\n                this.theme = this.account.theme;\r\n                this.newAccount = this.account;\r\n                this.newAccount.password = \"\";\r\n                this.authService.reqresAccountGetById(this.account._id).subscribe((data1) => {\r\n                    this.account = data1;\r\n                    this.newAccount.friends = this.account.friends;\r\n                    this.authService.reqresAccountGetByFriendId(this.account._id).subscribe((data2) => {\r\n                        this.friends = data2;\r\n                        this.dataSource = new MatTableDataSource(this.friends)\r\n                    });\r\n                });\r\n            } catch (err) {\r\n                console.error(err);\r\n                this.router.navigate(['/login']); \r\n            }\r\n        else { this.router.navigate(['/login']); }\r\n        this.deleteError = '';\r\n    }\r\n\r\n    // Methods\r\n    applyFilter(filterValue: string) {\r\n        this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    }\r\n\r\n    removeFriend(friend) {\r\n        for (let index = 0; index < this.newAccount.friends.length; index++) {\r\n            if (friend._id == this.newAccount.friends[index]) {\r\n                this.newAccount.friends.splice(index, 1);\r\n                this.friends[index].marked = true;\r\n                this.dataSource = new MatTableDataSource(this.friends)\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    changeTheme(theme: string) {\r\n        if (theme == \"Light Blue\") {\r\n            //return \"candy-theme\";\r\n            this.tempTheme = this.account.theme.replace(/\\s+/g, '-').toLowerCase();\r\n            this.tempTheme += \"-theme\";\r\n            document.getElementById('theme').classList.remove(this.tempTheme);\r\n            document.getElementById('theme').classList.add(\"light-blue-theme\");\r\n            this.account.theme = \"Light Blue\";\r\n        }\r\n        else if(theme == \"Light Orange\") {\r\n            //return \"purple-theme\";\r\n            this.tempTheme = this.account.theme.replace(/\\s+/g, '-').toLowerCase();\r\n            this.tempTheme += \"-theme\";\r\n            document.getElementById('theme').classList.remove(this.tempTheme);\r\n            document.getElementById('theme').classList.add(\"light-orange-theme\");\r\n            this.account.theme = \"Light Orange\";\r\n        }\r\n        else if (theme == \"Dark Pink\") {\r\n            //return \"dark-pink-theme\";\r\n            this.tempTheme = this.account.theme.replace(/\\s+/g, '-').toLowerCase();\r\n            this.tempTheme += \"-theme\";\r\n            document.getElementById('theme').classList.remove(this.tempTheme);\r\n            document.getElementById('theme').classList.add(\"dark-pink-theme\");\r\n            this.account.theme = \"Dark Pink\";\r\n        }\r\n        else if (theme == \"Dark Purple\") {\r\n            //return \"dark-purple-theme\";\r\n            this.tempTheme = this.account.theme.replace(/\\s+/g, '-').toLowerCase();\r\n            this.tempTheme += \"-theme\";\r\n            document.getElementById('theme').classList.remove(this.tempTheme);\r\n            document.getElementById('theme').classList.add(\"dark-purple-theme\");\r\n            this.account.theme = \"Dark Purple\";\r\n        }\r\n        else if (theme == \"Dark Green\") {\r\n            //return \"dark-purple-theme\";\r\n            this.tempTheme = this.account.theme.replace(/\\s+/g, '-').toLowerCase();\r\n            this.tempTheme += \"-theme\";\r\n            document.getElementById('theme').classList.remove(this.tempTheme);\r\n            document.getElementById('theme').classList.add(\"dark-green-theme\");\r\n            this.account.theme = \"Dark Green\";\r\n        }\r\n    }\r\n\r\n    delete(): void {\r\n        const dialogRef = this.dialog.open(DeleteAccountDialog, {\r\n            height: '250px',\r\n            width: '400px',\r\n            data: { input: this.newAccount.password }\r\n        });\r\n        dialogRef.afterClosed().subscribe(password => {\r\n            if (password)\r\n                this.newAccount.password = password;\r\n            else\r\n                this.newAccount.password = undefined;\r\n            this.loginError = undefined;\r\n            if (this.newAccount.password)\r\n                this.authService.deleteAccount(this.newAccount).subscribe(data => {\r\n                    if (data) {\r\n                        localStorage.clear();\r\n                        this.account = undefined;\r\n                        this.router.navigate(['/home']).then(() => {\r\n                            this.snackBar.open(\"Your account has been removed\", \"Thanks\", {\r\n                                duration: 4000,\r\n                            }); });\r\n                    } else {\r\n                        this.loginError = localStorage.getItem('error');\r\n                    }\r\n                });\r\n            else {\r\n                this.loginError = \"You must enter your password to delete your account\";\r\n                this.newAccount.password = \"\";\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.account)\r\n            this.changeTheme(this.theme);\r\n    }\r\n\r\n    onSubmit(): void {\r\n        const dialogRef = this.dialog.open(PasswordDialog, {\r\n            height: '250px',\r\n            width: '400px',\r\n            data: { input: this.newAccount.password }\r\n        });\r\n        dialogRef.afterClosed().subscribe(password => {\r\n            this.applyFilter(\"\")\r\n            if (password)\r\n                this.newAccount.password = password;\r\n            else\r\n                this.newAccount.password = undefined;\r\n            this.loginError = undefined;\r\n            this.theme = this.newAccount.theme;\r\n            if (this.newAccount.password)\r\n                this.authService.updateAccount(this.newAccount).subscribe(data1 => {\r\n                    if (data1) {\r\n                        localStorage.setItem('access_token', data1.token);\r\n                        this.account = this.jwtHelper.decodeToken(data1.token);\r\n                        this.snackBar.open(\"Settings updated successfully!\", \"Thanks\", {\r\n                            duration: 3000,\r\n                        });\r\n                        this.authService.reqresAccountGetByFriendId(this.account._id).subscribe((data2) => {\r\n                            this.friends = data2;\r\n                            this.dataSource = new MatTableDataSource(this.friends)\r\n                        });\r\n                    } else {\r\n                        this.loginError = localStorage.getItem('error');\r\n                        this.snackBar.open(\"Settings could not be updated:\\n\" + this.loginError, \"Oops\", {\r\n                            duration: 6000,\r\n                        });\r\n                    }\r\n                });\r\n            else {\r\n                this.loginError = \"You must enter your password to save your settings\";\r\n                this.newAccount.password = \"\";\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// Email and password\r\nexport class LoginCredentials {\r\n    email: string;\r\n    userName: string;\r\n    password: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'account-password.dialog',\r\n    templateUrl: 'account-password.dialog.html',\r\n})\r\nexport class PasswordDialog {\r\n\r\n    constructor(\r\n        public dialogRef: MatDialogRef<PasswordDialog>,\r\n        @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\r\n\r\n    onNoClick(): void {\r\n        this.dialogRef.close();\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'account-delete.dialog',\r\n    templateUrl: 'account-delete.dialog.html',\r\n})\r\nexport class DeleteAccountDialog {\r\n\r\n    constructor(\r\n        public dialogRef: MatDialogRef<DeleteAccountDialog>,\r\n        @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\r\n\r\n    onNoClick(): void {\r\n        this.dialogRef.close();\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport * as io from 'socket.io-client';\r\nimport { Observable } from 'rxjs';\r\nimport { returnData } from './canvas/canvas.component'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WebSocketService {\r\n\r\n  //node js / socket io server url to connect to\r\n  //readonly url: string = \"http://localhost:8000/\" //https://socketio-webservice.herokuapp.com/\r\n  readonly url: string = 'https://socketio-webservice.herokuapp.com/'\r\n\r\n  constructor() {}\r\n\r\n  socket: any;\r\n\r\n  connect(){ this.socket = io(`${this.url}`); }\r\n\r\n  setRoom(data: string) { this.socket.emit('setRoom', data); }\r\n\r\n  leaveRoom(data: string) { this.socket.emit('leaveRoom', data); }\r\n\r\n  listen(eventName: string) {\r\n    return new Observable((user) => {\r\n      this.socket.on(eventName, (data) => {\r\n        user.next(data);\r\n      })\r\n    });\r\n  }\r\n\r\n  emit(eventName: string, data: any) { this.socket.emit(eventName, data); }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","/* (ignored) */"],"sourceRoot":"webpack:///"}